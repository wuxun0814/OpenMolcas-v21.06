#This file is generated automatically from the OpenMolcas documentation
#
[EMIL]
:Description:D
EMIL commands
:EXPORT:B: :
A command to export environment variable in a form A=B
:EXIT:B: :
A command to terminate execution. An optional value for this command is the
return code (default value is 0)
:INCLUDE:B: :
A command to include file

    >> INCLUDE filename
:FILE:B: :
A command to inline a file in the input file. The file will be extracted into
WorkDir before the start of the calculation

    >> FILE filename
    ...
    >> EOF
:EOF:B: :
A command to close inlined file.
:SHELL:B: :
A command to define a unix command to be executed in serial.
:EXEC:B: :
A command to define a unix command to be executed in parallel. Note that any
special characters are ignored.
:LINK:B: :
A command to link two files located in WorkDir. The command is similar to '!ln
-s FILE1 FILE2' but in parallel environment it is executed in all WorkDirs. The
command assumes that FILE1 does exist, and FILE2 does not. >>LINK -FORCE allows
to link a file FILE1 which does not exist at the moment. User should avoid the
usage of LINK commands in the input.
:COPY:B: :
A command to copy one file to another. The command is similar to '!cp -f
/path/to/FILE1 FILE2' but can be used also in a parallel environment, in which
case it will take the source file and distribute to the work directories of all
processes. The destination must be located in the work directory. Note that EMIL
command does not allow to use masks in the command. If FILE1 does not exist, the
command returns an error code.
:CLONE:B: :
A command to make a clone copy of a file, doing a local copy on all slaves if
parallel. It is mostly used internally, e.g. to distribute an input file to all
WorkDirs.
:COLLECT:B: :
A command to copy one file to another, collecting files on slaves and put them
on the master if parallel
:SAVE:B: :
A command to copy one file to another, only on the master if parallel
:RM:B: :
A command to delete a file. The command is similar to '!rm FILE' but can be used
also in parallel environment. Note that EMIL command does not allow to use masks
in the command. An attempt to remove non existent file leads to an error. It is
possible to use -FORCE flag to allow deleting of non-existent file.
:EVAL:B: :
A command to evaluate numerical expression, e.g. eval A=$A+1
:DO WHILE:B: :
A command to start a loop. The loop should be terminated by SLAPAF or LOOP
module, followed by ENDDO command
:DO GEO:B: :
A command to start a constrained geometry optimization loop. The loop should be
terminated by an ENDDO command
:FOREACH:B: :
A command to loop when the value of A is in the comma or space separated list.

    >> foreach A in (B,C,D)

The list also can be written in the format "From .. To". Note that variable in
the loop must be uppercased.
:ENDDO:B: :
A command to finish the loop.
:IF ITER:B: :
A command to make conditional execution of modules/commands on iteration N
:IF:A: :
A command to make conditional execution. Allowed syntax:

  * IF ( $VAR = 7 ) (IF statement terminated by ENDIF)

  * IF ( $VAR = 7 ) GOTO JUMP (jump to label JUMP)

  * IF ( -FILE file ) (test for existence of a file, terminated by ENDIF)
:LABEL:A: :
A command to define a label. Note! Only forward jumps are allowed.
:ENDIF:B: :
Terminate IF block. Note nested if's are not allowed.
:VERBATIM:A: :
Start verbatim input
:END VERBATIM:A: :
Finish verbatim input
[ENVIRONMENT]
:Description:D
List of environment variables
:Project:A: :
This variable can be set in order to overwrite the default name of the project
you are running. The default (and recommended) value of the project name is the
name of the input file (without the file extension).
:WorkDir:A: :
This variable can be used to specify directly the directory where all files that
molcas creates are placed. See MOLCAS_WORKDIR for more options.
:CurrDir:A: :
This variable corresponds to the location of the input, and it is used as a
default location for all output files, generated by molcas modules.
:MOLCAS:A: :
This variable indicates the location of molcas. The default version of Molcas to
be used is specified at file .Molcas/molcas, located at user HOME directory.
:MOLCAS_NPROCS:B: :
This variable should be used to run molcas code in parallel. It defines the
number of computational units (cores or nodes) which will be used.
:MOLCAS_MEM:B: :
This environment variable controls the size (soft limit) of the work array (in
Mb) utilized in the programs that offer dynamic memory. It is also possible to
set up memory in Gb, e.g. 2Gb
:MOLCAS_COLOR:A: :
By default molcas uses markup characters in the output. To overwrite, set the
key to NO
:MOLCAS_DEBUGGER:A: :
This variable can be set to the name of debugger (or another code) which will be
used on top of molcas executables. The option is useful for tracing an error in
the code
:MOLCAS_DISK:A: :
The value of this variable is used to split large files into a set of smaller
datasets, as many as are needed (max. 20 subsets).
:MOLCAS_ECHO_INPUT:A: :
An environment variable to control echoing of the input. To suppress print
level, set MOLCAS_ECHO_INPUT to 'NO'.
:MOLCAS_FIM:A: :
Activate the Files in Memory I/O layer
:MOLCAS_INPORB_VERSION:B: :
Selects the version used for writing orbital files. The value should be a
version number such as 1.0 or 2.2.
:MOLCAS_KEEP_WORKDIR:B: :
If set to NO molcas will remove scratch area after a calculation. This setting
can be overwritten by running molcas with flag -clean:

  molcas - clean input
:MOLCAS_LICENSE:A: :
An environment which specifies the directory with molcas license file
license.dat. The default value of this variable is directory .Molcas/ in user
home directory.
:MOLCAS_LINK:A: :
An environment variable to control information about linking of files. By
default (MOLCAS_LINK is not set) only essential information about linking will
be printed. To increase/decrease the print level, set MOLCAS_LINK to 'Yes'/'No'.
:MOLCAS_MAXITER:A: :
An environment variable to control maximum number of iterations in DO WHILE loop
:MOLCAS_MAXMEM:A: :
An environment variable to set up a hard limit for allocated memory (in Mb). If
is not specified, then it takes value of MOLCAS_MEM. Otherwise, the
(MOLCAS_MAXMEM-MOLCAS_MEM) amount of RAM will be primarily used for keeping
files in memory (FiM), or allocating Distributed Global Arrays. Note that this
setting is available only in MOLCAS compiled without GA.
:MOLCAS_MOLDEN:A: :
If MOLCAS_MOLDEN set to 'ON' a Molden style input file will be generated
regardless of the number of orbitals.
:MOLCAS_NEW_DEFAULTS:A: :
If set to 'YES', activates new defaults (e.g. RICD, IPEA=0.0)
:MOLCAS_NEW_WORKDIR:B: :
If set to YES molcas will never reuse files in scratch area. This setting can be
overwritten by running molcas with flag -old:

  molcas - old input
:MOLCAS_OUTPUT:B: :
This variable can alter the default directory for extra output files, such as
orbitals files, molden files, etc. If set, molcas will save output files to the
specified directory. The directory name can be set in the form of absolute PATH,
or relative PATH (related to submit directory) A special value 'WORKDIR' will
keep all output files in WorkDir. A special value 'NAME' will create a
subdirectory with a name of Project. If the variable is not set, all output
files will be copied or moved to the current directory. Default value can be
forced by MOLCAS_OUTPUT=PWD
:MOLCAS_PRINT:B: :
MOLCAS_PRINT variable controls the level of output. The value could be numerical
or mnemonic: SILENT (0), TERSE (1), NORMAL (2), VERBOSE (3), DEBUG (4) and
INSANE (5).
:MOLCAS_PROJECT:B: :
If set to the value NAME, molcas will use the prefix of the input file as a
project name, If set to the value NAMEPID, the Project name still will be
constructed from the name of input file, however, the name of scratch area will
be random
:MOLCAS_PROPERTIES:A: :
If MOLCAS_PROPERTIES is set to 'LONG' properties with the individual MO
contributions will be listed.
:MOLCAS_RANDOM_SEED:A: :
Set to an integer to provide a fixed seed for operations that use a random
number.
:MOLCAS_REDUCE_PRT:A: :
If set to NO, print level in DO WHILE loop is not reduced
:MOLCAS_REDUCE_NG_PRT:A: :
If set to NO, print level in numerical_gradient is not reduced.
:MOLCAS_SAVE:B: :
This variable can alter the default filenames for output files. If not set
(default), all files will overwrite old files. If set to 'INCR' all output files
will get an incremental filenames. If set to 'ORIG' - an existent file will be
copied with an extension '.orig'
:MOLCAS_TIME:A: :
If set, switch on timing information for each module
:MOLCAS_TIMELIM:A: :
Set up a timelimit for each module (in seconds). By default, the maximum
execution time is set to unlimited. Note that this setting is available only in
MOLCAS compiled without Global Arrays.
:MOLCAS_TRAP:A: :
If set to OFF molcas modules will continue to be executed, even if a non-zero
return code was produced.
:MOLCAS_VALIDATE:B: :
If set to YES, the input for each module will be validated against the
documented syntax, and the calculation will stop if it does not pass. If set to
CHECK, the input will be validated, but the calculation will continue, although
the program itself may stop. If set to FIRST, the whole input file will be
validated prior to the calculation.
:MOLCAS_WORKDIR:B: :
A parent directory for all scratch areas. It can be set to an absolute PATH
(recommended), to a relative PATH, or to a special value PWD (to use current
directory for scratch files)
[ALASKA]
:Description:D
This program computes the first derivatives of the one- and two-electron
integrals with respect to the nuclear positions. The derivatives are not stored
on files, but contracted immediately with the one- and two-electron densities to
form the molecular gradients.
:Test:B: :
With this keyword the program will process only the input. It is a debugging aid
to help you check your input.
:NAC:B: :
Requests a calculation of the nonadiabatic coupling vector between the two
specified roots in a SA-CASSCF calculation.
:NOCSF:A: :
In a NAC calculation, neglects the so-called CSF contribution.
:Oneonly:A: :
Compute only the nuclear repulsion and one-electron integrals contribution to
the gradient. The default is to compute all contributions to the molecular
gradient.
:Cutoff:A: :
Specify the threshold for ignoring contributions to the molecular gradient. The
prescreening is based on the 2nd order density matrix and the radial overlap
contribution to the integral derivatives. The default is 1.0d-7.
:OFEM:A: :
Orbital-Free Embedding gradient calculation, available only in combination with
Cholesky or RI integral representation. The runfile of the environment subsystem
renamed AUXRFIL is required. The keyword OFEM requires the specification of two
functionals in the form fun1/fun2 (see the manual for available functionals)
:DFMD:A: :
In combination with OFEM, specifies the fraction of correlation potential to be
added to the OFE potential (zero for KSDFT and one for HF).
:POLD:B: :
The gradient is printed in the old format. Note: by default gradient is not
printed any longer.
:PNEW:B: :
The gradient is printed in the new human-readable format.
:Verbose:B: :
The output will be a bit more verbose.
:Show:B: :
The gradient contributions will be printed.
:Numerical:B: :
Forces the use of numerical gradients even if analytical ones are implemented.
The default is to use analytical gradients whenever possible.
:Root:A: :
Specifies which root to compute the gradient the geometry for, if there is more
than one root to choose from. In a RASSCF optimization, the default is to
compute the gradient for the same root as is relaxed. In a MS-CASPT2
calculation, the default is to compute it for root 1.
:Delta:A: :
For use with numerical gradients only! The displacement for a given center is
chosen as the distance to the nearest neighbor scaled by a factor. This factor
can be set through the DELTa keyword. The default is 0.01.
:KeepOldGradient:A: :
Keep the existing gradient for constrained coordinates when doing numerical
differentiation.
[AVERD]
:Description:D
Computes average densities and corresponding natural molecular orbitals
:Title:B: :
Title of the calculation
:WSet:B: :
Number of input sets of orbitals and relative weight for each of them.
:Print:B: :
Print level. Default is 1.
:Orbitals:B: :
This keyword signifies that the densities should be created from average
orbitals in the NAT*** files, not directly from the density matrices in the
RUN*** files.
:Occupation:B: :
The number of average orbitals with an occupation higher than this number is
reported for each symmetry. The default is 1.0d-5.
[CASPT2]
:Description:D
The CASPT2 program is used to compute a dynamic correlation correction to a
RASSCF energy, and optionally to the density matrix and properties. It can be
regarded as a Møller-Plesset perturbation method through second order (MP2),
except that is is equally useful for general RASSCF root functions, also excited
states, regardless of symmetry and multiplicity.
:Title:B: :
Enter one title line for this job.
:Multistate:B:GUI:list:
Enter the number of states to include in the CASPT2 calculation followed by a
list of numbers indicating which CASSCF roots to use. Alternatively, enter "all"
to include all roots optimized in the CASSCF calculation.
:XMultistate:B:GUI:list:
Enter the number of states to include in the CASPT2 calculation followed by a
list of numbers indicating which CASSCF roots to use. Alternatively, enter "all"
to include all roots optimized in the CASSCF calculation.
:RMultistate:B:GUI:list:
Enter the number of states to include in the CASPT2 calculation followed by a
list of numbers indicating which CASSCF roots to use. Alternatively, enter "all"
to include all roots optimized in the CASSCF calculation.
:DWMS:B:GUI:number:
Enter a non-negative value specifying the exponent zeta used to compute the
weights.
:DWType:B:GUI:number:
Set to either 1, 2 or 3 to select the exponent used to obtain the weights in a
XDW-CASPT2 calculation.
:IPEAshift:B:GUI:number:
Parameter (Default 0.25), adds a shift dependent on density matrix for active
orbitals, reducing overestimated correlation energy for open shells.
:Imaginary:A:GUI:number:
Add an imaginary shift (Default 0.0) to eliminate weak intruders.
:Shift:A:GUI:number:
Add a shift to the external part of the zero order Hamiltonian, which may shift
away weak intruders. Imaginary shift is better.
:AFREeze:A: :
This keyword is used to select atoms for defining the correlation orbital space
for the CASPT2 calculation. Inactive orbitals with Mulliken populations smaller
than a given threshold on the selected atoms will be frozen and virtual orbitals
will be deleted. The next line give the number of atoms and selection
thresholds. An additional line gives the names of the atoms as defined in the
Seward input. Use with care! Not much tested yet, but is very effective in
reducing the computational time for CASPT2 in large molecules.
:LOVC:A: :
"Freeze-and-Delete" type of CASPT2, available only in connection with Cholesky
or RI. Needs (pseudo)canonical orbitals from RASSCF. An example of input for the
keyword LOVC is the following:

    LovCASPT2
     0.3
    DoMP2  (or DoEnv)

In this case, both occupied and virtual orbitals (localized by the program) are
divided in two groups: those mainly located on the region determined
(automatically) by the spatial extent of the active orbitals ("active site"),
and the remaining ones, which are obviously "outside" this region. The value of
the threshold (between 0 and 1) is used to perform this selection (in the
example, 30% of the gross Mulliken population of a given orbital on the active
site). By default, the CASPT2 calculation is performed only for the correlating
orbitals associated with the active site. The keyword DoMP2 is optional and
forces the program to perform also an MP2 calculation on the "frozen region".
Alternatively, one can specify the keyword VirAll in order to use all virtual
orbitals as correlating space for the occupied orbitals of the active site. A
third possibility is to use the keyword DoEnv to compute the energy of the
environment as total MP2 energy minus the MP2 energy of the active site.
:FNOC:A: :
Performs a Frozen Natural Orbital (FNO) CASPT2 calculation, available only in
combination with Cholesky or RI integral representation. Needs (pseudo)canonical
orbitals from RASSCF. An example of input for the keyword FNOC is the following:

    FNOCaspt2
     0.4
    DoMP2

The keyword FNOC has one compulsory argument (real number in ]0,1]) specifying
the fraction of virtual orbitals (in each irrep) to be retained in the
FNO-CASPT2 calculation. The keyword DoMP2 is optional and used to compute the
(estimated) correction for the truncation error.
:Focktype:B:GUI:select(G1,G2,G3):
Present choices: G1, G2, G3. Refers to modified Fock matrices (See manual). It
is better to use the default IPEA shift.
:Frozen:A:GUI:list:
Replace default number of frozen orbitals of each symmetry type with user input.
Default: Those that were frozen in the RASSCF, or standard table dependent on
basis set, whichever is larger.
:Deleted:A: :
Replace default number of deleted orbitals of each symmetry type with user
input. Default: Those that were deleted in the RASSCF.
:Density:A: :
Force calculation of accurate density matrix from the CASPT2 wave function. Used
for dipole moments, etc.
:RFPert:A: :
Add reaction field from environment as static perturbation to the one-electron
Hamiltonian. The perturbation is extracted from RUNOLD if it exists, otherwise
from RUNFILE.
:RLXRoot:A: :
Which root to use in a geometry optimization of a multi-state CASPT2 wave
function. Default: root defined by RLXROOT in the RASSCF module, if any, else
the highest root.
:Thresholds:A: :
The first threshold is for removing redundant excitations, the second is for
removing linear dependences of standardized linear equation system. Default:
1.0d-10 and 1.0d-08.
:MaxIter:A: :
The maximum allowed number of iterations. (Zero iterations gives diagonal
approximation. Default:20)
:Convergence:A: :
Convergence threshold for norm of residual vector. Default 1.0d-06
:NoMix:A: :
Do not produce a JobMix file, even if this is a multi-state calculation.
:NoMultistate:B: :
Do just a series of independent CASPT2 runs, without any multi-state coupling.
Useful when many roots are required, but multi-state is not needed, or desired.
:ONLY:A: :
This keyword requires the MULTistate or XMULtistate keyword, and is followed by
an integer specifying one of the roots. In a Multistate calculation, it requests
to compute the energy of only the specified root. However, the effective
Hamiltonian coupling terms between this root and all the others included in the
Multistate treatment will be computed and printed out. This output will be used
in a subsequent calculation, in conjunction with the EFFE keyword.
:EFFE:A: :
This keyword requires the MULTistate or XMULtistate keyword. It is followed by
the number of states and a matrix of real numbers, specifying the effective
Hamiltonian couplings, as provided in a previous calculation using the ONLY
keyword. In a (Extended) Multistate calculation over, e.g., 3 states, 3 separate
calculations with the ONLY keyword will be performed, possibly on separate
computing nodes, so as to speed up the overall process. The three couplings
vectors will be given to the EFFE keyword in matrix form, i.e. the first column
is made by the couplings of the first computed root, etc. The program will then
quickly compute the (Extended) Multistate energies.
:NoOrbitals:B: :
Skip printing of the MO orbitals.
:Properties:B: :
Compute (approximate) density matrix, natural orbitals and properties.
:NoTransform:A: :
Prevent transformation to pseudo-canonical orbitals, even if CASPT2 would
assumed this is needed (Default is: transform when assumed necessary.)
:Transform:A: :
Demand transformation to pseudo-canonical orbitals even if this was specified as
option of CASSCF so it ought to be unnecessary. (Default is: transform only when
assumed necessary.)
:OFEM:A: :
Adds an Orbital-Free Embedding potential to the Hamiltonian. Available only in
combination with Cholesky or RI integral representation. No arguments required.
The runfile of the environment subsystem (AUXRFIL) must be available.
:GHOS:A: :
Excludes from PT2 treatment orbitals localized on ghost atoms. A threshold for
this selection must be specified.
:OUTPut:B: :
BRIEF gives a very short orbital listing, DEFAULT a normal output, and LONG a
detailed listing.
:PRWF:A: :
Threshold for printing CI coefficients. Default 0.05.
:PRSD:A: :
Activate printing of CSFs in terms of determinants.
:CHEMps2:B: :
Activate DMRG-CASPT2 calculation with Molcas-CheMPS2 interface.
:CUMUlant:B: :
Activate DMRG-cu(4)-CASPT2 calculation with Molcas-Block interface.
[CASVB]
:Description:D
CASVB is a program for performing general valence bond calculations. It can be
used in two basic modes:

  a) variational optimization of quite general types of nonorthogonal MCSCF or
     modern valence bond wavefunctions, or

  b) representation of CASSCF wavefunctions in modern valence form, using
     overlap- (relatively inexpensive) or energy-based criteria.
:END of Input:B: :
This marks the end of the input to the program and is the only compulsory
keyword.
:FROZen:A: :
Specifies frozen orbitals, as in the RASSCF program. This keyword is generally
not required because the value stored in the job interface file or used by the
RASSCF program will normally be appropriate.
:INACtive:A: :
Specifies inactive orbitals, as in the RASSCF program. This keyword is generally
not required because the value stored in the job interface file or used by the
RASSCF program will normally be appropriate.
:NACTel:A: :
Specifies number of active electrons, as in the RASSCF program. This keyword is
generally not required because the value stored in the job interface file or
used by the RASSCF program will normally be appropriate.
:RAS2:A: :
Specifies RAS2 orbitals, as in the RASSCF program. This keyword is generally not
required because the value stored in the job interface file or used by the
RASSCF program will normally be appropriate.
:SPIN:A: :
Specifies the total spin, as in the RASSCF program. This keyword is generally
not required because the value stored in the job interface file or used by the
RASSCF program will normally be appropriate.
:SYMMetry:A: :
Specifies the CASSCF wavefunction symmetry, as in the RASSCF program. This
keyword is generally not required because the value stored in the job interface
file or used by the RASSCF program will normally be appropriate.
:CON:B: :
Specifies spatial VB configurations in terms of the active orbitals. The default
is a single configuration of singly-occupied orbitals.
:COUPle:A: :
Specifies the scheme for constructing the spin eigenfunctions to be used.
Possible values: KOTANI (default), SERBER, RUMER, PROJECT, LTRUMER
:WAVE:A: :
Specifies number of electrons and spins to be used with a configuration list.
Defaults are the values used by RASSCF.
:STARt:A: :
Specifies various input files. Default is to take the required information from
JOBOLD.
:SAVE:A: :
Specifies output files. By default, the VB CI vector is written to the file
JOBIPH.
:GUESs:B: :
Initiates guess input. Sub-keywords are ORB and STRUC, as described in the
manual. The ENDGUESs keyword terminates the guess input.
:ORBPerm:A: :
Permutes the VB orbitals, and modifies phases, as described in the manual.
:CRIT:B: :
Defines the optimization criterion. Possible values: OVERLAP (default) or
ENERGY.
:MAXIter:A: :
Specifies the maximum number of iterations to be used. Default value is 50.
:CASProj:A: :
Defines structure coefficients from transformed CASSCF wavefunction.
:NOCASProj:A: :
Disables CASProj
:SADDLe:A: :
Defines optimization onto an n-th order saddle point.
:INIT:A: :
Requests a sequence of preliminary optimizations which aim to minimize the
computational cost while maximizing the likelihood of stable convergence. This
is the default behaviour when no wavefunction guess is available and no OPTIM
keyword has been specified.
:NOINIT:A: :
Disables INIT
:METHod:A: :
Selects optimization algorithm. Possible values: FLETCHER, TRIM, TRUSTOPT,
DAVIDSON, STEEP, VB2CAS, AUGHESS, AUG2, CHECK, DFLETCH, NONE or SUPER. The
default algorithm chosen by CASVB will usually be adequate.
:TUNE:A: :
Enables the input of individual parameters to be used in the optimization
procedure. Expert use only. See manual.
:OPTIm:A: :
Defines one or more optimization steps. Subcommands can be any optimization
declarations, as well as any symmetry or constraints specifications. Usually
omitted if only one optimization step is required. Terminated by the keyword
ENDOPTIm.
:ALTErn:A: :
Defines alternating optimizations over two or more optimization steps (see
manual). Terminated by the ENDALTErn keyword.
:SYMElm:A: :
Initiates the definition of a symmetry operation (see manual). Sub-keywords are
IRREPS, COEFFS, or TRANS. Terminated with ENDSYMElm.
:ORBRel:A: :
Specifies the relationship between two VB orbitals under symmetry operation(s)
defined by SYMElm. See manual.
:SYMProj:A: :
Projects the VB wavefunction onto given irrep(s). See manual.
:NoSYMProj:A: :
Disables SYMProj
:FIXOrb:A: :
Freezes a subset of VB orbitals (i1, i2, ...).
:FIXStruc:A: :
Freezes a subset of structure coefficients (i1, i2, ...).
:DELStruc:A: :
Deletes a subset of structures from the wavefunction (i1, i2, ...). Other
possible values: ALL or NONE.
:ORTHcon:A: :
Initiates input of orthogonality constraints information. Sub-keywords are ORTH,
PAIRS, GROUP, STRONG and FULL, as described in the manual. The ENDORTHcon
keyword terminates the ORTHcon input.
:CIWEights:A: :
Prints weights of VB structures in the CASSCF wavefunction. Options are the same
as for VBWEights.
:REPOrt:A: :
Outputs orbital/structure coefficients and derived information. Terminated by
ENDREPOrt.
:SCORr:A: :
Performs spin-correlation analysis. Only implemented for spin-coupled
wavefunctions
:NOSCORr:A: :
Disables SCORr
:VBWEights:A: :
Prints weights of VB structures. Possible values CHIRGWIN, LOWDIN, INVERSE, ALL
and NONE.
:PREC:B: :
Adjusts the precision for printed quantities. See manual.
:PRINT:B: :
Controls the amount of output. See manual.
:SHSTruc:A: :
Prints overlap and Hamiltonian matrices between VB structures.
:STATs:B: :
Prints timing and usage statistics.
[CCSDT]
:Description:D
The CCSDT set of programs performs the iterative ROHF CCSD procedure, optionally
followed by the (T) calculation contribution. It requires the JOBIPH file
produced by RASSCF, and TRAONE and TRAINT files produced by MOTRA.
:TITLe:B: :
Followed by precisely one title line, not beginning with a blank.
:CCSD:B: :
Specifies that only CCSD calculation will follow.
:CCT:B: :
Specifies that after CCSD, also the noniterative T3 calculation will follow.
:ADAPtation:B: :
Sets the type of CCSD amplitudes spin adaptation.

  0 -- None

  1 -- T2 DDVV

  2 -- T2 DDVV + T1 DV

  3 -- Full T2 and T1 spin adaptation (doublets only)

  4 -- Full T2 adaptation without SDVS coupling (doublets only)
:DENOminators:B: :
Sets the type of denominators in the CCSD procedure.

  0 -- Diagonal Fock matrix elements

  1 -- Spin averaged diagonal Fock matrix elements

  2 -- Orbital energies
:SHIFts:A: :
On the following line the level shift values for occupied and virtual orbitals
needs to be specified, typically around 0.0 - 0.5.
:TRIPles:B: :
Sets the type of triples contribution calculation.

  0 -- CCSD

  1 -- CCSD + T(CCSD) (Urban et al.)

  2 -- CCSD(T) (Raghavachari et al.)

  3 -- CCSD(T) (Watts et al.)
:T3DEnominators:A: :
Sets the type of denominators used in the (T) calculation procedure.

  0 -- Diagonal Fock matrix elements

  1 -- Spin averaged Fock matrix elements

  2 -- Orbital energies
:T3SHifts:A: :
This keyword is followed by two numbers that set the levelshift values for
occupied and virtual orbitals in (T) calculations. The default values (0,0)
should not normally be changed.
:ITERations:B: :
Sets the maximum number of CCSD iterations (Default:30).
:ACCUracy:B: :
This keyword sets the convergence criterion on CCSD energy.
:EXTRapolation:B: :
Switches the DIIS extrapolation on. Two additional parameters are required on
the next line: the first iteration to employ DIIS and the number of previous
iterations to use for new prediction.
:PRINtlevel:A: :
Sets the amount of the program verbosity as 0..2. Default: 0.
:LOAD:A: :
This keyword is followed by the line that specifies the name, where the restart
information was saved.
:RESTart:A: :
Followed by two lines. LINE 1: Choose restart conditions. 0=nothing saved,
1=just save restart info, 2=also start using restart info. LINE2: The restart
file name (at most 6 char).
:IOKEy:A: :
Specifies the file type handling, with Fortran I/O being the default.

  1 -- Fortran I/O

  2 -- MOLCAS DA I/O
:MACHinetyp:A: :
This keyword sets the preferred type of matrix multiplication. On the following
line n, limit must be specified:

  n=1 -- standard matrix multiplication is performed

  n=2 -- A(T)*B matrix multiplication is performed, if size(A)/size(B) is less
         than limit. See manual!
[CHCC]
:Description:D
The CHCC is a Closed-Shell Coupled-Clusters Singles and Doubles program based
exclusively on the Cholesky (or RI) decomposed 2-electron integrals aimed
towards calculation of large system. Use of point-group symmetry is not
implemented. It requires RUNFILE from the SCF module and Cholesky vectors from
SEWARD.
:TITLe:B: :
Enter up to ten title lines. Do not put any keyword in the beginning of a title
line.
:FROZen:B: :
Specifies number of inactive occupied orbitals in the CCSD procedure
:DELEted:B: :
Specifies number of inactive virtual orbitals in the CCSD procedure
:LARGe:B: :
Specifies the segmentation of virtual orbitals
:SMALl:B: :
Specifies the auxiliary segmentation of virtual orbitals
:CHSEgmentation:B: :
Specifies the block size of auxiliary (Cholesky/RI) index
:MHKEy:B: :
Specifies if BLAS libraries (=1) or hard-code fortran is used.
:NOGEnerate:B: :
Pre-CCSD steps, like integrals generation, etc. are skipped.
:ONTHefly:B: :
Integrals with 3- and 4-virtual indexes are generated "on-the-fly".
:PRECalculate:B: :
All integrals are precalculated prior to the CCSD iterations.
:NODIstribute:B: :
All integrals are precalculated on all computational nodes.
:JOINlkey:B: :
Sets the type of parallel integral generation

  0 -- None (debug)

  1 -- Minimal (low network bandwdith required)

  2 -- Medium

  3 -- Full (high network bandwidth required)
:MAXIterations:B: :
Maximum number of CCSD iterations.
:RESTart:B: :
Restart from previous run. Currently disabled.
:THREshold:B: :
Convergence threshold for the CCSD correlation energy.
:PRINtkey:A: :
Sets the print level

  1  -- Minimal

  2  -- Minimal + timings

  10 -- Debug
[CHT3]
:Description:D
CHT3 is a Closed-Shell Coupled-Clusters perturbative triples program based
exclusively on the Cholesky (or RI) decomposed 2-electron integrals aimed
towards calculation of large systems on highly parallel architectures. Use of
point-group symmetry is not implemented. It requires RUNFILE from the SCF
module, T1 and T2 excitation amplitudes and MO transformed Cholesky/RI vectors
from CHCC.
:TITLe:B: :
Enter up to ten title lines. Do not put any keyword in the beginning of a title
line.
:FROZen:B: :
Specifies number of inactive occupied orbitals in the (T) procedure
:DELEted:B: :
Specifies number of inactive virtual orbitals in the (T) procedure
:LARGe:B: :
Specifies the segmentation of virtual orbitals
:MHKEy:B: :
Specifies if BLAS libraries (=1) or hard-code fortran is used.
:NOGEnerate:B: :
Pre-(T) steps, like integrals generation, etc. are skipped.
:NOTRiples:B: :
Program stops after generation of temporary integral files
:ALOOp:B: :
Specifies the range of triplets of virtual orbitals blocks from the fist of two
parts of (T) program to be calculated.
:BLOOp:B: :
Specifies the range of triplets of virtual orbitals blocks from the second of
two parts of (T) program to be calculated.
:PRINtkey:A: :
Sets the print level

  1  -- Minimal

  2  -- Minimal + timings

  10 -- Debug
[CMOCORR]
:Description:D
The CMOCORR program compares the orbital spaces of two orbitals files.
:DoMetric:B: :
Compare the metric of the two files. If the files correspond to different
geometries the metric will be different.
:DoSpaces:B: :
Compare the orbitals spaces of the two files. This keyword implies DoMetric.
:DoOrbitals:B: :
Compare the orbitals one by one in the two files. This keyword implies DoMetric
and DoSpaces.
:SortCMO:B: :
Sort the orbitals according to the type index. This might be necessary if one of
the files are created by LUSCUS for example.
:Thresholds:B: :
Overlap values (two numbers) below which orbitals from the two files will be
reported as having small overlap. For the first number the best match in the
reference file is located, for the second number no search is done.
:End of input:B: :
This keyword terminates the reading of the input.
[CPF]
:Description:D
This program performs standard SDCI calculations, or CPF calculations as
described by Ahlrichs; MCPF calculations(Chong) or ACPF calculations(Gdanitz).
In each case, the reference is normally a single determinant, possibly with a
few high-spin coupled open shells, but low-spin cases are also possible. It was
originally written by Siegbahn and Blomberg, and has only been slightly modified
to fit MOLCAS. It requires a file generated by the GUGA program. See manual.
:Title:B: :
Followed by a title line
:SDCI:B: :
Out of the choices SDCI, CPF, MCPF or ACPF, precisely one must be used.
Single-reference SDCI calculation.
:CPF:B: :
Out of the choices SDCI, CPF, MCPF or ACPF, precisely one must be used.
Single-reference CPF calculation (Ahlrichs, see manual).
:MCPF:B: :
Out of the choices SDCI, CPF, MCPF or ACPF, precisely one must be used.
Single-reference MCPF calculation (Chong, see manual).
:ACPF:B: :
Out of the choices SDCI, CPF, MCPF or ACPF, precisely one must be used.
Single-reference ACPF calculation (Gdanitz, see manual).
:Restart:A: :
Restart the calculation from a previous calculation.
:ThrPrint:A: :
Set threshold on CI coefficients to be printed. Default 0.05.
:EConvergence:A: :
Set energy threshold for convergence. Default 1.0D-8.
:PrintLevel:A: :
Set print level. Default is 5.
:MaxIterations:A: :
Set maximum iterations. Default 20, max possible 75.
:Frozen:A: :
Specify, for each symmetry, how many orbitals to keep uncorrelated in addition
to any that were frozen already by MOTRA.
:Deleted:A: :
Specify, for each symmetry, how many orbitals to delete in addition to any that
were deleted already by MOTRA.
:Low:A: :
Specifies a low spin case, see manual.
:MaxPulay:A: :
Number of iterations until DIIS extrapolation is switched on.
:LevShift:A: :
Enter level shift to use in the equation solver. Default is 0.3.
[DIMERPERT]
:Description:D
This module is still undocumented
[DMRGSCF]
:Description:D
The DMRGSCF program generates MPS wave functions based on a given CAS model. It
requires the one- and two-electron integral files generated by SEWARD, and
starting orbitals from either a previous DMRGSCF/RASSCF calculation or from any
of the other wave function generating programs, or from the GUESSORB facility.
The resulting orbitals can be visualized, e.g. by LUSCUS.
:ActiveSpaceOptimizer:B: :
Sets the DMRG program to be used as active space optimizer
:Fiedler:B: :
Enables Fiedler vector ordering.
:CIDEAS:B: :
Enables CI-DEAS.
:max_bond_dimension:B: :
Maximum bond dimension.
:nsweeps:B: :
Maximum number of DMRG sweeps.
:donotdelete:B: :
Restart DMRGSCF optimization from an existing QCMaquis checkpoint.
:fcidump:B: :
Dump integrals on file FCIDUMP.
:soccupy:B: :
Set HF determinant start guess for MPS wave functions.
:NEVPT2prep:B: :
Prepare input for higher-order RDM/TDM evaluation.
[DYNAMIX]
:Description:D
The DYNAMIX program allows to do molecular dynamics simulations using the
velocity Verlet algorithm. It has also the capability to detect non-adiabatic
transition using a surface hopping algorithm.
:VELVerlet:B: :
Specifies the velocity Verlet algorithm for MD simulation.
:DTime:A: :
Defines the time step of the MD simulation.
:VELOcities:A: :
Specifies the initial velocities.
:THERmostat:A: :
Keyword for temperature control.
:TEMPerature:A: :
Keyword to state the temperature of the simulation.
:HOP:B: :
Specifies the maximum number of transitions between electronic states.
:OUT:A: :
Enables reduced dimensionality by projecting out the selected modes. Specify an
integer N, and provide N files out.00X.xyz.
:IN:A: :
Enables reduced dimensionality by keeping only the selected modes. Specify an
integer N, and provide N files in.00X.xyz.
:RESTart:A: :
Restarts the trajectory at a given time, which is specified on the next line.
:H5REstart:A: :
Restarts a trajectory calculation from an HDF5 file, whose name is given on the
next line.
[EMBQ]
:Description:D
This program computes the electrostatic embedding potential from known lattice
cell parameters and ionic charges
:ELMO:B: :
Keyword, followed by a single integer, which specifies the largest electric
multipole to be eliminated. A non-negative integer has to be supplied as
argument. Default value is 0.
:UCVE:B: :
Specifies parameters of the crystal cell (in Angstroms). Three lines, containing
three real numbers each, have to be supplied:

1st line -- components of the cell vector a1; 2nd line -- components of the cell
vector a2; 3rd line -- components of the cell vector a3.
:UCV1:B: :
Keyword, followed by three real numbers. Specifies components of the lattice
cell vector a1 (in Angstroms). Can be used as an alternative to keyword
UCVEctors. Should be used together with keywords UCV2 and UCV3. There is no
default value.
:UCV2:B: :
Keyword, followed by three real numbers. Specifies components of the lattice
cell vector a2 (in Angstroms). Can be used as an alternative to keyword
UCVEctors. Should be used together with keywords UCV1 and UCV3. There is no
default value.
:UCV3:B: :
Keyword, followed by three real numbers. Specifies components of the lattice
cell vector a3 (in Angstroms). Can be used as an alternative to keyword
UCVEctors. Should be used together with keywords UCV1 and UCV2. There is no
default value.
:UCAT:B: :
Keyword, followed by a single integer equal to the number of atoms in the
lattice cell and a list of the corresponding coordinates and ionic charges.
:TETR:A: :
Keyword, followed by a single line containing eight integers equal to either 0
or 1. Specifies which tetrahedra are used to complement the crystal cell with
EMBQ charges. Each integer corresponds to a single tetrahedron that is
associated with a single corner of the crystal cell (see User's Guide for
details). The tetrahedron is used if the corresponding parameter equals to 1 and
not used if it equals to 0. Default: use all eight tetrahedra.
:SHIF:A: :
Keyword, followed by a single real number. Specifies the shift (in fractional
coordinates) of the tetrahedra from the cell corners outwards. Default value is
zero.
:NANO:A: :
Keyword followed by two input lines. The first line contains a single integer
number (n) which specifies the shape of a nano-cluster generated using the
modified cells. Possible values of n:

  1 -- to generate a cubic nano-cluster;

  2 -- to generate a block nano-cluster;

  3 -- to generate a spherical nano-cluster.

The size of the nano-cluster is defined in the following line. The number of
input parameters depends on the shape of the nano-cluster. For a cube (n=1),
provide one integer k to generate a nano-cluster of (2k+1)^3 unit cells. For a
block (n=2), provide six integers k1 k2 m1 m2 n1 n2 to generate a nano-cluster
of

    (k2-k1+1)×(m2-m1+1)×(n2-n1+1)

unit cells. For a sphere (n=3), provide one real number to generate a
nano-cluster of radius R (in Angstroms). This keyword can be used instead of
keywords NCCube, NCBLock, and NCSPhere. Note that only one nano-cluster will be
generated. Default: the nano-cluster is not generated.
:NCCU:A: :
Keyword, followed by a single integer number k. Specifies the shape and size of
the nanocluster constructed from the modified unit cells. The nanocluster is
generated as a block of (2k+1)×(2k+1)×(2k+1) cells along the lattice vectors a1,
a2, and a3, respectively. Default: the nanocluster is not generated.
:NCBL:A: :
Keyword followed by six integers: k1 k2 m1 m2 n1 n2 Specifies the shape and size
of the nanocluster constructed from the modified unit cells. The nanocluster is
generated as a block of [(k2-k1)+1]×[(m2-m1)+1]×[(n2-n1)+1] cells along the
lattice vectors a1, a2, and a3, respectively. Default: the nanocluster is not
generated.
:NCSP:A: :
Keyword followed by a single real number. Specifies the shape and radius (in
Angstroms) of the nano-cluster constructed from the modified unit cells.
Default: the nanocluster is not generated.
:PRIN:A: :
Keyword, followed by a single integer number. Specifies the general print level:

  0 -- minimal print out;

  1 -- intermediate print out;

  2 -- full print out.

Default: use the global MOLCAS print level.
:CALC:A: :
Keyword, followed by a single integer number. Requests calculation of the
electrostatic potential and field at all centres of the nano-cluster. Possible
values are:

  0 -- calculate neither the potential nor the field (default);

  1 -- calculate the potential only;

  2 -- calculate the potential and field.
:QMCL:A: :
Keyword, followed by a single integer equal to the number of atoms in the QM
cluster and a list of the Cartesian corresponding coordinates (in Angstroms).
Default: number of the QM cluster atoms is zero.
[ESPF]
:Description:D
The ElectroStatic Potential Fitted (ESPF) method adds contributions to the
one-electron hamiltonian to compute the interaction between the charge
distribution and any external electrostatic potential, field, and field
derivatives. This module may be used for QM/MM computations. Use of symmetry is
forbidden.
:External potential:B: :
Specify how the external potential is given. Can be given inline or in another
file.
:Title:B: :
One line following this one is regarded as title.
:MultipoleOrder:B: :
Give the order of the ESPF operators. Only 0 (charge) or 1 (charge and dipole).
:Grid:A: :
Modify the grid specifications.
:Show:A: :
Printing of the ESPF.DATA file.
:LAMorokuma:A: :
Set on the Morokuma's scheme for scaling the link atom positions.
:MMIterations:B: :
Maximum number of microiterations to optimize the MM subsystem (with Gromacs
interface).
:MMConvergence:B: :
Convergence for the MM microiterations (with Gromacs interface).
[EXPBAS]
:Description:D
This module is used to manipulate orbital files. By default it is used to expand
the orbital file to a larger basis set. This feature is available only for
generally contracted basis sets (ANO or CC). The original orbital file INPORB is
needed. By default, the Runfile, RUNFIL1, from the small calculation is also
needed. One runs also the GATEWAY module with the larger basis set to obtain the
corresponding runfile, RUNFIL2. The program will produce the file EXPORB, which
can be used as the input orbital file for calculations using the larger basis
set. The DESYmmetrize keyword is used to transform orbitals with symmetry to C1
symmetry. If one wants to desymmetrize the orbitals without expanding the basis
set, the keyword NOEXpand must be used. When the DESY keyword is used, in
combination with NOEXpand, only the INPORB file is needed. One runs the GATEWAY
module with the same basis set of the original orbital file to obtain the
corresponding runfile. The program will produce in output the DESORB file. In
any subsequent calculation using the DESORB file, modified Cartesian coordinates
are required, the ones internally generated by Molcas and printed out in the
GATEWAY section of the output.
:NOEX:B: :
Deactivates the basis set expansion.
:DESY:B: :
Activates the basis set desymmetrization.
:FileOrb:B: :
The next line specifies the filename containing the original orbitals that will
be expanded to the larger basis set. By default a file named INPORB will be
used.
[EXTF]
:Description:D
This module calculates the contribution of an external force that is acting on
the system.
:LINEar:B: :
This keyword enables the linear external force between two atoms. This keyword
works by specifying 4 parameters, each one in its own line after the keyword
itself. First parameter (Integer) is the first atom number following the
numeration of the geometry. Second parameter (Integer) is the second atom
number. Third parameter is the force (Float) in nanonewton applied along the
vector between the two atoms. Fourth parameter is 0 or 1 (Bool), where 0
indicates a repulsive force, and 1 is for an attractive force.
[FALCON]
:Description:D
FALCON calculates total energy and orbitals of the large system based on the
fragment method.
:Title:B: :
One line title.
:Fragment:B:GUI:keyword:
Takes one, two or three argument(s). The first value defines the fragment
number, the second value determines coefficient, and the third value is the
fragment number that is equivalent to this fragment when translational symmetry
is used. Other keyword(s) specific to this fragment must follow this keyword.
:Operator:B:GUI:keyword:
An integer following this keyword specifies the number of fragments.
:Equivalence:B:GUI:keyword:
An integer following this keyword specifies the number of fragments.
:Translate:B:GUI:keyword:
An integer following this keyword specifies the number of fragments.
:RunFile:B:GUI:keyword:
Following this keyword specifies the name of RunFile file for the corresponding
fragment.
:OneInt:B:GUI:keyword:
Following this keyword specifies the name of OneInt file for the corresponding
fragment.
:nFragment:B:GUI:keyword:
An integer following this keyword specifies the number of fragments.
:nIrrep:B:GUI:keyword:
An integer following this keyword specifies the number of irreducible
representation of point group symmetry.
:Occupation:B:GUI:keyword:
A list of integer(s) following this keyword specifies the number of occupied
orbitals in each symmetry representation.
:Distance:B:GUI:keyword:
A real number following this keyword specifies the distance of two atoms that
are equivalent to each other.
:Near:B:GUI:keyword:
A real number following this keyword specifies the distance of two atoms within
which atoms are considered to be too close each other.
:Print:B:GUI:keyword:
An integer following this keyword specifies the format of orbital print out.
:OrbEne:B:GUI:keyword:
An integer following this keyword specifies the format of orbital print out.
:OrbOcc:B:GUI:keyword:
An integer following this keyword specifies the format of orbital print out.
[FALSE]
:Description:D
FALSE is an interface module that allows using external programs to compute
energies and gradients for geometry optimizations with SLAPAF.
:RUN:B: :
Specify the external executable. It will be run as:

    program input output
[FFPT]
:Description:D
This program applies perturbations to the one-electron Hamiltonian and the
nuclear repulsion term for finite field perturbation calculations. These fields
can be and external electric field or due the quadrupole moment of one or
several nuclei. Additional contributions can be first order relativistic
integrals (Darwin 1-el. term and mass-velocity contributions), or the so-called
Well-integrals used in some forms of reaction field calculations.
:TITLe:B: :
Followed by a title line
:DIPO:B: :
Add the dipole moment perturbation operator. By default, the dipole moment
integrals are always computed with respect to the center of nuclear charge. The
keyword is followed by up to three additional input lines. Each line consists of
two entries, the component of the dipole operator and the perturbation length.
The component is specified by a single letter (X, Y or Z).
:QUAD:B: :
Add the quadrupole moment perturbation operator. The keyword is followed by at
least one additional input line and may be complemented by as many additional
lines as needed. Each line consists of two entries, the component of the
operator and the perturbation strength. The component is specified by a pair of
letters (XX, XY, XZ, YY, YZ or ZZ). By default, the quadrupole moment integrals
are calculated with respect to the center of mass. For any other selection the
origin of the perturbation operator also needs to be specified by entering a
line starting with the string ORIG followed by the coordinates.
:OCTU:B: :
Add the octupole moment perturbation operator. The keyword is followed by at
least one additional input line and may be complemented by as many additional
lines as needed. Each line consists of two entries, the component of the
operator and the perturbation strength. The component is specified by a triple
of letters (XXX, XXY, XXZ, XYY, XYZ, XZZ, YYY, YYZ, YZZ, or ZZZ). By default,
the octupole moment integrals are calculated with respect to the center of mass.
For any other selection the origin of the perturbation operator also needs to be
specified by entering a line starting with the string ORIG followed by the
coordinates.
:EFLD:B: :
Add the electric field perturbation operator. The keyword is followed by at
least two additional input lines and may be complemented by as many additional
lines as needed. Each line consists of two entries, the component of the
operator and the perturbation strength. The component is specified by a single
letter (X, Y or Z). In addition, the origin of the perturbation operator also
needs to be specified by entering a line starting with the string ORIG followed
by the coordinates.
:EFGR:B: :
Add the electric field gradient perturbation operator. The keyword is followed
by at least one additional input line and may be complemented by as many
additional lines as needed. Each line consists of two entries, the component of
the operator and the perturbation strength. The component is specified by a pair
of letters (XX, XY, XZ, YY, YZ or ZZ). In addition, the origin of the
perturbation operator also needs to be specified by entering a line starting
with the string ORIG followed by the coordinates.
:RELA:B: :
Add the relativistic correction (mass-velocity and one-electron Darwin contact
term). The command is followed by one additional line of input specifying the
perturbation strength.
:GLBL:A: :
This command marks the beginning of a more general perturbation description
which is not included as a predefined command. This card is followed by as many
additional input lines as needed and is terminated if the next input line starts
with a command. Each input line contains only one perturbation description and
three data fields which are: Label, component and perturbation strength. The
label consists of a character string of length 8 and names the one-electron
integrals produced by SEWARD. The last parameter denotes the strength of a
perturbation operator and is given as a real number. For a list of the available
one-electron integral labels refer to the program description of SEWARD.

example:

    &FFPT
    GLBL
    'Well   1' 1 1.000
    'Well   2' 1 1.000
    'Well   3' 1 1.000
:SELE:A: :
Specify on which basis functions the perturbation should act.
:CUMU:A: :
Adds the perturbation to the current H0, enabling many consecutive FFPT calls.
Without this keyword, the perturbation always starts from the unperturbed H0.
[GATEWAY]
:Description:D
The Gateway module collects information about molecular system (geometry, basis
sets, symmetry) to be used for future calculations. Note that there are two
input styles - the old style format and the new XYZ format. The input can also
contain an embedded reaction field input (starts with the "RF-input" keyword and
terminates with the "End of RF-input" keyword). Keywords below carrying a "(RF)"
are associated with that embedded RF-input section. Gateway also controls
options associated with auxiliary basis sets to be used in density fitting
procedures.
:TITLE:B: :
The keyword followed by a title
:Test:B: :
GATEWAY will only process the input and generate a non-zero return code.
:Expert:A: :
Activates "expert mode", in which various default settings are altered. This
will, for example, allow the user to combine relativistic and non-relativistic
basis sets.
:BASDIR:B: :
The keyword allows to set up an extra location for basis set files. The value
can be either an absolute path (started from /) or relative to submit directory,
e.g. BASDIR=. In order to use a local copy of a basis set file with name FOO -
place this file into directory specified in BASDIR
:BASLIB:B: :
The keyword followed by the absolute path to the basis set library directory.
The default is the $MOLCAS/basis_library directory. Note that this directory
must also be host to local copies of the .tbl files.
:RTRN:A: :
Max number of atoms for which bond lengths, angles and dihedral angles are
listed, and the radius defining the maximum length of a bond follows on the next
line. The latter is used as a threshold when printing out angles and dihedral
angles. The length can be followed by "Bohr" or "Angstrom" which indicates the
unit in which the length was specified, the default is "Bohr". The default
values are 15 and 3.0 au.
:Isotopes:A: :
Specifies isotopes or masses. First write the number of atom masses to change,
then that number of lines, on each: the symmetry-unique index of the atom and
(a) the mass number of the isotope, or (b) the mass in dalton and the word
DALTON.
:ECPSHOW:B: :
Force GATEWAY to print ECP parameters.
:AUXSHOW:B: :
Force GATEWAY to print auxiliary basis set parameters.
:BSSHOW:B: :
Force GATEWAY to print basis set parameters.
:Verbose:B: :
Force GATEWAY to print a bit more verbose.
:XBAS:B: :
A keyword to specify the basis for atoms. The specification is very similar to
the native format: ATOM.BasisSet. Each new atom is written at a new line. The
end of the keyword is marked by an 'End of basis' line.

If all atoms have the same basis, e.g. ANO-S-VDZ, it is possible to use this
name without element name. In this case there is no need to specify 'End of
basis'.
:ZMAT:B: :
Alternative format to give coordinates in the form of Z-matrix. Only numerical
values must be used (no variable names) and angstroms and degrees are assumed as
units. Special ghost Z and dummy X atoms are allowed. 'End of ZMAT' or a blank
line marks the end of the section.
:XYZ:A: :
Alternative format to set up geometry as XYZ formatted file.
:COORD (XYZ format):B: :
The keyword followed on the next line by the name of an HDF5 or XYZ file, or
inline coordinates in XYZ format. The keyword may appear several times. In this
case all coordinate files will be concatenated, and considered as individual
fragments.
:BASIS (XYZ format):B: :
The keyword followed on the next line by the name of global basis set for all
atoms, or by comma separated list of basis sets for individual atoms. Note! The
basis set definition in XYZ mode does not allow to use inline basis set.
:GROUP (XYZ format):B: :
The keyword followed on the next line by the list of group generators (with the
same syntax as SYMMETRY keyword), or by FULL (highest possible group), or by
NOSYM, if no symmetry operations should be used. The keyword can be used only
with XYZ format of input, after COORD keyword.
:Symmetry (non-XYZ format):B: :
Symmetry point group is specified by up to three group generators. Possible
generators are "x", "y", "z", "xy", "xz", "yz", and "xyz". The order of the
irreps depends on the order of the generators. The keyword can be used only in
'native' input format.
:BASIS (non-XYZ format):B: :
This notes the start of a basis set definition. The next line always contains a
basis set label. The basis set definition is alway terminated with the "End of
Basis" keyword. For details consult the manual.
:Charge (non-XYZ format):A: :
The real entry on the subsequent line defines the charge associated with this
basis set. This will override the default which is defined in the basis set
library. The option can be used to put in ghost orbitals as well as to augment
the basis sets of the library. The "Charger" card is optional.
:Spherical (non-XYZ format):A: :
Specifying which shells will be in real spherical Gaussians. Valid options are
"all" or a list of the shell characters separated by a blank. The shell
characters are s, p, d, f, etc. All shells after p are by default in real
spherical Gaussians, except for the d-functions in the 6-31G family of basis
sets which are in Cartesian. The "Spherical" card is optional. The s and p
shells and the d-functions of the 6-31G family of basis sets are by default in
Cartesian Gaussians.
:Cartesian (non-XYZ format):A: :
Specifying which shells will be in a Cartesian Gaussian representation. For
syntax consult the corresponding Spherical keyword.
:Contaminant (non-XYZ format):A: :
Specifying for which shells the contaminant will be kept. The contaminants are
functions of lower rank which are generated when a Cartesian shell is
transformed to a spherical representation (e.g. r^2=x^2+y^2+z^2 for d-shells, p
contaminants for f-shells, s and d contaminants for g-shells, etc.). Valid
options are the same as for the Spherical keyword. The default is no contaminant
in any shell. The "Contaminant" card is optional.
:Muon (non-XYZ format):A: :
Specifying that the basis set is muonic.
:End of Basis set (non-XYZ format):A: :
Marks the end of the basis set specification. This card is mandatory.
:SYMThreshold (XYZ format):A: :
The keyword followed on the next line by the threshold for symmetry recognition
code (default is 0.01)
:CSPF:A: :
Turn on the use of Condon-Shortley phase factors. Warning: Causes
incompatibilities.
:MOVE (XYZ format):A: :
Allow to translate and rotate molecule in order to find highest possible
symmetry. (this is a default for all groups, except of C1)
:NOMOVE (XYZ format):A: :
Do not allow to transform coordinates while searching for highest group (default
for C1 group)
:BSSE (XYZ format):A: :
Followed by an integer. Indicates which xyz-file that should be treated like
ghost atoms.
:VarT:A: :
Specifies that the energy should not be considered invariant to translations.
Translational variance is detected automatically, but sometimes it may be useful
to enforce it.
:VarR:A: :
Specifies that the energy should not be considered invariant to rotations.
Rotational variance is detected automatically, but sometimes it may be useful to
enforce it.
:Numerical:A: :
Forces the calculation of numerical gradients even when analytic gradients are
available.
:Shake:A: :
Randomly modifies the initial coordinates of the atoms, maintaining the input
(or computed) symmetry. This can be useful to avoid a geometry optimization
converging to a higher-symmetry saddle point. The maximum displacement in the
axes x, y and z is read from the following real number. This number can be
followed by Bohr or Angstrom, which indicates the unit in which the displacement
is specified, the default is Bohr.
:Constraints:B: :
This marks the start of the definition of the constraints which the optimization
is subject to. This section is always ended by the keyword "End of Constraints".
Consult the manual for the details.
:NGExclude:B: :
This marks the start of the definition of additional restrictions for numerical
differentiation. This section is always ended by the keyword "End of NGExclude".
:RIJ:B: :
Use the RI-J auxiliary basis in the density fitting (DF) approach to treat the
two-electron integrals. Note that the valence basis set must have a supporting
auxiliary basis set for this to work.
:RIJK:B: :
Use the RI-JK auxiliary basis in the density fitting (DF) approach to treat the
two-electron integrals. Note that the valence basis set must have a supporting
auxiliary basis set for this to work.
:RIC:B: :
Use the RI-C auxiliary basis in the density fitting (DF) approach to treat the
two-electron integrals. Note that the valence basis set must have a supporting
auxiliary basis set for this to work.
:RICD:B: :
Use the aCD or acCD approach to treat the two-electron integrals. This procedure
will use an on-the-fly generated auxiliary basis set.
:NOCD:B: :
Disable Cholesky decomposition. Useful in the case RICD has been made the
default with MOLCAS_NEW_DEFAULTS.
:CDThreshold:A: :
Threshold for on-the-fly generation of aCD or acCD auxiliary basis sets for RI
calculations (default value 1.0d-4).
:SHAC:A: :
Skip high angular combinations a la Turbomole when creating on-the-fly basis
sets (default off).
:KHAC:B: :
Keep high angular combinations when creating on-the-fly basis sets (default on).
:aCD basis:B: :
Generate an atomic CD (aCD) auxiliary basis sets (default off).
:acCD basis:B: :
Generate an atomic compact CD (acCD) auxiliary basis sets (default on).
:End of RF-input:B: :
This marks the end of the input to the reaction field utility.
:Reaction field (RF):B: :
This command is exclusive to the Kirkwood model. This indicated the beginning of
the specification of the reaction field parameters. The subsequent line will
contain the dielectric constant of the medium, the radius of the cavity in Bohrs
(the cavity is always centered around the origin), and the angular quantum
number of the highest multipole moment used in the expansion of the change
distribution of the molecule (only charge is specified as 0, charge and dipole
moments as 1, etc.). The input specified below specifies that a dielectric
permitivity of 80.0 is used, that the cavity radius is 14.00 a.u., and that the
expansion of the charge distribution is truncated after l=4, i.e. hexadecapole
moments are the last moments included in the expansion. Optionally a fourth
argument can be added giving the value of the dielectric constant of the fast
component of the solvent (default value 1.0).
:PCM-model (RF):B: :
If no other keywords are specified, the program will execute a standard PCM
calculation with water as solvent. The solvent reaction field will be included
in all the programs (SCF, RASSCF, CASPT2, etc.) invoked after SEWARD: note that
in some cases additional keywords are required in the corresponding program
sections. Many PCM parameters can be changed through the following keywords.
:Solvent (RF):B: :
Used to indicate which solvent is to be simulated. The name of the requested
solvent must be written in the line below this keyword. Allowed solvents are:
WATER, ACETONITRILE, METHANOL, ETHANOL, ISOQUINOLINE, QUINOLINE, CHLOROFORM,
ETHYLETHER, METHYLENECHLORIDE, DICHLOROETHANE, CARBONTETRACHLORIDE, BENZENE,
TOLUENE, CHLOROBENZENE, NITROMETHANE, HEPTANE, CYCLOHEXANE, ANILINE, ACETONE,
TETRAHYDROFURAN, DIMETHYLSULFOXIDE, ARGON, KRYPTON, XENON
:Dielectric constant (RF):B: :
Defines a different dielectric constant for the selected solvent; useful to
describe the system at temperatures other that 298 K, or to mimic solvent
mixtures. The value is read in the line below the keyword. An optional second
value might be added on the same line which defines a different value for the
infinite frequency dielectric constant for the selected solvent (this is used in
non-equilibrium calculations; by default it is defined for each solvent at 298
K).
:Conductor version (RF):A: :
It requires a PCM calculation where the solvent is represented as a polarized
conductor: this is an approximation to the dielectric model which works very
well for polar solvents (i.e. dielectric constant greater than about 5), and it
has some computational advantages being based on simpler equations. It can be
useful in cases when the dielectric model shows some convergence problems.
:AAREa (RF):A: :
It is used to define the average area (in A^2) of the small elements on the
cavity surface where solvation charges are placed; when larger elements are
chosen, less charges are defined, what speeds up the calculation but risks to
worsen the results. The default value is 0.4 A^2 (i.e. 60 charges on a sphere of
radius 2 A). The value is read in the line below the keyword.
:R-min (RF):A: :
It sets the minimum radius (in A) of the spheres that the program adds to the
atomic spheres in order to smooth the cavity surface (default 0.2 A). For large
solute, if the programs complains that too many sphere are being created, or if
computational times become too high, it can be useful to enlarge this value (for
example to 1 or 1.5 A), thus reducing the number of added spheres. The value is
read in the line below the keyword.
:Pauling (RF):A: :
It invokes the use of Pauling's radii to build the solute cavity: in this case,
hydrogens get their own sphere (radius 1.2 A).
:Sphere radius (RF):A: :
It is used to provide sphere radii from input: for each sphere given explicitly
by the user, the keyword 'Sphere radius' is required, followed by a line
containing two numbers: an integer indicating the atom where the sphere has to
be centered, and a real indicating its radius (in A). For example, 'Sphere
radius' followed by '3 1.5' indicates that a sphere of radius 1.5 A is placed
around atom 3; 'Sphere radius' followed by '4 2.0' indicates that another sphere
of radius 2 A is placed around atom 4 and so on.
:FNMC:A: :
Request that the so-called Finite Nuclear Mass Correction, excluded by the
Born-Oppenheimer approximation, be added to the one-electron Hamiltonian.
:Well integrals:B: :
Request computation of Pauli repulsion integrals for dielectric cavity reaction
field calculations. The first line specifies the total number of primitive well
integrals in the repulsion integral. Then follows a number of lines, one for
each well integral, specifying the coefficient of the well integral in the
linear combination of the well integrals which defines the repulsion integral,
the exponent of the well integral, and the distance of the center of the
Gaussian from the origin. In total three entries on each line. All entries in
atomic units. If zero or a negative number is specified for the number of well
integrals a standard set of 3 integrals with their position adjusted for the
radius of the cavity will be used. If the distance of the center of the Gaussian
from the origin is negative displacements relative to the cavity radius is
assumed.
:Xfield integrals:B: :
Request the presence of an external electric field represented by a number of
partial charges and dipoles. Optionally, polarisabilities may be specified whose
induced dipoles are determined self-consistently during the SCF iteration. The
first line may contain, apart from the first integer (nXF) (number of centers),
up to four additional integers. The second integer (nOrd) specifies the maximum
multipole order, or -1 signifying no permanent multipoles. Default is 1 (charges
and dipoles). The third integer (p) specifies the type of external
polarisabilities: 0 (default) no polarisabilities, 1 (isotropic), or 2
(anisotropic). The fourth integer (nFrag) specifies the number of fragments one
multipole may contribute to (relevant only if polarisabilities are present). The
default is 0, meaning that each permanent multipole is only excluded in the
calculation of the field at its own polarisability, 1 means that one gives a
fragment number to each multipole and that the static multipoles do not
contribute to the polarising field within the same fragment, whereas 2 can be
used in more complex situations, e.g. polymers, allowing you to specify a second
fragment number so that junction atoms does not contribute to either of the
neighbouring fragments. Finally, the fifth and last integer (nRead) (relevant
only if Langevin dipoles are used) may be 0 or 1 (where 0 is default),
specifying whether an element number (e.g. 8 for oxygen) should be read for each
multipole. In that case the default radius for that element is used to determine
which Langevin grid points should be annihilated. A negative element number
signifies that a particular radius should be used for that multipole, in
thousands of a Bohr (-1400 meaning 1.4 Bohr). Then follows nXF lines, one for
each center. On each line is first nFrag+nRead (which may equal 0) integers,
specifying the fragments that the multipole should not contribute to (the first
fragment is taken as the fragment that the polarisability belongs to) and the
element number. Then follows the three coordinates of the center, followed by
the multipoles and polarisabilities. The number of multipole entries is 0 for
nOrd=-1, 1 for nOrd=0, 4 for nOrd=1, and 10 for nOrd=2. The number of
polarisability entries are 0 for p=0, 1 for p=1, and 6 for p=2. The order of
quadrupole moment and anisotropic polarisability entries is xx, xy, xz, yy, yz,
zz. If default is used, i.e. only specifying the number of centers on the first
line, each of these lines will contain 7 entries (coordinates, charge, and
dipole vector). All entries are in atomic units, if not otherwise requested by
the Angstrom keyword that must be placed between nXF and nOrd. All these data
can be stored in a separate file whose name must be passed as an argument of the
XField keyword.
:Sdipole:B: :
Requests computation of velocity integrals.
:Angm:B: :
Supplement the file for transition angular momentum calculations. Enter the
angular momentum operator origin (in au). The keyword is followed by a card
which specifies the angular momentum origin (in au).
:OMQI:B: :
Supplement the file for transition orbital magnetic quadrupole calculations.
Enter the orbital magnetic quadrupole operator origin (in au). The keyword is
followed by a card which specifies the orbital magnetic quadrupole origin (in
au).
:Ampr:B: :
Request the computation of angular momentum product integrals. The keyword is
followed by a card which specifies the angular momentum origin (in au).
:DSHD:B: :
Activate the computation of diamagnetic shielding integrals. The first entry
specifies the gauge origin. On the subsequent entries an integer specifying the
number of points at which the diamagnetic shielding will be computed. If this
entry is zero, the diamagnetic shielding will be computed at each nucleus. If
nonzero, then the coordinates (in au) for each origin has to be supplied, one
entry for each origin.
:MXTC:B: :
Requests the computation of X2C transformed hyperfine magnetic integrals (used
in subsequent hyperfine calculations), has to be used together with the keyword
RX2C. If one wants to calculate the non-relativistic limit, one can simply set
up a large speed of light value.
:RX2C:B: :
Request the scalar relativistic X2C (eXact-two-Component) corrections to the
one-electron Hamiltonian as well as the property integrals.
:RBSS:B: :
Request the scalar relativistic BSS (Barysz-Sadlej-Snijders) corrections to the
one-electron Hamiltonian as well as the property integrals. The non-iterative
scheme is employed for the construction of BSS transformation.
:NOAMFI:B: :
Explicit request for no computation of atomic mean-field integrals.
:AMFI:B: :
Explicit request for the computation of atomic mean-field integrals (used in
subsequent spin-orbit calculations). These integrals are computed by default for
relativistic basis sets like the ANO-RCC and ANO-DK3 basis sets.
:EPOT:B: :
An integer follows which represents the number of points for which the electric
potential will be computed. If this number is zero, the electric potential
acting on each nucleus will be computed. If nonzero, then the coordinates (in
au) for each point have to be supplied, one entry for each point. This keyword
is mutually exclusive with EFLD and FLDG.
:EFLD:B: :
Followed by a card with an integer entry which represents the number of points
for which the electric potential and electric field will be computed. If this
number is zero, the electric field acting on each nucleus will be computed. If
nonzero, then the coordinates (in au) for each point have to be supplied, one
entry for each point. This keyword is mutually exclusive with EPOT and FLDG.
:FLDG:B: :
An integer required which represents the number of points for which the electric
potential, electric field and electric field gradient will be computed. If this
number is zero, the electric field gradient acting on each nucleus will be
computed. If nonzero, then either the coordinates (in au) for each point or
labels for each atom center have to be supplied, one entry for each point. In
case a label is supplied it must match one of those given previous in the input
during specification of the coordinates of the atom centers. Using a label
instead of a coordinate can e.g. be useful in something like a geometry
optimization where the coordinate isn't known when the input is written. This
keyword is mutually exclusive with EPOT and EFLD.
:EMPC:B: :
Use point charges specified by the keyword XFIELD when calculating the
Orbital-Free Embedding potential.
:RF-input:B: :
Specification of reaction field parameters, consult the reaction field section
of this manual.
:Finite:B: :
Request a finite center representation of the nuclei by a single exponent s-type
Gaussian.
:MGauss:B: :
Request a finite center representation of the nuclei by a modified Gaussian.
:RP-Coordinates:A: :
This activates the Saddle method for TS geometry optimization. The line is
followed by an integer specifying the number of symmetry unique coordinates to
be specified. This is followed by two sets of input - one line with the energy
and then the Cartesian coordinates in bohr - for each of the two starting
structures of the Saddle method. Note that the order of the coordinates must
always match the order specified with the conventional input of the coordinates
of the molecular system. Alternatively, two lines with the filenames containing
the coordinates of reactants and products, respectively, (in XYZ format) can be
given.
:NoAlign:A: :
By default, the two starting structures are aligned to minimize the root mean
square distance (RMSD) between them, in particular, the first structure is moved
and the second structure remains fixed. If this keyword is given, the starting
structures are used as given.
:AlignOnly:A: :
The two starting structures are aligned, but nothing more is done. An input
block for SEWARD is still needed, but no integrals are computed.
:Weights:A: :
Relative weights of each atom to use for the alignment and for the calculation
of the "distance" between structures. The possibilities are:

  MASS  -- This is the default. Each atom is given a weight proportional to its
           mass. Equivalent to mass-weighted coordinates.

  EQUAL -- All atoms have an equal weight.

  HEAVY -- Only heavy atoms are considered, with equal weights. Hydrogens are
           given zero weight.

A list of N numbers can also be provided, and they will be used as weights for
the N symmetry-unique atoms.
:SaddleStep:A: :
Step size reduction for each macro iteration of the saddle method. The value is
given in weighted coordinates, divided by the square root of the total weight
(see the WEIGHTS keyword). Default value is 0.1 au.
:hyper:A: :
Followed by three real numbers to define hypersurface gridpoint parameters for
bond distance, bond angles and dihedral angles. Allows for a geometry
optimization in constrained internal coordinates.
:geo:A: :
Perform a geometry optimization in constrained internal coordinates using
default parameters for hypersurface gridpoints (bond=0.15, bond angle=2.5, and
dihedral angle=2.5)
:opth:A: :
Followed by one line with an integer specifying the optimization type (1 =
steepest descent, 2 = mixed, 3 = Newton's method), a second line with a real
number specifying a step factor and if using type "mixed" a third line with a
real number specifying the maximum gradient size for which steepest descent is
used.
:OldZ:A: :
Start new calculation based on $Project.GEO/$Project.zmt
:zonly:A: :
A z-matrix ($Project.zmt) is printed in the $Project.GEO-directory. The
optimization parameters are set so that each fragment is kept rigid and only
coordinates linking fragments are optimized.
:zcons:A: :
Prints a file with a constraints-definition for rigid fragments formatted for
use in slapaf ($Project.cns) and an xyz-file (cons.xyz) with the same atom
number. Both files are printed in the $Project.GEO-directory.
:origin:A: :
Followed by two lines for each fragment. The first line should have 3 real
numbers defining a translation and the second 9 real numbers defining a
rotation. (See ROT and TRANS.) Must occur before the xyz-files are entered with
coord.
:frgm:A: :
Followed by a fragment number and either or both of ROT and TRANS to define
rotation and translation of this fragment. Each xyz-file is considered a
fragment, numbering is from top to bottom of input. Must occur before the
modified xyz-file is entered with coord.
:rot:A: :
The keyword should be followed by nine real numbers defining a rotation matrix.
Should only be used together with the FRGM keyword.
:trans:A: :
The keyword should be followed by three real numbers defining a translation (x y
z). Should only be used together with the FRGM keyword.
:Gromacs:B: :
Requests that the definition of the full QM+MM system should be imported from
GROMACS. The keyword should be followed by one of the options SIMPLE or CASTMM
on the next line. In the case of SIMPLE, all MM atoms defined in the GROMACS
input will be treated as outer MM atoms in MOLCAS. This means, for example, that
in a geometry optimization, their positions will be updated using
microiterations rather than the conventional optimization scheme. Conversely,
CASTMM requests that certain MM atoms should be treated as inner MM atoms in
MOLCAS. Their positions will be updated with the same scheme as used for the QM
atoms. The CASTMM option should be followed by two additional input lines, the
first one containing the number of MM atoms to convert from outer to inner type,
and the second containing a list of those atoms (using their corresponding
GROMACS indices).
:LinkAtoms:A: :
Defines link atoms for use with the Morokuma updating scheme (MOLCAS/GROMACS
calculations only). The desired number of link atoms should be given as an
integer on the next line. This should be followed by additional input lines, one
for each link atom to be defined. Each definition should be of the form ILA,
IQM, IMM, SCALE, where ILA, IQM and IMM are the GROMACS indices of the link atom
and the corresponding QM and MM frontier atoms, respectively. SCALE is the
scaling factor to be used in the Morokuma scheme. Note that each link atom must
be defined as a QM atom in the GROMACS input. In addition, the frontier MM atom
must be an inner MM atom specified with the GROMACS keyword in GATEWAY.
[GENANO]
:Description:D
This program is used to construct ANO type basis sets.
:TITLe:B: :
This keyword starts the reading of title lines, with no limit on the number of
title lines. Reading the input as title lines is stopped as soon an the input
parser detects one of the other keywords. This keyword is optional.
:SETS:B: :
This keyword indicates that the next line of input contains the number of sets
to be used in the averaging procedure. This keyword must precede keyword WEIGHTS
if both are supplied. This keyword is optional, with one set as the default.
:CENTer:B: :
This keyword is followed, on the next line, by the atom label for which the
basis set is to be generated. The label must match the label you supplied to
SEWARD. In previous versions of GENANO this label had to be in uppercase, but
this restriction is now lifted and the case does not matter. This keyword is
compulsory.
:ROWWise:A: :
This keyword makes GENANO to produce the contraction coefficients row-wise
instead of column-wise as is the default. This keyword is optional.
:WEIGhts:B: :
This keyword must be subsequent to keyword SETS if both are supplied. This
keyword is optional, with equal weight on each of the sets as default.
:PROJect:A: :
This keyword states that you want to project out certain degrees of freedom from
the density matrix. This can be useful for generating, for example, nodeless
valence orbitals to be used with ECP's. If this keyword is specified, you must
supply the file PROJ obtained as file ANO from a previous GENANO calculation,
for instance. This keyword is optional.
:LIFTdegeneracy:A: :
This keyword will modify the occupation numbers read from the orbitals files.
The purpose is to lift the degeneracy of core orbitals to avoid rotations. The
occupation numbers are changed according to o'=o*(1+10^-3/n) where n is the
sequence number of the orbital in its irreducible representation. This keyword
is optional.
:RYDBerg:A: :
This keyword enables automatic generation of Rydberg orbitals. With this keyword
all occupied orbitals will get occupation number zero while the virtual orbitals
will get a small occupation number decreasing with orbital number. Useful with a
calculation on an cation where the virtual orbitals are near perfect Rydberg
orbitals. Note that you must use orbitals from the SCF or RASSCF program. This
keyword is optional.
:NOTHreshold:A: :
This keyword is used to specify the threshold for keeping NO's (natural
orbitals). Orbitals with occupation numbers less than the threshold are
discarded. The threshold is read from the line following the keyword. Default
value is 1.0d-8.
[GEO]
:Description:D
The GEO module handles geometry optimization in constrained internal
coordinates.
[GRID_IT]
:Description:D
GRID_IT is an interface program for calculations of molecular orbitals and
density in a set of Cartesian grid points. Calculated grid can be visualized by
LUSCUS programs
:Title:B: :
One line following this one is regarded as title.
:Name:B: :
One line following this one is used for generation of grid filename in the form:
"Project.Name.lus".
:File:B: :
On the following line user can specify the filename, which will be used instead
of INPORB (default).
:Sparse:B: :
Set up sparse Cartesian net with 1 grid point per a.u. Note that quality of the
grid can be poor. Default is 3 points per a.u.
:Dense:B: :
Set up dense Cartesian net with 10 grid point per a.u.
:Gap:A: :
Keyword, followed by real equals to distance between the atomic nuclei in the
molecule and the border of grid. Default value is 4.0 a.u.
:Orbital:A: :
Direct specification of orbitals to show. Follows by number of calculated grids,
and pairs of integers -- symmetry and orbital within this symmetry.
:Select:A: :
Direct specification of orbitals to show. Follows by one line in the format:
symmetry:FirstOrbital-LastOrbital (Ex: 1:2-7 2:5-8)
:Mulliken:A: :
Compute Mulliken charges separately for each occupied MO specified in the
GRID_IT input. "LONG print" is an optional argument for more detailed printout.
:NoSort:A: :
Do not sort orbitals by occupation numbers and orbital energies
:ORANge:A: :
Followed by 2 numbers to limit the interval of orbitals by occupation numbers
:ERANge:A: :
Followed by 2 numbers to limit the interval of orbitals by one-electron energies
:All:A: :
Calculate grids for all molecular orbitals.
:Total:A: :
Request to calculate a grid for the (correct) total density computed from
contributions of all orbitals, instead of (default) just from the orbitals
chosen by user.
:VB:A: :
Plots orbitals from the latest CASVB calculation.
:ATOM:A: :
Calculate density in the position of atoms
:ASCII:A: :
Obsolete keyword for ASCII format of output file. This option can only be used
in combination with NOLUSCUS
:Npoints:A: :
Keyword, followed by 3 integers equal to number of grid points in x, y, z
directions
:GRID:A: :
Keyword to set manually coordinates of a grid. Followed by number of Cartesian
coordinates, and on next lines -- x y z coordinates of a grid (in a.u.)
:GORI:A: :
Keyword to set manually the parallelepiped spanning a grid. Followed by four
lines of three columns each. The first line defines the x y z location of the
origin, the next three lines are three linearly independent vectors that span
the parallelepiped of the grid. This keyword requires NPOINTS to build up the
lattice of gridpoints.
:NOLUSCUS:A: :
Produce data file in obsolete format (which can be read by old (before 2015)
versions of GV)
:XFIELD:A: :
Use Grid_It in a special mode (to produce the grid for non-cartesian points).
[GUESSORB]
:Description:D
The GUESSORB program generates a start guess for orbitals. These orbitals can be
used as input for all wavefunction code.
:PRMO:B: :
Print the generated orbitals, an integer controls the output level. Optionally,
a floating point number limits the orbitals printed to those with energy below
the number (default 5.0 au).

  1 -- Only occupation numbers and orbital energies are printed.

  2 -- As for 1 but with an additional sorted list of orbital energies.

  3 -- As for 2 but with orbitals printed in compact format.

  4 -- As for 3 but orbitals are printed in full format.
:PRPOpulation:B: :
Prints Mulliken population analysis.
:STHR:B: :
Threshold for deleting orbitals based on overlap. Default 1e-9.
:TTHR:B: :
Threshold for deleting orbitals based on kinetic energy. Default 1e6.
:GAPThr:B: :
Threshold for populating orbitals. Default 0.01.
[GUGA]
:Description:D
The GUGA program generates coupling coefficients used by the MRCI and the CPF
programs. The program was written by P. E. M. Siegbahn, and has since been
slightly modified to fit MOLCAS.
:Title:B: :
The line following this keyword is treated as title line
:Spin:B: :
Spin degeneracy number (multiplicity), 2S+1. Default 1=Singlet.
:Electrons:B: :
Number of electrons to be correlated.
:NACTEL:B: :
Number of active electrons in the reference CI (if multireference).
:Inactive:B: :
List which tells, for each symmetry species, how many orbitals to keep fully
occupied always. Default is 0 in all symmetries.
:Active:B: :
List which tells, for each symmetry species, how many orbitals that are active.
Default is 0 in all symmetries.
:OneOcc:A: :
List which tells, for each symmetry species, how many orbitals that are required
to be singly occupied always. Default is 0 in all symmetries.
:NoCorr:A: :
List which tells, for each symmetry species, how many orbitals that are not
allowed to be empty. Default is 0 in all symmetries.
:Reference:B: :
One way of specifying the reference space -- see manual. One of the two keywords
REFERENCE and CIALL should be chosen.
:CIAll:B: :
Use a Full CI space as reference -- see manual. One of the two keywords
REFERENCE and CIALL should be chosen.
:First-order:A: :
Allow only single excitations from the reference space.
:NonInteracting:A: :
Include triplet-coupled double excitations from inactive to virtual orbitals.
:PrintLevel:A: :
Requested print level. Default 0. 5 is reasonable.
[GUGACI]
:Description:D
The GUGACI program is used for Multi-Reference SDCI calculations. The code
originates in an MRCI program by Zhenyi Wen and Yubin Wang, Zhenting Gan,
Bingbing Suo Yibo Lei also contribute to this program. It requires a file
generated by the GUGADRT program.
:Title:B: :
Followed by title lines, until the next keyword is recognized.
:NRRoots:B: :
The number of CI roots (states) to be computed. Default=1.
:Restart:A: :
Use a previous wavefunction from the MRCIVECT file as start approximation.
Require MRCISD calculation is restarted. MRCIVEC file should be exists.
:Thrprint:A: :
Enter threshold of CI coefficients to be printed. Default 0.05.
:Convergence:A: :
Three float numbers to enter energy, ci vector, and residual vector convergence
threshold. Default 1.0D-8,1.0D-6,1.0D-8
:Print:A: :
Set print level. Default is 5.
:Maxiterations:A: :
Set maximum number of iterations. Default is 30. Largest possible is 200.
:Prorbitals:A: :
Threshold on occupation number, for printing natural orbitals. Default 1.0D-5.
:Cproperty:A: :
Request to calculate properties.
[GUGADRT]
:Description:D
The GUGADRT program generates distict row table used by the MRCI. The program
was written by Yubin Wang and Bingbing Suo, and has since been slightly modified
to fit MOLCAS.
:Title:B: :
The lines following this keyword are treated as title lines, until another
keyword is encountered. Enter at most ten lines of title.
:SPIN:B: :
Enter spin multiplicity, 2S+1. Default 1=Singlet.
:Electrons:B: :
Enter number of electrons to be correlated.
:NACTEL:B: :
Number of active electrons (if multireference).
:Inactive:B: :
Number of inactive orbitals for each irrep. Enter list which tells, for each
symmetry species, how many orbitals to keep fully occupied always. Default is 0
in all symmetries.
:Active:B: :
Number of active orbitals for each irrep. Enter list which tells, for each
symmetry species, how many orbitals that are active. Default is 0 in all
symmetries.
:REFERENCE:B: :
One way of specifying the reference space -- see manual. One of the two keywords
REFERENCE and CIALL should be chosen.
:Symmetry:B: :
Specify symmetry of the state to be calculated. Default value is 1.
:CIAll:B: :
Use a Full CI space as reference -- see manual. One of the two keywords
REFERENCE and CIALL should be chosen.
:PrintLevel:A: :
Enter print level, from 0 (default) up to 5.
[LOCALISATION]
:Description:D
The LOCALISATION program of the molcas program system generates localised
occupied orbitals according to one of the following procedures: Pipek-Mezey,
Boys, Edmiston-Ruedenberg, or Cholesky. Orthonormal, linearly independent, local
virtual orbitals may also be generated from projected atomic orbitals (Cholesky
PAOs).
:FileOrb:B: :
The next line specifies the filename containing the input orbitals that will be
localised. By default a file named INPORB will be used.
:NORB:B: :
The following line specifies the number of orbitals to localise in each
irreducible representation. The default is to localise all occupied orbitals as
specified in the INPORB input file, except for PAO runs where all the virtual
orbitals are treated by default.
:NFRO:B: :
The following line specifies the number of orbitals to freeze in each
irreducible representation. The default is not to freeze any orbitals, except
for the localisations of the virtual space (see keywords PAO and VIRTual) where
the default is to freeze all occupied orbitals (occupation number different from
zero, as reported in the INPORB file).
:FREE:B: :
Implicit frozen core option. The default is not to freeze any orbitals, except
for the localisations of the virtual space (see keywords PAO and VIRTual) where
the default is to freeze all occupied orbitals (occupation number different from
zero, as reported in the INPORB file).
:OCCU:B: :
Requests that the occupied orbitals should be localised. This is the default
except for PAO where the default is virtual.
:VIRT:B: :
Requests that the virtual orbitals should be localised. The default is to
localise the occupied orbitals, except for PAO where the default is virtual.
:ALL:B: :
Requests that all orbitals should be localised. The default is to localise the
occupied orbitals, except for PAO where the default is virtual.
:PIPE:A: :
Requests Pipek-Mezey localisation. This is the default.
:BOYS:A: :
Requests Boys localisation. The default is Pipek-Mezey.
:EDMI:A: :
Requests Edmiston-Ruedenberg localisation. The default is Pipek-Mezey. Note that
this option requires that the Cholesky (or RI/DF) representation of the
two-electron integrals has been produced by SEWARD.
:CHOL:A: :
Requests Cholesky localisation. The default is Pipek-Mezey.
:PAO:A: :
Requests PAO localisation. The default is Pipek-Mezey.
:SKIP:A: :
Leaves the input orbitals unchanged.
:ITER:A: :
The following line specifies the maximum number of iterations to be used by the
iterative localisation procedures. The default is 100.
:THRE:A: :
The following line specifies the convergence threshold used for changes in the
localisation functional. The default is 1.0d-6. For Cholesky and PAO methods, it
is the decomposition threshold and the default is 1.0d-8.
:THRG:A: :
The following line specifies the convergence threshold used for the gradient of
the localisation functional. The default is 1.0d-2.
:THRR:A: :
The following line specifies the screening threshold used in the Jacobi sweep
optimisation algorithm. The default is 1.0d-10.
:CHOS:A: :
Requests that the localisation procedure uses Cholesky orbitals as initial
orbitals. The default is not to use Cholesky orbitals.
:ORDE:A: :
Requests that the localised orbitals are ordered in the same way as the Cholesky
orbitals would be. The default is not to order.
:DOMA:A: :
Requests orbital domains and pair domains are set up and analysed. The default
is not to set up domains.
:THRD:A: :
The following line specifies two thresholds to be used in defining orbital
domains. The first is the Mulliken population threshold such that atoms are
included in the domain until the population (divided by 2) is larger than this
number (default: 9.0d-1). The second threshold is used for the Pulay
completeness check of the domain (default: 2.0d-2).
:THRP:A: :
The following line specifies three thresholds to be used for classifying pair
domains: R1, R2, and R3. (Defaults: 1.0d-10, 1.0d1, and 1.5d1.)
:LOCN:B: :
This keyword is used to select atoms for defining the localised natural orbitals
(LNOs), thus a set of localised orbitals with well-defined occupation numbers.
All other options specified in the localisation input apply (e.g., input
orbitals, localisation method, etc.). On the next line give the number of
(symmetry unique) atoms that identify the region of interest and the threshold
used to select the localised orbitals belonging to this region. An additional
line gives the names of the atoms as defined in the SEWARD input. This keyword
is used to define occupation numbers when localising active orbitals from RASSCF
calculations. Particularly useful in Effective Bond Order (EBO) analysis.
:LOCC:B: :
This keyword is used to select atoms for defining the localised canonical
orbitals (LCOs), thus a set of localised orbitals with well-defined orbital
energies. All other options specified in the localisation input apply (e.g.,
input orbitals, localisation method, etc.). On the next line give the number of
(symmetry unique) atoms that identify the region of interest and the threshold
used to select the localised orbitals belonging to this region. An additional
line gives the names of the atoms as defined in the SEWARD input.
[LOPROP]
:Description:D
A tool to compute molecular properties based on the one-electron density or
transition-density and one-electron integrals like charges, dipole moments and
polarizabilities
:NoField:B: :
The calculation is run in the absence of a field and only static properties like
charges and dipole moments are computed. The default is to go beyond the static
properties.
:Delta:B: :
The magnitude of the electric field in the finite field perturbation
calculations to determine the polarizabilities. Default value is 0.001 au.
:Alpha:B: :
A parameter in the penalty function used for determining the charge fluctuation
contribution to the polarizabilities. See eq. 17 in Gagliardi et al, JCP
121,4497. The default value of 7.14 is good for small molecules (less than 50
atoms). For larger molecules, a smaller alpha (e.g. 2.0) may be needed for
numerical stability.
:Bond:B: :
Defines the maximum allowed bond length based on the ratio compared to
Bragg-Slater radii. All contributions in bonds longer than this radius will be
redistributed to the two atoms involved in the bond, so the the total molecular
properties are left unaltered. The default value is 1.5.
:MpProp:B: :
Defines the maximum l value for the multipole moments written to the MpProp
file. If the value specified is larger than the highest multipole moment
calculated it will be reset to this value, which is also the default value. The
'MULTipoles' keyword in Seward can change the default value.
:Expansion center:B: :
Defines which points will be used as the expansion centers for the bonds. The
next line must contain either 'MIDPoint' in order just to use the midpoint of
the bond or 'OPTImized' in order to let LoProp move the expansion center along
the bond. The latter is still highly experimental!
:UserDensity:B: :
No density matrix is computed instead it is read as an input from the file
USERDEN. This enables LoProp to obtain localized properties for densities that
currently can not be computed with molcas. If the keyword NOFIeld is not given,
six additional files are required (USERDEN1-USERDEN6), each containing the
density matrix of a perturbed calculation, see above. Observe the form of
USERDEN, see above.
:TDensity:B: :
This keyword signals that the one-electron density matrix which is to be read
comes from the TOFILE file generated by RASSI. The keyword is followed by two
integers that gives number of initial and final state of the transition. For
example, if it is the transition density between the first and second state
which should be localized, the integers should be 1 and 2. The keyword implies
NOFIeld.
:XHole:B: :
The exchange hole dipole moment is computed, localized and given as additional
output. This quantity can be used to compute local dispersion coefficients
according to Becke and Johnson. The numerical integration routine in Molcas is
used.
[MBPT2]
:Description:D
This program computes the second order Many Body Perturbation Theory correction
to an SCF wavefunction.
:Title:B: :
The line following this line is regarded as a title line
:Print:A: :
Specifies the general print level of the calculation. An integer has to be
supplied as argument. The default value, 0, is recommended for production
calculations.
:Freeze:A: :
Specifies the total number of frozen occupied orbitals. Incompatible with the
FROZen keyword.
:Frozen:A: :
Specifies the number of frozen orbitals in each irrep of the point group. The
orbitals with the lowest energies are frozen. The keyword takes as argument
nIrrep (# of irreps) integers. Incompatible with the FREEze keyword. Default is
to freeze non-valence orbitals.
:Deleted:A: :
Specifies the number of deleted orbitals in each irrep of the point group. The
orbitals with the highest energies are deleted. The keyword takes as argument
nIrrep (# of irreps) integers. NOTE: Those orbitals, which have been deleted
already in the SCF calculation (cf. SPDElete, OVLDelete of the SCF program
description) are never seen by the MBPT2 program and hence are not to be deleted
again with the present option.
:Sfrozen:A: :
Allows to specify specific orbitals to freeze in each of the irreducible
representations (irreps) of the subgroup of D2h in which the system is
represented. In the 1st line after the keyword the number of orbitals to freeze
for each irrep is specified (nIrrep (# of irreps) integers). The next <= nIrrep
lines reference the orbitals to freeze for the related irrep, following an
enumeration of the individual orbitals of 1, 2, 3,... according to increasing
orbital energy. Note that the orbital reference numbers obey the original
ordering and also include those orbitals which may have been frozen already by
the FROZEN option. If the corresponding irrep does not contain any specific
orbitals to freeze (i.e. a zero was supplied for this irrep in the 1st line), no
line orbital reference input line is supplied for that irrep.
:Sdeleted:A: :
Allows to specify specific orbitals to delete in each of the irreducible
representations (irreps) of the subgroup of D2h in which the system is
represented. In the 1st line after the keyword the number of orbitals to delete
for each irrep is specified (nIrrep (# of irreps) integers). The next <= nIrrep
lines reference the orbitals to delete for the related irrep, following an
enumeration of the individual orbitals of 1, 2, 3,... according to increasing
orbital energy. Note that the orbital reference numbers obey the original
ordering. If the corresponding irrep does not contain any specific orbitals to
freeze (i.e. a zero was supplied for this irrep in the 1st line), no line
orbital reference input line is supplied for that irrep.
:GHOS:A: :
Excludes from PT2 treatment orbitals localized on ghost atoms. A threshold for
this selection must be specified.
:LUMO:B: :
Molecular orbital coefficients and energies read from INPORB file rather than
RunFile.
:EREF:B: :
Specifies the value of the reference energy. Available only in combination with
LumOrb. Default value of the reference energy is set to zero.
:TEST:B: :
If this keyword is specified the input is checked without performing any
calculation.
:T1AM:A: :
Singles amplitudes/energy introduced according to Thouless formula. An INPORB
file containing MOs different from HF orbitals is required.
:LOVM:A: :
"Freeze-and-Delete" type of MP2, available only in connection with Cholesky or
RI. An example of input for the keyword LOVM is the following:

    LovMP2
    2  0.2  (nCenters,thrs)
    C1 N    (Center labels)
    DoMP2

In this case, both occupied and virtual orbitals (localized by the program) are
divided in two groups: those (A) mainly located on the two (symmetry
independent) centers C1 and N, and the remaining ones (B), which are obviously
"outside" this region. The value of the threshold (between 0 and 1) is used to
perform this selection (in the example, 20% of the gross Mulliken population of
a given orbital on the specified atoms). By default, the MP2 calculation is
performed only for the correlating orbitals associated with the region A
("active site"). The keyword DoMP2 is optional and forces the program to perform
also an independent MP2 calculation on the "frozen region" (B). Alternatively,
one can specify the keyword VirAll in order to use all virtual orbitals as
correlating space for the occupied orbitals of the active site.
:FNOM:A: :
Performs a Frozen Natural Orbital (FNO) MP2 calculation, available only in
combination with Cholesky or RI integral representation An example of input for
the keyword FNOM is the following:

    FNOMp2
     0.4
    DoMP2

The keyword FNOM has one compulsory argument (real number in ]0,1]) specifying
the fraction of virtual orbitals (in each irrep) to be retained in the FNO-MP2
calculation. The keyword DoMP2 is optional and used to compute the (estimated)
correction for the truncation error.
:PrPt:B: :
Multipole moments (dipoles and quadrupoles) are calculated and printed. The
computational effort is increased substantially compared to an energy-only
calculation.
:Grdt:A: :
Analytical gradients are used in subsequent gradient calculations.
:NoGrdt:A: :
Disables calculation of variational densities for analytical gradients.
:ChoAlgorithm:A: :
Specifies the algorithm to use for Cholesky MP2. Options:

  0 -- generate MO integrals on disk from Cholesky vectors

  1 -- compute integrals on-the-fly, minimal operation count

  2 -- compute integrals on-the-fly, minimal disk access (default)
:Verbose:A: :
Increases printing from the Cholesky MP2 routines.
:Decompose:A: :
Requests Cholesky decomposition of the (ai|bj) integrals.
:ThrCholesky:A: :
Specifies the threshold for (ai|bj) Cholesky decomposition.
:Nodecompose:A: :
Turns off Cholesky decomposition of the (ai|bj) integrals.
:Span:A: :
Specifies the span factor used for (ai|bj) Cholesky decomposition.
:MxQual:A: :
Specifies the max. number of qualified diagonals treated during (ai|bj) Cholesky
decomposition.
:Presort:A: :
Presort the MO Cholesky vectors according to the batches over occupied orbitals.
[MCKINLEY]
:Description:D
This program calculates the second and first order derivatives used for
calculating second order derivatives of the energies with perturbation dependent
basis sets for SCF and CASSCF wavefunctions. Vibronic frequencies are calculated
by the MCLR program which MCKINLEY will start automatically.
:Oneonly:B: :
Compile only the nuclear repulsion and one-electron integrals contribution. The
default is to compute all contributions.
:Cutoff:A: :
Threshold for ignoring contributions. The default is 1.0D-7. The prescreening is
based on the 2nd order density matrix and the radial overlap contribution to the
integral derivatives.
:ShowHessian:B: :
The Hessian contributions will be printed.
:Perturbation:B: :
This keyword takes one of the arguments HESSian or GEOMetry on the following
line. Hessian makes MCKINLEY compute the full geometrical Hessian, which is
required for a subsequent calculation of the vibronic frequencies with the MCLR
program. GEOMetry calculates only those parts of the geometrical Hessian that
correspond to symmetry allowed displacements (Could be used in a second order
geometry optimization). The default is to compute the Hessian for vibrational
frequency calculations.
:NoMCLR:B: :
Request that this calculation is not followed by the execution of the MCLR
module.
:Verbose:B: :
The output will be a bit more verbose.
[MCLR]
:Description:D
This program calculates the response of a SCF or MCSCF wave function and related
second order properties.
:Sala:B: :
Makes MCLR compute the Lagrangian multipliers for a state average MCSCF wave
function. These multipliers are required by ALASKA to obtain analytical
gradients for an excited state, when the excited state is determined by a SA
optimization. SALA has to be followed by an integer on the next line, specifying
the excited state for which the gradient is required.
:CHOF:B: :
Makes MCLR, in association with compute the Lagrangian multipliers for a state
average MCSCF wave function and the RI option, to use the so-called Cho-FOCK
algorithm, rather than the default Cho-MO algorthm. The Cho-Fock option is the
fastest for calculations with large basis sets. For details consult the paper
entitled "Analytical gradients of the state-average complete active space
self-consistent field method with density fitting", doi.org/10.1063/1.4927228.
:NAC:B: :
Makes MCLR compute the Lagrangian multipliers for a coupling in a state average
MCSCF wave function. These multipliers are required by ALASKA to obtain
analytical nonadiabatic couplings between states. NAC has to be followed by two
integers on the next line, specifying the states between which the nonadiabatic
coupling is required.
:EXPDimension:A: :
Here follows the dimension of the explicit Hamiltonian used as preconditioner in
the Preconditioned conjugate gradient algorithm. Default 100.
:ITERations:A: :
Specify the maximum number of iterations in the PCG. Default 200.
:LOWMemory:A: :
Lowers the amount of memory used, by paging out the CI vectors on disk. This
will lower the performance, but the program will need less memory.
:PRINt:A: :
Raise the print level, default 0.
:RASSi:A: :
This keyword is used for transforming the CI vectors to split GUGA
representation, and transforming the orbital rotations to AO basis, to make the
response accessible for state interaction calculations.
:SEWArd:A: :
Specify one particle operators, used as right hand side, form the ONEINT file
constructed by SEWARD. The keyword is followed by one row for each perturbation:
LABEL symmetry Component
:EndSeward:A: :
Marks the end of perturbation specifications read from SEWARD ONEINT file.
:THREshold:A: :
Specify the convergence threshold for the PCG. Default is 1.0e-4.
:DISOtope:A: :
Calculates frequencies modified for double isotopic substitution.
:THERM:A: :
Request an user specified thermochemical analysis. The keyword is followed by
the Rotational Symmetry Number, the Pressure (in atm), and lines containing the
Temperatures (in K) for which the thermochemistry will be calculated. The
section is ended by the keyword "End of PT".
:TIME:A: :
Calculates the time dependent response of an electric periodic perturbation. The
frequency of the perturbation should be specified on the following line. Used to
calculated time dependent polarizabilities and required in a RASSI calculation
of two photon transition moments.
:MASS:A: :
Used to generate single and double (in conjunction with DISO) isotope shifted
frequencies, with the isotope masses specified by the user. This implementation
can be useful for example in calculating intermolecular frequencies which are
contaminated by the BSSE. By setting the corresponding masses to very large
numbers, ghost orbitals can be used in the frequency calculation. MASS needs the
atomic label and the new mass in units of u (real), for each element of the
molecule.
:TWOS:A: :
It is used to activate the two-step run of MCLR, in connection to the
computation of molecular gradients / NACs for SA-CASSCF wave function. The
keyword takes two values: FIRST or SECOND. In the first MCLR run (i.e. TWOStep =
FIRST), the MOTRA and QDAT files are generated. In the subsequent MCLR run
(TWOstep=SECOND), the files MOTRA and QDAT are read and employed for the
computation of the corresponding Lagrangian multipliers. This approach allows to
reduce the input-output of data to/from disk during such calculations.
[MCPDFT]
:Description:D
The MCPDFT program performs an MC-PDFT calculation following a CASSCF, RASSCF,
or GASSCF wave function run. It requires the one- and two-electron integral
files generated by SEWARD, and a JOBIPH file generated by the RASSCF module.
:DFCF:A: :
Use this keyword to scale the exchange terms and/or correlation terms of the
functional requested. This keyword should be followed by the scaling factor for
the exchange terms and the scaling factor for the correlation terms, separated
by a space. If the values are 1.0 (default), then the original functional is
used. For an HLE-type functional, use 1.25 (for exchange) and 0.5 (for
correlation). Example: DFCF=1.25 0.5
:GRAD:B: :
Needed to compute potentials for MC-PDFT analytical gradients.
:MSPDFT:B: :
Enable MS-PDFT. Requires H0_Rotate.txt file in the scratch directory.
[MKNEMO]
:Description:D
This module generates intermolecular potential between two subsystems and saves
all information in the NEMO file format.
:MOLE:B: :
The Mole block specifies a molecule, in the format:

    Mole : MoleculeName
      AtomLabel  x  y  z
      .........  .. .. ..
      AtomLabel  x  y  z
    End

where the Mole is keyword which marks begining of a molecule's block, the
MoleculeName is an unique name of molecule, the AtomLabel is the label of atom,
and x, y, and z are coordinates of atoms. The name of the molecule is case
sensitive, but atom's label is not.
:CLUS:B: :
In the Clus block, user defines a cluster in format:

    Clus : ClusterName : ClusterTransformation
      MoleculeName : MoleculeTransformation
      ............
      MoleculeName
    End

where the Clus keyword marks beginning of cluster's block, the
ClusterName[MoleculeName] is an unique name of cluster[molecule], and the
ClusterTransformation[MoleculeTransformation] is an optional argument which
definies a transformation of the cluster[molecule]. The cluster and molecule
names are case sensitive. The MoleculeName must be defined in a Mole block.
:DISP:B: :
The Disp block contains information about transformations of one of the clusters
in the format:

    Disp
      ClusterName : NumberOfSteps Transformation
      ........... : ............. ......... .....
      ClusterName : NumberOfSteps Transformation
    End

where the ClusterName is a name one of the clusters which has been defined in
Clus block, the NumberOfSteps is a number of steps in which transformation will
be reached, and the Transformation is a translation or rotation operation.
:GETE:B: :
The GETEnergy block is used to read total energy stored at RUNFILE, and to save
it into the MKNEMO.Conf file. The format of this block is

    &MkNemo&End
     GetE
       Arg
    End Of Input

where the Arg must be any label from the list below. Use

  S1 -- to save the energy of super-system at the first level of theory,

  S2 -- to save the energy of super-system at the second level of theory,

  A1 -- to save the energy of the A-subsystem with virtual orbitals of the
        B-subsystem at the first level of theory,

  A2 -- to save the energy of the A-subsystem with virtual orbitals of the
        B-subsystem at the second level of theory,

  B1 -- to save the energy of the B-subsystem with virtual orbitals of the
        A-subsystem at the first level of theory,

  B2 -- to save the energy of the B-subsystem with virtual orbitals of the
        A-subsystem at the second level of theory.

Please note, that MKNEMO does not have any possibility to check what kind of
total energy was computed in the previous step by called MOLCAS module.
:NEXT:B: :
The NEXT block is used to generate new configuration according to displacements
provided in the DISPlacement block and to save all information about potential
curve from previous step into the MKNEMO.Nemo file. This block cannot be used
before Mole, Clus, and Disp blocks. Format:

    &MkNemo&End
      Next
    End Of Input
:TEST:B: :
The TEST block CAN BE ONLY USED to save verification data for MOLCAS command
verify. Format:

    &MkNemo&End
      Test
    End Of Input
[MOTRA]
:Description:D
This program transforms one- and two-electron integrals from AO basis to MO
basis. The integrals that are transformed are the one-electron Hamiltonian and
the two-electron repulsion integrals.
:LUMOrb:B: :
Specifies that the molecular orbitals are read from a formatted file produced by
one of the wave function generating programs (default). No additional input is
required. NOTE: Either of keywords LUMORB or JOBIPH should be specified LUMORB
is the default option.
:JOBIph:B: :
Specifies that the molecular orbitals are read from the job interface file,
called JOBIPH, produced by the RASSCF program. MOTRA will in this case read the
average orbitals.
:AUTO:B: :
This keyword specified automatic deletion of orbitals based on occupation
numbers. The following line contain one threshold per symmetry, and all orbitals
with occupation numbers smaller that the threshold will be deleted. NOTE: If the
keywords AUTO and DELEte are both specified, the larger number will be used.
:DELEted:B: :
Specifies the number of virtual orbitals that are not to be used as correlating
orbitals in subsequent correlation calculation(s). The default is no deleted
orbitals. The keyword requires one additional line of input with the number of
deleted orbitals in each symmetry. NOTE: The deleted orbitals are the last
orbitals in each symmetry block.
:FROZen:B: :
Specifies the number of doubly occupied orbitals that are left uncorrelated in
subsequent correlation calculation(s). The keyword requires one additional line
of input with the number of frozen orbitals in each symmetry (free format).
NOTE: The frozen orbitals are the first in each symmetry block. Default is to
freeze the core (but not semi-core) orbitals.
:ONEL:B: :
Specifies that only one-electron integrals are to be transformed. No additional
input is required.
:PRINt:B: :
Specifies the print level in the program. The default (1) does not print the
orbitals that are used in the transformation, but they appear at print level 2.
Beware of large print levels since vast amounts of output may be produced. The
value is read from the line after the keyword, in free format.
:RFPErt:B: :
Add a constant reaction field perturbation to the bare nuclei Hamiltonian. The
perturbation is read from the file RUNOLD (if not present defaults to RUNFILE)
and is the latest self consistent perturbation generated by one of the programs
SCF or RASSCF.
:CTON:B: :
Specifies that Cholesky vectors are to be transformed without subsequent
calculation of the two-el integrals. It requires as input one of the two
following strings: "pqK" or "Kpq", which indicate the storage format as L(pq,K)
or L(K,pq), respectively. The former is the default option. Transformed vectors
are stored in the files _CHMOT, one for each compound symmetry. Available only
in combination with Cholesky or RI integral representation.
:DIAG:B: :
Activates the evaluation of the diagonal integrals in MO basis. Requires the
keyword CTONly. The file DIAGINT is generated which contains these integrals.
:Title:B: :
Print a title line This keyword should be followed by exactly one title line.
[MPPROP]
:Description:D
The MpProp program generates a distributed multipole expansion of the charge
density of a molecule and atom distributed polarizabilities.
:BONDs:B: :
Use this Keyword to define bond between atoms. This Keyword should be followed
by a line of atomlabels separated by a space. The following line can define
another bond. This Keyword should be ended by a END statement in the last line.
The example below means that O1 will bond to H1 and H2. It does not mean that H1
is bonded to H2.
:TITLe:B: :
This Keyword specifies the title of the molecule. This will be recognized by the
Nemo package. And you are requested to use this Keyword. It is defined in the
program as a Character*80
:LUMOrb:B: :
This Keyword tells MPPROP to use an INPORB file for the one electron densities.
:TYPE:B: :
This is to specify the typen of the atom. Where the first number is the
atomnumber m counted as in SEWARD. The second number is the type of the atom n.
:POLArizability:B: :
This specifies if the polarizability should be calculated or not.

  0 -- Means no polarizability should be calculated.

  1 -- (Default) Means polarizability should be calculated.
:NONEarestAtom:B: :
The program is written in the way that multipoles should be moved to the nearest
atom if the nearest atom is closer than any of the bonding atoms. Note that the
move will be to atoms and not nearest bond. This can be implemented if requested
:ALLCenter:B: :
This Keyword means that all centers are considered for the distributed multipole
expansion.
[MPSSI]
:Description:D
In analogy to the RASSI program, the MPSSI program calculates overlaps, and
matrix elements of one-electron operators, and of the electronic Hamiltonian,
over a basis of matrix-product state (MPS) wave functions calculated by
QCMaquis, which may each have its own independent set of orbitals. Energies and
matrix elements are computed also for the non-interacting linear combinations of
states, i.e., doing a limited CI using the MPS states as a non-orthogonal basis.
MPSSI can be used to compute dipole oscillator strengths, spin-orbit interaction
matrix elements as well as, for example, transition dipole moments for
spin-orbit eigenstates.
:QDSC:A: :
Enable the QDSC (quasi-degenerate strongly contracted) effective Hamiltonian.
:QDPC:A: :
Enable the QDPC (quasi-degenerate partially contracted) effective Hamiltonian.
[MRCI]
:Description:D
The MRCI program is used for Multi-Reference SDCI or ACPF calculations. The code
originates in an MRCI program by M. Blomberg and P. E. M. Siegbahn, later
rewritten extensively. It requires a file generated by the GUGA program.
:Title:B: :
Followed by a title line
:SDCI:B: :
Make an MR-SDCI calculation. (This is presently the default anyway). Keywords
ACPF and SDCI are mutually exclusive.
:ACPF:B: :
Make an MR-ACPF calculation, rather than an SDCI. Keywords ACPF and SDCI are
mutually exclusive.
:GValue:A: :
The coefficient g, altering the ACPF functional.
:NRRoots:B: :
The number of CI roots (states) to be computed. Default=1.
:Roots:B: :
Which roots to compute, as a list of numbers. (counted in order of reference
CI). Keywords ROOTS and SELECT are mutually exclusive.
:Select:A: :
Which roots to select, specified as a selection space. See manual for details.
Keywords ROOTS and SELECT are mutually exclusive.
:Restart:A: :
Use a previous wavefunction from the MRCIVECT file as start approximation.
:ThrPrint:A: :
Enter threshold of CI coefficients to be printed. Default 0.05.
:EConvergence:A: :
Enter energy convergence threshold. Default 1.0D-8.
:Print:A: :
Set print level. Default is 5.
:MaxIterations:A: :
Set max number of iterations. Default is 20. Largest possible is 49.
:MxVectors:A: :
Set max nr of trial vector pairs (CI+sigma) kept on disk. Default is
MAX(NRROOTS,10). Must be at least NRROOTS. Not much point in using more than
3*NRROOTS except for very few roots.
:Transition:A: :
Relevant for multi-root calculations. The transition matrix elements of all
operators, for which there are integrals on the ONEINT file, will be computed
for each pair of states.
:Frozen:A: :
Enter a list specifying, for each symmetry, how many orbitals to keep frozen
(uncorrelated), in addition to those that were frozen already in the integral
transformation (See MOTRA). Default is 0 in all symmetries.
:Deleted:A: :
Enter a list specifying, for each symmetry, how many orbitals to delete in
addition to those that were deleted already in the integral transformation (See
MOTRA). Default is 0 in all symmetries.
:RefCI:A: :
Do only a reference CI.
:PrOrbitals:A: :
Threshold on occupation number, for printing natural orbitals. Default 1.0D-5.
[MULA]
:Description:D
This program computes intensities of vibrational transitions between electronic
states.
:TITLe:B: :
A single title line follows.
:FORCe:B: :
A force field will be given as input (or read from file).
:ATOMs:B: :
Followed by one line with an atom label for each individual atom in the
molecule. A label consists of element name followed by a numeric label,
optionally followed by a nuclear mass.
:INTErnal:B: :
Followed by lines of the form e.g. 'BOND C11 Br3', i.e. coordinate type and atom
labels, Other choices are 'ANGLE a b c', 'TORSION a b c d' and 'OUTOFPL a b c
d', where a--d are atom labels.
:MODEs:B: :
Selection of modes to be used in the intensity calculation.
:MXLEvels:B: :
Followed by one line with max excitation level in the two states.
:VARIational:B: :
Make a variational calculation, no harmonic approximation.
:TRANsitions:B: :
Followed by the word FIRST, then a line with a list of the number of phonons to
be distributed among the modes, for the first state, then similarly for second
state.
:ENERgies:B: :
The electronic T_0 energies of the two states, each value followed by "eV" or
"au".
:GEOMetry:B: :
Geometry input follows. Next line is FILE, CARTESIAN, or INTERNAL. Followed by
FIRST, then coordinates, then SECOND, then coordinates. Format: See User's
Guide.
:MXORder:B: :
Next line is 0 for constant transition dipole, 1 for linear function, etc.
:OSCStr:B: :
Print oscillator strengths rather than intensities.
:BROAdplot:B: :
Apply artificial broadening to the spectrum plot peaks.
:LIFEtime:B: :
Enter life time (sec) to be used for lifetime broadening of artificial spectrum.
:NANOmeters:B: :
If this keyword is included, the plot file will be in nanometers. Default is in
eV.
:CM-1:B: :
If this keyword is included, the plot file will be in cm^-1. Default is in eV.
:PLOT:B: :
Enter the limits (in eV, cm^-1, or in nm) for the plot file.
:VIBWrite:B: :
Print vibrational levels in the output.
:VIBPlot:B: :
Generate files plot.modes1 and plot.modes2 picturing normal modes.
:HUGElog:B: :
Much more detailed output.
:SCALe:B: :
Enter scale factors that will multiply the Hessians.
:DIPOles:B: :
Transition dipole data follows. A single line with x,y,z components, if
MAXORDER=0. Else additional lines with gradient values.
:NONLinear:A: :
Specifies non-linear variable substitutions in definition of potential
functions.
:POLYnomial:A: :
Specifies which polynomial terms that are used in modeling potential functions.
:DATA:B: :
Grid data follows. See manual for format.
[NEMO]
:Description:D
The Nemo program of the molcas program system generates: fitting of potential
surfaces, energy optimizations, potential curves and simulation parameters.
:ALPHa:B: :
Use this Keyword to define the alpha parameter for a specific atom and atomtype.
The should be followed by a line/lines composed of the element number, the
atomtype and the value for alpha.This Keyword should be ended by a END statement
in the last line. The example below means that uran type 1 will have the value
0.1 .
:KAPPa:B: :
Use this Keyword to define the kappa parameter for a specific atom and atomtype.
The keyword should be followed by a line/lines composed of the element number,
the atomtype and the value for kappa.This Keyword should be ended by a END
statement in the last line. The example below means that uran type 1 will have
the value 10.0 . The kappa parameter will be used as a prefactor to the exponent
expression for the repulsion.
:ALCT:B: :
This keyword is for the charge transfer term that can be used if one specifies
that in the NEMO keyword. The energy term is exactly the same expression as the
repulsion, but with a minus instead. Use this Keyword to define the charge
transfer alpha parameter for a specific atom and atomtype. The keyword should be
followed by a line/lines composed of the element number, the atomtype and the
value for charge transfer alpha.This Keyword should be ended by a END statement
in the last line. The example below means that uran type 1 will have the value
0.1 . The charge transfer alpha parameter will be used in the exponent for the
repulsion.
:KACT:B: :
This keyword is for the charge transfer term that can be used if one specifies
that in the NEMO keyword. The energy term is exactly the same expression as the
repulsion, but with a minus sign instead. Use this Keyword to define the charge
transfer kappa parameter for a specific atom and atomtype. The keyword should be
followed by a line/lines composed of the element number, the atomtype and the
value for charge transfer kappa. This Keyword should be ended by a END statement
in the last line. The example below means that uran type 1 will have the value
10.0 . The charge transfer kappa parameter will be used as a prefactor to the
exponent expression for the repulsion.
:VALEnce:B: :
Set the number of valence electrons. The keyword should be followed by a
line/lines composed of the element number, the atomtype and the value for
kappa.This Keyword should be ended by a END statement in the last line. The
example below means that oxygen type 2 will have 6 valence electrons.
:NOISotropicPolarizabilities:B: :
The default is to use isotropic polarizabilities for the induction energy. This
is due to the fact that we use Thole damping as default, which require isotropic
polarizabilities.
:NOMove:B: :
Do not move the interactions sites which is the default.
:NOQUadrupoleDelete:B: :
The default is to replace the quadrupoles with local dipoles to get the correct
total quadrupole. If this keyword is used, the quadrupoles will be truncated at
the dipole level.
:NODAmping:B: :
As default the Thole damping is used, but using this heyword that is overruled.
:SEED:B: :
The seed to the random generator.
[NEVPT2]
:Description:D
The NEVPT2 program computes the dynamic correlation correction to a DMRG-SCF
energy according to the NEVPT2 theory developed originally by Angeli et al.
Currently, NEVPT2 requires a DMRG reference wavefunction calculated with
QCMaquis (with RASSCF or DMRGSCF module).
:STATES:B: :
Number of states to calculate. Default: 1
:NOMS:B: :
Omit the (multi-state) QD-NEVPT2 calculation for multiple states.
:MULT:B: :
Select states for (multi-state) QD-NEVPT2 calculation.
:FILE:B: :
Select JobIph or file with the reference wavefunction.
:FROZEN:B: :
Select frozen orbitals.
:NOPC:B: :
Omit the partially-contracted NEVPT2 calculation.
:SKIPK:B: :
Skip calculation of Koopmans' matrices and use them from a previous NEVPT2
calculation.
:RDMRead:B: :
Read previously calculated 4-RDMs from QCMaquis result files instead of
calculating it.
:DistributedRDM:B: :
Read RDMs calculated in a distributed fashion.
[NUMERICAL_GRADIENT]
:Description:D
The Numerical_Gradient module is a program which numerically evaluates the
gradient of the energy with respect to nuclear perturbations.
[POLY_ANISO]
:Description:D
The POLY_ANISO program allows the non-perturbative calculation of effective spin
(pseudospin) Hamiltonians and static magnetic properties of mononuclear
complexes and fragments completely ab initio,including the spin-orbit
interaction. As a starting point it uses the results of a RASSI calculation for
the ground and several excited spin-orbital multiplets.

The following quantities can be computed:

  1. Parameters of pseudospin magnetic Hamiltonians:

    a) First order (linear after pseudospin) Zeeman splitting tensor (g tensor),
       including the determination of the sign of the product gX*gY*gZ

    b) Second order (bilinear after pseudospin) zero-field splitting tensor (D
       tensor)

    c) Higher order zero-field splitting tensors (D^2, D^4, D^6, ..., etc.)

    d) Higher order Zeeman splitting tensors (G^1, G^3, G^5, ..., etc.)

    e) Angular Moments along the main magnetic axes

  2. Crystal-Field parameters for the ground atomic multiplet for lanthanides

  3. Static magnetic properties:

    a) Van Vleck susceptibility tensor

    b) Powder magnetic susceptibility function

    c) Magnetization vector for specified directions of the applied magnetic
       field

    d) Powder magnetization
:NNEQ:B: :
This keyword defines several important parameters of the calculation. On the
first line after the keyword the program reads 2 values:

  1) the number of types of different magnetic centers (NON-EQ) of the cluster
     and

  2) a letter "T" or "F" in the second position of the same line.

The number of NON-EQ is the total number of magnetic centers of the cluster
which cannot be related by point group symmetry. In the second position the
answer to the question: "Have all NON-EQ centers been computed ab initio?" is
given: "T" for True and "F" for False. On the third position, the answer to the
question: "Are the rassi.h5 files to be read for input?" is given. For the
current status, the letter "F" is the only option. On the following line the
program will read NON-EQ values specifying the number of equivalent centers of
each type. On the following line the program will read NON-EQ integer numbers
specifying the number of low-lying spin-orbit functions from each center forming
the local exchange basis.
:SYMM:B: :
Specifies rotation matrices to symmetry equivalent sites. This keyword is
mandatory in the case more centers of a given type are present in the
calculation. This keyword is mandatory when the calculated polynuclear compound
has exact crystallographic point group symmetry. In other words, when the number
of equivalent centers of any kind "i" is larger than 1, this keyword must be
employed. Here the rotation matrices from the one center to all the other of the
same type are declared. On the following line the program will read the number
"1" followed on the next lines by as many 3x3 rotation matrices as the total
number of equivalent centers of type "1". Then the rotation matrices of centers
of type "2", "3" and so on, follow in the same format.
:COOR:B: :
Specifies the symmetrized coordinates of the metal sites. This keyword enables
computation of dipole-dipole interaction.
:MLTP:B: :
The number of molecular multiplets (i.e. groups of spin-orbital eigenstates) for
which g, D and higher magnetic tensors will be calculated. The program reads two
lines: the first is the number of multiplets (NMULT) and on the second line the
array of NMULT numbers specifying the dimension of each multiplet. By default,
the code will first analyze the energy spectra by itself and will compute the g
and D tensors for ten low-lying groups of states. By using this keyword the user
overwrites the default.
:TINT:B: :
Specifies the temperature points for the evaluation of the magnetic
susceptibility. The program will read three numbers: Tmin, Tmax, nT. Units of
temperature = kelvin (K).

  Tmin -- the minimal temperature (Default 0.0 K)

  Tmax -- the maximal temperature (Default 300.0 K)

  nT   -- number of temperature points (Default 101)
:HINT:B: :
Specifies the field points for the evaluation of the molar magnetization. The
program will read four numbers: Hmin, Hmax, nH, and dltH0. Units of magnetic
field = tesla (T).

  Hmin -- the minimal field (Default 0.0 T)

  Hmax -- the maximal field (Default 300.0 T)

  nH   -- number of field points (Default 101)
:TMAG:B: :
Specifies the temperature at which the field-dependent magnetization is
calculated. Default is 2.0 K
:ENCU:B: :
This keyword is used to define the cut-off energy for the lowest states for
which Zeeman interaction is taken into account exactly. The contribution to the
magnetization coming from states that are higher in energy than E (see below) is
done by second order perturbation theory. The program will read two integer
numbers: NK and MG. Default values are: NK=100, MG=100. The field-dependent
magnetization is calculated at the temperature value TMAG.
:ERAT:B: :
This keyword is used to define the cut-off energy for the lowest states for
which Zeeman interaction is taken into account exactly. The contribution to the
magnetization coming from states that are higher in energy than E (see below) is
done by second order perturbation theory. The program will read one real number
in the domain 0.0-1.0. The field-dependent magnetization is calculated at the
temperature value TMAG.
:MVEC:B: :
Defines the number of directions for which the magnetization vector will be
computed. On the first line below the keyword, the number of directions should
be mentioned (NDIR. Default 0). The program will read NDIR lines for spherical
coordinates specifying the direction "i" of the magnetic field (theta_i and
phi_i). These values should be in radians.
:ZEEM:B: :
Defines the number of directions for which the magnetization vector will be
computed. On the first line below the keyword, the number of directions should
be mentioned (NDIR. Default 0). The program will read NDIR lines for spherical
coordinates specifying the direction "i" of the magnetic field (theta_i and
phi_i). These values should be in radians.
:MAVE:B: :
Specifies the number of directions of the applied magnetic field for the
computation of the powder molar magnetization. The program will read two
numbers: N_theta and N_phi.

  N_theta -- number of "theta" points in the interval (0, pi/2) (i.e. on the Z
             axis ) (Default 12)

  N_phi   -- number of "phi" points in the interval (0, 2*pi).(i.e. on the
             equator) (Default 24)

The number of directions over which the actual averaging will take place is
roughly the product of N_theta and N_phi.
:TEXP:B: :
This keyword allows computation of the magnetic susceptibility at experimental
temperature points. On the line below the keyword, the number of experimental
points NT is defined, and on the next NT lines the program reads the
experimental temperature (in K) and the experimental magnetic susceptibility (in
cm^3 K mol^-1). TEXP and TINT keywords are mutually exclusive. The POLY_ANISO
will also print the standard deviation from the experiment.
:HEXP:B: :
This keyword allows computation of the molar magnetization at experimental field
points. On the line below the keyword,the number of experimental points NH is
defined, and on the next NH lines the program reads the experimental field
strength (tesla) and the experimental magnetization (in Bohr magnetons). HEXP
and HINT are mutually exclusive. The POLY_ANISO will print the standard
deviation from the experiment.
:ZJPR:B: :
This keyword specifies the value (in cm^-1) of a phenomenological parameter of a
mean molecular field acting on the spin of the complex (the average
intermolecular exchange constant). It is used in the calculation of all magnetic
properties (not for spin Hamiltonians) (Default is 0.0)
:ABCC:B: :
This keyword will enable computation of magnetic and anisotropy axes in the
crystallographic abc system. On the next line, the program will read six real
values, namely (a, b, c, alpha, beta, and gamma), defining the crystal lattice.
On the second line, the program will read the Cartesian coordinates of the
magnetic center. The computed values in the output correspond to the
crystallographic position of three "dummy atoms" located on the corresponding
anisotropy axes, at the distance of 1.0 angstrom from the metal site.
:XFIE:B: :
This keyword specifies the value (in tesla) of applied magnetic field for the
computation of magnetic susceptibility by: dM/dH and M/H formulas. A comparison
with the usual formula (in the limit of zero applied field) is provided.
(Default is 0.0)
:PRLV:B: :
This keyword controls the print level.

  2  -- normal. (Default)

  3+ -- (debug)
:PLOT:B: :
This keyword will generate a few plots (png or eps format) via an interface to
the linux program "gnuplot". The interface generates a datafile, a gnuplot
script and attempts execution of the script for generation of the image. The
plots are generated only if the respective function is invoked. The magnetic
susceptibility, molar magnetisation and blocking barrier (UBAR) plots are
generated. The files are named: XT.dat, XT.plt, XT.png, MH.dat, MH.plt, MH.png,
BARRIER_TME.dat, BARRIER_ENE.dat, BARRIER.plt and BARRIER.png.
:OLDA:B: :
This keyword requests to use the old-formatted ANISOINPUT files produced by
SINGLE_ANISO run. Please make use the new DATAFILE $Project.aniso produced in
any successful run of SINGLE_ANISO.
[QMSTAT]
:Description:D
Under construction
[QUATER]
:Description:D
This program aligns two molecules or frames of reference
:NOROtation:B: :
No rotation is performed by the program. Only the rotation matrix is printed
out.
:NOTRanslation:B: :
No translation is performed by the program.
:DEBUg:B: :
Turn on DEBUG printout
:AXIS:B: :
Define the old frame of reference
:NEWAxis:B: :
Define the new frame of reference
:GEO1:B: :
Define the first geometry
:GEO2:B: :
Define the second geometry
:XYZ1:B: :
Define the origin and two axes for the orientation of the first geometry by the
index of three atoms of this geometry.
:XYZ2:B: :
Define the origin and two axes for the orientation of the second geometry by the
index of three atoms of this geometry.
:END:B: :
End of input
[RASSCF]
:Description:D
The RASSCF program generates CASSCF, RASSCF, GASSCF and Stochastic-CASSCF type
wave functions. It requires the one- and two-electron integral files generated
by SEWARD, and starting orbitals from either a previous RASSCF calculation or
from any of the other wave function generating programs, or from the GUESSORB
facility. The RASSCF module can be used also for Multiconfiguration Pair-Density
Functional Theory (MC-PDFT) calculations. The resulting orbitals can be
visualized, e.g. by LUSCUS.
:NECI:A: :
This keyword is used to enable Stochastic-CASSSCF calculations and features
related to it (such as produce a FCIDUMP file). Additional keywords like
"totalwalkers" have the same meaning as in NECI and are just passed on.
:EMBD:A: :
This keyword is used jointly to the NECI keyword in the context of the
Stochastic-CASSCF method, to enable the embedded Stochastic-CASSSCF
calculations, where NECI runs as subroutine of Molcas.
:DMPO:A: :
This keyword is used in the context of the Stochastic-CASSCF method to produce a
FCIDUMP file in a ASCII format that can be recognized by the NECI program and
quit in a clean way (no CI or CASSCF calculation will be done).
:DEFD:A: :
This keyword is used in the context of the Stochastic-CASSCF method to provide
the FCIQMC algorithm with an initial guess for the reference Slater determinant.
It is followed (new line) by a string of integers representing spin-orbitals in
the order given in the INPORB file.
:GUGA:A: :
Use spin eigenfunctions instead of Slater determinants in the basis for the
FCIQMC dynamics.
:REOR:A: :
The user can input a permutation by specifying the number of non fixed point
elements, followed by the order of the non fixed point elements. If the total
number of active orbitals is e.g. 6 the following example of the REOR keyword

    REOR
      3
      4 5 1

leads to an order of [4 2 3 5 1 6].
:TITLe:B: :
Follows the title in a single line
:SYMMetry:B: :
Specify symmetry type (irrep) as a number between 1 and 8. Default is 1.
:SPIN:B: :
The keyword is followed by an integer giving the value of spin multiplicity
(2S+1). Default is 1 (singlet).
:CHARge:B: :
Specify the total charge of the system as an integer.
:RASScf:B: :
Specify two numbers: maximum number of RAS1 holes, and maximum number of RAS3
electrons.
:NACTel:B: :
Specify three numbers: total number of active electrons, maximum number of RAS1
holes, and maximum number of RAS3 electrons.
:CIROot:B: :
Specifies the CI root(s) and the dimension of the starting CI matrix used in the
CI Davidson procedure. This input makes it possible to perform orbital
optimization for the average energy of a number of states. The first line of
input gives two or three numbers, specifying the number of roots used in the
average calculation (NROOTS), the dimension of the small CI matrix in the
Davidson procedure (LROOTS), and possibly a non-zero integer IALL. If IALL.ne.1
or there is no IALL, the second line gives the index of the states over which
the average is taken (NROOTS numbers,IROOT). Note, that the size of the CI
matrix, LROOTS, must be at least as large as the highest root, IROOT. If, and
only if, NROOTS > 1 a third line follows, specifying the weights of the
different states in the average energy. If IALL=1 has been specified, no more
lines are read. A state average calculation will be performed over the NROOTS
lowest states with equal weights.
:CISElect:A: :
This keyword is used to select CI roots by an overlap criterion. The input
consists of three lines per root that is used in the CI diagonalization
(3*NROOTS lines in total). The first line gives the number of configurations
used in the comparison, nRef, where nRef at most 5. The second line gives nRef
reference configuration indices. The third line gives estimates of CI
coefficients for these CSF's.
:CRPRoject:A: :
This keyword is followed by two numbers, which define a Hamiltonian shift by a
projection operator times a scalar number. For choosing these numbers (integer
and real), please read the section about core hole states in the manual for the
RASSCF program.
:ATOM:A: :
This keyword is used to get orbitals with pure spherical symmetry for atoms. Use
this instead of SUPSYM for single atoms.
:LINEar:A: :
This keyword is used to get orbitals with pure rotational symmetry for linear
molecules. Use this instead of SUPSYM for linear molecules.
:RLXRoot:A: :
Specifies which root to be relaxed in a geometry optimization of a state average
wave function. Thus, the key word has to be combined with CIRO.
:MDRLxroot:A: :
Defines the root for gradient computation in the first step of a molecular
dynamics simulation. It is used like RLXR keyword except that its value is
determined by the trajectory surface hopping algorithm in the following steps.
:EXPErt:A: :
This keyword forces the program to obey the input. Normally, the program can
decide to change the input requests, in order to optimize the calculation. Using
the EXPERT keyword, such changes are disallowed.
:RFPErt:A: :
This keyword will add a constant reaction field perturbation to the bare nuclei
Hamiltonian. The perturbation is read from the RUNOLD (if not present defaults
to RUNFILE) and is the latest self consistent perturbation generated by one of
the programs SCF or RASSCF.
:NONEquilibrium:A: :
Makes the slow components of the reaction field of another state present in the
reaction field calculation (so-called non-equilibrium solvation). The slow
component is always generated and stored on file for equilibrium solvation
calculations so that it potentially can be used in subsequent non-equilibrium
calculations on other states.
:RFROot:A: :
Enter the index number of that particular root in a state-average calculation
for which the reaction-field is generated. Used with the PCM model.
:CIRFroot:A: :
Enter the relative index of one of the roots specified in CISElect for which the
reaction-field is generated. Used with the PCM model.
:NEWIph:A: :
The default name of the JOBIPH file will be determined by any already existing
such files in the work directory, by appending "01", "02", etc. so a new unique
name is obtained.
:FROZen:B: :
Specifies the number of frozen orbitals in each symmetry. (see below for
condition on input orbitals). Frozen orbitals will not be modified in the
calculation. Only doubly occupied orbitals can be left frozen. This input can be
used for example for inner shells of heavy atoms to reduce the basis set
superposition error. Default is 0 in all symmetries.
:INACtive:B: :
Specify the number of inactive (doubly occupied) orbitals in each symmetry, not
counting frozen orbitals. Default is 0 in all symmetries.
:RAS1:B: :
Specify the number of orbitals in each symmetry for the RAS1 orbital subspace.
Default is 0 in all symmetries.
:RAS2:B: :
Specify the number of orbitals in each symmetry for the RAS2 orbital subspace.
Default is 0 in all symmetries.
:RAS3:B: :
Specify the number of orbitals in each symmetry for the RAS3 orbital subspace.
Default is 0 in all symmetries.
:DELEted:B: :
Specify the number of deleted orbitals in each symmetry. Default is normally 0
in all symmetries, but see manual for exception.
:GASSCF:A: :
Needed to perform a Generalized Active Space (GASSCF) calculation. It is
followed by an integer that defines the number of active subspaces, and two
lines for each subspace. The first line gives the number of orbitals in each
symmetry, the second gives the minimum and maximum number of electrons in the
accumulated active space.
:KSDFT:A: :
Needed to perform MC-PDFT calculations. It must be used together with CIONLY
keyword (it is a post-SCF method not compatible with SCF) and ROKS keyword. The
functional choice follows. Currently available functionals are: tPBE, tBLYP,
tLSDA.
:JOBIph:B: :
Get starting molecular orbitals from a binary file called JOBOLD.
:IPHName:A: :
Override the default choice of name of the JOBIPH file by giving the file name
you want. The name will be truncated to 8 characters and converted to uppercase.
:LUMOrb:B: :
Get starting molecular orbitals from an ASCII file called INPORB.
:FILEorb:A: :
Override the default name (INPORB) for starting orbital file by giving the file
name you want.
:CORE:B: :
Get starting molecular orbitals by diagonalizing the core Hamiltonian. Not
recommended.
:ALPHaOrBeta:A: :
With UHF orbitals as input, select alpha (1) or beta (-1) as starting orbitals.
:TYPEindex:A: :
Use extra information from the INPORB file to decide about orbital subspaces.
:ALTEr:A: :
ALTEr interchanges pairs of MOs taken from the files INPORB or JOBOLD before
starting the RASSCF calculation. Specify the number of pairs to exchange and,
for each pair, by symmetry species and indices of the two permuting MOs.
:ORTH:B: :
Specify the orthonormalization scheme to apply on the input orbitals. The
possibilities are Gram_Schmidt, Lowdin, Canonical, or no_ON
(no_orthonormalization). The default is Gram_Schmidt.
:CLEAnup:A: :
This input is used to set to zero specific coefficients of the input orbitals.
The option is, for instance, of great value if the symmetry of a molecule is
higher than given by input and hence the trial orbitals are contaminated by
components of lower symmetry. The restrictions are introduced by grouping
orbitals of the same symmetry into additional classes. Orbitals belonging to a
given classes are requested to obey a set of rules. In addition, all orbitals
not belonging to that class, can be requested to obey another set of rules.
Here, a rule is defined as being identical to the instruction: set coefficient i
in orbital j to zero.

The keyword requires at least one line of input per symmetry specifying the
number of additional classes in this symmetry (a 0 (zero) denotes that there is
no additional classes). If the number of additional classes is not zero then the
program expects for each classes three lines of input: The first entry includes
as first datum the dimension of the class followed by the list of orbitals
included in this class. The second entry defines the set of rules which are
applied to all orbitals within the class. The first datum defines the number of
MO-coefficients to be set to zero and is followed by a list of which
coefficients are to be touched. Finally, the third entry of input define the set
of rules to be applied to all orbital not belonging to the class. Here too, the
first value defines the number of MO-coefficients to be set to zero and is
followed by a list of which coefficients are to be touched.
:CIRESTART:B: :
Starting CI-coefficients are read from a binary file JOBOLD.
:ORBOnly:B: :
This input keyword is used to get a formated ASCII file (RASORB, RASORB.2, etc.)
containing molecular orbitals and occupations reading from a binary JobIph file.
The program will not perform any other operation.
:CIONly:B: :
This keyword is used to disable orbital optimization, that is, the CI roots are
computed only for a given set of input orbitals.
:Choinput:A: :
Manually modify the settings of the Cholesky RASSCF.
:NoLK:A: :
Deactivates LK screening.
:dmpK:A: :
Modifies the thresholds used in the LK screening. The default value is 1.0d-1. A
smaller value results in a slower but more accurate calculation.
:NODE:A: :
The inactive exchange contribution to the Fock matrix is computed using inactive
canonical orbitals instead of (localized) "Cholesky MOs".
:OFEM:A: :
Performs a Orbital-Free Embedding (OFE)RASSCF calculation, available only in
combination with Cholesky or RI integral representation. The runfile of the
environment subsystem renamed AUXRFIL is required. An example of input for the
keyword OFEM is the following:

    OFEMbedding
     ldtf/pbe
    dFMD
     1.0   1.0d2
    FTHAw
     1.0d-4

The keyword OFEM requires the specification of two functionals in the form
fun1/fun2, where fun1 is the functional used for the Kinetic Energy (available
functionals: Thomas-Fermi, with acronym LDTF, and the NDSD functional), and
where fun2 is the xc-functional (LDA, LDA5, PBE and BLYP available at the
moment).
:dFMD:A: :
The OPTIONAL keyword dFMD has two arguments: first, the fraction of correlation
potential to be added to the OFE potential; second, the exponential decay factor
for this correction (used in PES calculations).
:FTHAw:A: :
The OPTIONAL keyword FTHA is used in a freeze-and-thaw cycle (EMIL Do While) to
specify the (subsystems) energy convergence threshold.
:ITERations:B: :
Specify the maximum number of RASSCF iterations and the maximum number of
iterations used in the orbital optimization section. Default and maximum values
are 200,100.
:LEVShft:B: :
Define a level shift value for the super-CI Hamiltonian. Typical values are in
the range 0.0-1.5. Increase this value if a calculation diverges. The default
value 0.5, is normally the best choice when Quasi-Newton is performed.
:THRS:A: :
Specify convergence thresholds for: energy, orbital rotation matrix, and energy
gradient. Default values are: 1.0e-08, 1.0e-04, 1.0e-04.
:TIGHt:A: :
Convergence thresholds for the Davidson diagonalization procedure. Two numbers
should be given: THREN and THFACT. THREN specifies the energy threshold in the
first iteration. THFACT is used to compute the threshold in subsequent
iterations as THFACT*DE, where DE is the RASSCF energy change. Default values
are 1.0d-04 and 1.0d-3.
:NOQUne:A: :
This input keyword is used to switch off the Quasi-Newton update procedure for
the Hessian. Pure super-CI iterations will be performed. (Default setting: QN
update is used unless the calculation involves numerically integrated DFT
contributions.)
:QUNE:A: :
This input keyword is used to switch on the Quasi-Newton update procedure for
the Hessian. (Default setting: QN update is used unless the calculation involves
numerically integrated DFT contributions.)
:CIMX:B: :
Specify the maximum number of iterations allowed in the CI procedure. Default is
100 with maximum value 200.
:HEXS:A: :
Highly excited states. Will eliminate the maximum occupation in one or more
RAS/GAS's thereby eliminating all roots below. Very helpful for core excitations
where the ground-state input can be used to eliminate unwanted roots. Works with
RASSI. First input is the number of RAS/GAS where the maximum occupation should
be eliminated. Second is the RAS/GAS or RAS/GAS's where maximum occupation will
not be allowed.
:SDAV:A: :
The keyword is followed by one line of input giving the dimension of the
explicit Hamiltonian used as preconditioner in the Davidson procedure.Increase
this value if there is problems converging to the right roots.
:SDAV:A: :
The keyword is followed by one line of input giving the maximum dimension of the
Hamiltonian used in the Davidson procedure. Increase this value if the CI does
not converge.
:SXDAmp:A: :
SXDAMP (default 0.0002) regulates the speed of orbital relaxation. Large values
give slower but safer convergence.
:SUPSym:A: :
Used to prohibit certain orbital rotations. Please consult the manual! This
input is used to restrict possible orbital rotations. The restrictions are
introduced by grouping orbitals of the same symmetry into additional classes.
Orbitals belonging to different classes are not allowed to mix up during
optimization. The input requires at least one entry per symmetry specifying the
number of additional classes in this symmetry (a 0 (zero) denotes that there is
no additional classes). If the number of additional classes is not zero then the
program expects for each classes the following input: The dimension of the
classes and the list of orbitals in the classes counted relative to the first
orbital in this symmetry.
:HOME:A: :
Make the root selection in the Super-CI orbital update by maximum overlap rather
than by energy ordering.
:IVO:B: :
The RASSCF program will diagonalize the core Hamiltonian in the space of virtual
orbitals, before printing them in the output. The resulting orbitals are only
suitable to select which ones should enter the active space in a subsequent
RASSCF calculation. The RASSCF wave function and orbitals are not suitable for
CASPT2, MRCI or any other correlated methods, because the energies of the
virtual orbitals are undefined. This keyword is equivalent to the IVO keyword of
the SCF program.
:VB:B: :
Perform fully variational VB calculations, by invoking CASVB in place of the CI
optimization step.
:Print:A: :
Enter the print levels for seven logical code sections (see users guide).
:MAXOrb:B: :
Maximum number of RasOrb files to produce, one for each root.
:OUTOrbitals:B: :
Type of orbitals to put in RASORB file. Specify in the next entry any of:

  AVERage   -- Average MCSCF orbitals.

  CANOnical -- Average pseudocanonical orbitals.

  NATUral   -- State-specific natural orbitals. Next entry, number of states.

  SPIN      -- State-specific spin orbitals. Next entry, number of states.
:ORBListing:B: :
Select how extensive orbital list you want in the output file.
:ORBAppear:B: :
Select appearance of orbital list in the output file.
:PROR:B: :
Enter upper limit for orbital energies, and lower limit for occupation number,
for printing orbitals to the output.
:PRSD:A: :
Activate printing of CSFs in terms of determinants.
:ORDEr:A: :
Enter 1 to order the output orbitals by energy, 0 if not.
:PRSP:B: :
Use this keyword to get the spin density matrix for the active orbitals printed.
:PRWF:B: :
Enter the threshold for CI coefficients to be printed. (Default: 0.05)
:TDM:B: :
Compute and save active transition density matrices. Requires HDF5.
:XMSI:B: :
This keyword rotates the states after the last diagonalization of the CASSCF,
CASCI, RASSCF or RASCI calculation into XMS intermediate states.
:CMSI:B: :
This keyword rotates the states after the last diagonalization of the CASSCF,
CASCI, RASSCF or RASCI calculation into CMS intermediate states.
:CMMA:A: :
This keyword specifies the maximum number of cycles to optimize the CMS
intermediate states.
:CMMI:A: :
This keyword specifies the minimum number of cycles to optimize the CMS
intermediate states.
:CMTH:A: :
This keyword specifies the threshold for the change of sum over states of the
classical Coulomb energy for CMS intermediate states to converge.
:ROSTate:B: :
This keyword rotates the states after the last diagonalization of the CASSCF,
CASCI, RASSCF or RASCI calculation.
:DMRG:B: :
DMRG flag: - for QCMaquis interface, activates the DMRG calculation - for Block
and CheMPS2 interfaces, sets the number of renormalized states m
:soccupy:B: :
Set HF determinant start guess for MPS wave functions. (QCMaquis)
:NEVPT2prep:B: :
Prepare input for higher-order RDM/TDM evaluation. (QCMaquis)
:3RDM:B: :
Use this keyword to get the 3-particle and 4-particle reduced density matrices
(3-RDM and F.4-RDM) for DMRG-CASPT2 with CheMPS2 interface.
:CHBLb:B: :
Threshold for activating restart in CheMPS2. (Default: 0.05)
:DAVTolerance:B: :
Davidson tolerance in CheMPS2. (Default: 1.0d-7)
:NOISe:B: :
Noise pre-factor in CheMPS2. (Default: 0.05)
:MXSWeep:B: :
Maximum number of sweeps in the last instruction in CheMPS2. (Default: 8)
:MXCAnonical:B: :
Maximum number of sweeps in the last instruction with pseudocanonical orbitals
in CheMPS2. (Default: 40)
:CHREstart:B: :
Use this keyword to activate restart in the first DMRG iteration from a previous
calculation in CheMPS2.
:DMREstart:B: :
Activate restart in the last DMRG iteration in CheMPS2. (Default: 0)
[RASSI]
:Description:D
The RASSI program calculates overlaps, and matrix elements of one-electron
operators, and of the electronic Hamiltonian, over a basis of RASSCF wave
functions, which may each have its own independent set of orbitals. Energies and
matrix elements are computed also for the non-interacting linear combinations of
states, i.e., doing a limited CI using the RASSCF states as a non-orthogonal
basis. RASSI is extensively used for computing dipole oscillator strengths.
Finally, it can also compute e.g. spin-orbit interaction matrix elements,
transition dipole moments, (bi-)natural orbitals and other quantities.
:Choinput:A: :
Manually modify the settings of the Cholesky RASSI.
:NoLK:A: :
Deactivates LK screening.
:DMPK:A: :
Modifies the thresholds used in the LK screening. The default value is 1.0d-1. A
smaller value results in a slower but more accurate calculation.
:NODE:A: :
The inactive Exchange contribution to the Fock matrix is computed using inactive
canonical orbitals instead of (localized) "Cholesky MOs".
:PSEU:A: :
The inactive Exchange contribution to the Fock matrix is computed using pseudo
Cholesky orbitals.
:MEIN:B: :
Demand for printing matrix elements of all selected one-electron properties,
over the input RASSCF wave functions.
:MEES:B: :
Demand for printing matrix elements of all selected one-electron properties,
over the spin-free eigenstates.
:MESO:B: :
Demand for printing matrix elements of all selected one-electron properties,
over the spin-orbit states.
:Property:B: :
Enter a user-supplied selection of one-electron operators, for which matrix
elements and expectation values are to be calculated. Without this keyword and
list, the default choice is to use every operator, for which the one-electron
integral file supplies integrals.
:SOCoupling:B: :
Enter a positive threshold value. Spin-orbit interaction matrix elements over
the spin components of the spin-free eigenstates will be printed, unless smaller
than this threshold. The value is given in cm^-1 units. The keyword is ignored
unless an SO hamiltonian is actually computed.
:SOProperty:B: :
Enter a selection of one-electron operators, for which matrix elements and
expectation values are to be calculated over the spin-orbit eigenstates. This
keyword has no effect unless the SPIN keyword has been used. Format: see PROP
keyword.
:Spinorbit:B: :
Spin-orbit interaction matrix elements will be computed and the resulting
Hamiltonian including will be diagonalized. NB: For this keyword to have any
effect, the SO integrals must have been computed by SEWARD (AMFI integrals)!
:Onel:B: :
The two-electron integral file will not be accessed. No hamiltonian matrix
elements will be calculated. Non-interacting states will not be formed. Onee is
a valid synonym for this keyword.
:J-Value:B: :
For spin-orbit calculations with single atoms, only: The output lines with
energy for each spin-orbit state will be annotated with the approximate J
quantum number.
:Omega:B: :
For spin-orbit calculations on linear molecules, only: The output lines with
energy for each spin-orbit state will be annotated with the approximate Omega
quantum number.
:NrOf:B: :
Number of JOBIPH files used as input, followed by a list of the number of states
to read from each JOBIPH, and finally, for each JOBIPH a list of which states to
select.
:Subsets:B: :
Restricts the computation of transition moments to be only between two sets of
states, and not also within each set. The keyword is followed by the number of
states in the first set (assuming energy ordering).
:IPHNames:B: :
Followed by one entry for each JOBIPH file to be used, with the name of each
file. Note: This keyword presumes that the number of JOBIPH files have already
been entered using keyword NROF. The names will be truncated to 8 characters and
converted to uppercase.
:Shift:B: :
The next entry or entries gives an energy shift for each wave function, to be
added to diagonal elements of the Hamiltonian matrix.
:HDiag:B: :
Enter an energy for each spin-free wave function, to replace the diagonal
elements of the Hamiltonian matrix. For example to use CASPT2 shifted energies
in the diagonal.
:NatOrb:B: :
Enter the number of eigenstates for which natural orbitals should be computed
and written to file. These will be written together with natural occupation
numbers in the usual format used by MOLCAS.
:BiNatOrb:B: :
Enter the number of transitions, for which binatural orbitals should be computed
and written to file. Then a line should follow with the two states for each
transition. The ket and the bra orbitals are written followed by the singular
values in the the usual format used by MOLCAS.
:Orbitals:A: :
Print out the molecular orbitals read from each JOBIPH file.
:Overlaps:A: :
Print out the overlap integrals between the various orbital sets.
:CIPrint:A: :
Print out the CI coefficients read from JOBIPH.
:Thrs:A: :
Enter the threshold for printing CI coefficients. Default 0.05.
:DIPR:A: :
Enter the threshold for printing dipole intensities. Default is 1.0D-5.
:QIPR:A: :
Enter the threshold for printing quadrupole intensities. Default is 1.0D-5. Will
overwrite any value chosen for dipole intensities.
:RSPR:A: :
Enter the threshold for printing reduced rotatory strength. Default is 1.0D-7.
:QIALL:A: :
Print all quadrupole intensities.
:CD:B: :
Compute rotatory strengths from the multipole expansion of transition moments.
:TINTensities:A: :
Activate the computation of transition intensities (oscillator strengths and
rotatory strengths) using the non-relativistic Hamiltonian with the explicit
Coulomb-field vector operator (A) in the weak field approximation.
:TIGRoup:A: :
Group states close in energy for computing transition intensities with the
exponential operator (TINTensities keyword). Specify a real value as the
grouping threshold, relative to the average transition energy to a group.
Requires SUBSets and TINTensities.
:IIORder:A: :
Set the order of the Lebedev grids used in the isotropic integration of
transition intensities in association with the TINT option. Default value is 5.
Other allowed values are: 7, 11, 17, 23, 29, 35, 41, 47, 53, and 59.
:PRRAw:A: :
Print the raw directions for the exact semi-classical intensities (see the TINT
keyword).
:PRWEighted:A: :
Print the weighted directions for the exact semi-classical intensities (see the
TINT keyword).
:DIREction:A: :
Define the direction of the incident light for which we will compute transition
moments and oscillator strengths. The keyword is followed by an integer n, the
number of directions, and then n lines with three real numbers each specifying
the direction. The values do not need to be normalized.
:POLArization:A: :
Define the direction of the polarization of the incident light, see DIREction.
The keyword is followed by three real numbers specifying the components of a
vector (not necessarily normalized), the polarizarion direction is defined by
orthogonalizing this vector with each vector specified in DIREction. Currently,
this keyword only works with the oscillator strengths computed with the
TINTensities keyword.
:Rfpe:B: :
RASSI will read from RUNOLD (if not present defaults to RUNFILE) a response
field contribution and add it to the Fock matrix.
:HCom:B: :
The spin-free Hamiltonian is computed.
:HExt:A: :
The spin-free Hamiltonian is read from a file instead of being computed. It is
read from the following entries, as a triangular matrix: One element of the
first row, two from the next, etc., as list-directed input of reals.
:HEff:A: :
A spin-free effective Hamiltonian is read from JOBIPH instead of being computed.
It must have been computed by an earlier program. Presently, this is done by a
multi-state calculation using CASPT2.
:EJob:A: :
The spin-free effective Hamiltonian's diagonal is filled with energies read from
a JOBIPH or JOBMIX file. Off-diagonal elements are approximated from overlaps
and diagonal.
:TOfile:B: :
Signals that a set of files with data from Rassi should be created. This keyword
is necessary if QmStat is to be run afterwards.
:XVIN:B: :
Demand printing expectation values of all selected one-electron properties, for
the input RASSCF wave functions.
:XVES:B: :
Demand printing expectation values of all selected one-electron properties, for
the spin-free eigenstates.
:XVSO:B: :
Demand printing expectation values of all selected one-electron properties, for
the spin-orbit states.
:EPRg:A: :
This computes the g matrix and principal g values for the states lying within
the energy range supplied on the next line. A value of 0.0D0 or negative will
select only the ground state, a value E will select all states within energy E
of the ground state. The states should be ordered by increasing energy in the
input. The angular momentum and spin-orbit coupling matrix elements need to be
available (use keywords SPIN and PROP).
:Magnetic properties:A: :
This computes the magnetic moment and magnetic susceptibility. On the next two
lines you have to provide the magnetic field and temperature data. On the first
line put the number of magnetic field steps, the starting field (in tesla), size
of the steps (in tesla), and an angular resolution for sampling points in case
of powder magnetization (for a value of 0.0d0 the powder magnetization is
deactivated). The second line reads the number of temperature steps, the
starting temperature (K), and the size of the temperature steps (K). The angular
momentum and spin-orbit coupling matrix elements need to be available (use
keywords SPIN and PROP). For a more detailed description see J. Phys. Chem. A
113 6149.
:Hop:A: :
Allows transitions between electronic states during molecular dynamics
simulations.
:StOverlaps:A: :
Computes only the overlaps between the input states.
:Track:A: :
Tries to follow a particular root during an optimization.
:DQVD:A: :
Diabatizes by using dipole, quadrupole, and/or electrostatic potential.
:Alpha:A: :
Alpha parameter in front of the quadrupole term for DQΦ diabatization.
:Beta:A: :
Beta parameter in front of the electrostatic potential term for DQΦ
diabatization.
:TRDI:A: :
Prints out the components and the size of the transition dipole vector. Only
vectors with sizes large than 1.0D-4 a.u. are printed. See also the TDMN
keyword.
:TRDC:A: :
Prints out COMPLEX valued components of the transition dipole vector for
spin-orbit calculations, otherwise functionally equivalent to TRDI TDMN.
:TDMN:A: :
Prints out the components and the module of the transition dipole vector. On the
next line, the minimum size, in a.u., for the dipole vector to be printed must
be given.
:TRD1:A: :
Prints the 1-electron (transition) densities to ASCII files and to the HDF5 file
rassi.h5.
:TRD2:A: :
Prints the 1-/2-electron (transition) densities to ASCII files.
:DYSON:A: :
Enables calculation of Dyson amplitudes (an approximation of photo-electron
intensities) between states that differ by exactly one in their number of
electrons.
:DYSEXPORT:A: :
Requires the DYSOn keyword and enables exportation of Dyson orbitals (from which
Dyson amplitudes are obtained). The next line specifies the number (starting
from the first) of spin-free and spin-orbit states (two numbers, both mandatory)
for which the exportation will be done. Note that the ordering of spin-free
states depends on the ordering of JOBfiles, whereas spin-orbit states are always
energy ordered.
:NTOC:A: :
Enables natural transition orbital calculation from two JobIph files.
:EPRa:A: :
This computes the hyperfine tensor matrix and the principal magnetic axes values
for the ground spin-orbit state. The hyperfine and spin-orbit coupling matrix
elements are required upon calculation (use keywords SPIN and PROP). For the
hyperfine matrix elements, either the spin-dependent (ASD) or the paramagnetic
spin orbital (PSOP) part is needed, while in most cases both are recommended for
the same atom.
:AFCC:A: :
This computes the Fermi contact contribution of the total hyperfine coupling
matrix. The keyword EPRA is needed. The spin-dependent (ASD) part of the
hyperfine matrix elements is needed.
:ASDC:A: :
This computes the spin-dipolar contribution of the total hyperfine coupling
matrix. The keyword EPRA is needed. The spin-dependent (ASD) part of the
hyperfine matrix elements is needed.
:FCSD:A: :
This computes the spin-dependent contribution of the total hyperfine coupling
matrix. The keyword EPRA is needed. The spin-dependent (ASD) part of the
hyperfine matrix elements is needed.
:APSO:A: :
This computes the paramagnetic spin orbital contribution of the total hyperfine
coupling matrix. The keyword EPRA is needed. The paramagnetic spin orbital
(PSOP) part of the hyperfine matrix elements is needed.
:ATSA:A: :
This keyword activates the pseudospin approach to compute the same hyperfine
constants as EPRA. For Kramers pair ground states this keyword is optional,
otherwise (non-Kramers pair ground state) it is needed. The keyword EPRA is
needed.
[RPA]
:Description:D
This module is still undocumented
[SCF]
:Description:D
The SCF program of the molcas program system generates closed-shell
Hartree-Fock, open-shell UHF, and Kohn Sham DFT wave functions.
:Title:B: :
One line for the title
:UHF:B:GUI:keyword:
Use this keyword to run Unrestricted Hartree-Fock code Note that current
implementation of UHF code has some restrictions, and not all features of SCF
program are supported
:HFC:B: :
Requests the computation of hyperfine coupling tensor matrix using spin
polarization in the calculated spin unrestricted wavefunctions, has to be used
with the keyword UHF.
:zSpin:B: :
Use this keyword to specify the difference in the number of alpha and beta
electrons in the system. The default is 0 or 1 depending on if there is an even
or odd number of electrons. This keyword is not needed when you specify the
number of electrons with the keyword OCCUpied.
:Spin:B: :
The keyword is followed by an integer giving the value of spin multiplicity
(2S+1). Default is 1 (singlet) or 2 (doublet) depending on if there is an even
or odd number of electrons.
:KSDFT:B: :
Use this keyword to do density functional theory calculations This keyword
should be followed by the functional keyword: BLYP, BPBE, B2PLYP, B3LYP, B3LYP5,
B86LYP, B86PBE, GLYP, GPBE, HFB, HFS, KT2, KT3, LDA, LDA5, LSDA, LSDA5, M06,
M06HF, M062X, M06L, OLYP, OPBE, O2PLYP, O3LYP, PBE, PBESOL, PBE0, PTCA, RGE2,
SSBSW, SVWN, SVWN5, TLYP. Example: KSDFT=B3LYP
:DFCF:A: :
Use this keyword to scale the exchange terms and/or correlation terms of a
density functional. This keyword should be followed by the scaling factor for
the exchange terms and the scaling factor for the correlation terms, separated
by a space. If the values are 1.0 (default), then the original density
functional is used. For an HLE-type functional, use 1.25 (for exchange) and 0.5
(for correlation). Example: DFCF=1.25 0.5
:Charge:B: :
Use this keyword to set the number of electrons in the system. This number is
defined by giving the net charge of the system. If this keyword is not
specified, the molecule is assumed to have net charge zero. The input is given
as

    Charge=n

where n is the charge of the system.
:Occupied:B: :
Use this keyword to set the number of electrons in the system. This number is
defined by giving the number of electron pairs per irreducible representation of
the subgroup of D2h used in the calculation. You can use one and only one of the
keywords, CHARge and OCCUpied for this purpose. If neither of these keywords are
specified CHARge is assumed with a net charge of zero. It should be noted that
the "fermi aufbau" procedure is not used when you specify this keyword. The
input for one of the point groups D2, C2h or C2v is given as

    OCCUpied= n1 n2 n3 n4

where n1 is the number of electron pairs (occupied orbitals) in the first
irreducible representation, etc. If UHF keyword was specified, occupation
numbers must be specified in two lines: for alpha and beta spins
:Fermi:B:GUI:number:
Use this keyword to specify that you want to use the "Fermi aufbau" procedure
for the first few iterations to ensure convergence. The orbitals will be
partially populated according to a Fermi population. The input is gives as

    Fermi= m

where m is the temperature parameter according to

  m=0 -- No temperature is used. Not recommended.

  m=1 -- A low temperature is used and will yield swift convergence for well
         behaved systems.

  m=2 -- A medium low temperature is used and will yield swift and safe
         convergence for most systems. This is the default value.

  m=3 -- A medium temperature is used and you will obtain good convergence for
         closed shell systems. If the system is not a closed shell system, the
         temperature dependent aufbau procedure may not terminate. This will
         result in a density matrix with fractional occupation numbers.

  m=4 -- A medium high temperature is used and the temperature dependent aufbau
         procedure will most probably not terminate. This is useful for
         generating starting orbitals for an MCSCF calculation.

  m=5 -- A high temperature is used. Behaves as m=4 only more so.

It should be noted that only dynamic damping is used until the program have
found a stable closed shell configuration. When this have happened the more
efficient methods: the ordinary C2-DIIS and the second order update/C2-DIIS
procedure, are enabled.
:Iterations:B: :
Specifies the maximum number of iterations. The default is 400 which is also the
largest number you can specify.
:Cholesky:A: :
Use of Cholesky (or RI/DF) representation for the two-electron integrals with
default SCF settings.
:Choinput:A: :
Manually modify the settings of the Cholesky SCF.
:NoLK:A: :
Deactivates LK screening. Available only within ChoInput.
:dmpK:A: :
Modifies the thresholds used in the LK screening. Available only within ChoInput
The default value is 1.0d0. A smaller value results in a slower but more
accurate calculation.
:NODE:A: :
The Exchange contribution to the Fock matrix is computed using occupied
canonical orbitals instead of (localized) "Cholesky MOs". Available only within
ChoInput.
:CONS:A: :
Performs a Constrained (Natural Orbitals) SCF calculation, available only in
combination with Cholesky or RI integral representation. An example of input for
the keyword CONS is the following:

    CONStraints
     2  3
     1 -1
     1  1  1

    ADDCorrelation
    pbe

    SAVErage

The keyword CONS has two compulsory arguments: the number of constrained NOs (in
each irrep) to be used in the CNO-SCF calculation, followed by one line per
irrep specifying the spin configuration of the so-called (+) wavelet (-1 -->
beta, 1 --> alpha) The OPTIONAL keyword ADDC is used to include a correlation
energy correction through a DFT functional specified as argument (LDA, LDA5, PBE
and BLYP available at the moment) The OPTIONAL keyword SAVE forces the program
to use spin-averaged wavelets.
:OFEM:A: :
Performs a Orbital-Free Embedding (OFE)SCF calculation, available only in
combination with Cholesky or RI integral representation. The runfile of the
environment subsystem renamed AUXRFIL is required. An example of input for the
keyword OFEM is the following:

    OFEMbedding
     ldtf/pbe
    dFMD
     1.0  1.0d2
    FTHAw
     1.0d-4

The keyword OFEM requires the specification of two functionals in the form
fun1/fun2, where fun1 is the functional used for the Kinetic Energy (available
functionals: Thomas-Fermi, with acronym LDTF, and the NDSD functional), and
where fun2 is the xc-functional (LDA, LDA5, PBE and BLYP available at the
moment).
:dFMD:A: :
The OPTIONAL keyword dFMD has two arguments: first, the fraction of correlation
potential to be added to the OFE potential (zero for KSDFT and one for HF);
second, the exponential decay factor for this correction (used in PES
calculations).
:FTHAw:A: :
The OPTIONAL keyword FTHA is used in a freeze-and-thaw cycle (EMIL Do While) to
specify the (subsystems) energy convergence threshold.
:Core:B: :
The starting vectors are obtained from a diagonalization of the core
Hamiltonian.
:LUMORB:B: :
The starting vectors are taken from a previous SCFORB file called INPORB.
:FILEORB:B: :
The starting vectors are taken from a previous SCFORB file, specified by user.
:GssRunfile:B: :
The starting vectors are taken from the orbitals produced by Guessorb.
:HLgap:B: :
This keyword is used to make the program levelshift the virtual orbitals in such
a way that the HOMO LUMO gap is at least the value specified on the next line.
This will help convergence in difficult cases but may lead to that it converges
to an excited configuration. A suitable value is 0.2.
:Scramble:A: :
This keyword will make the start orbitals slightly scrambled, accomplished by
making a few small random orbital rotations. How much the orbitals are scrambled
is determined by the parameter read on the next entry. A reasonable choice for
this parameter is 0.2 which correspond to maximum rotation angle of arcsin(0.2).
Using this keyword may be useful for UHF calculations with same number of alpha
and beta electrons that are not closed shell cases.
:Orbitals:A: :
Specifies the number of orbitals in the subspace of the full orbital space
defined by the basis set, in which the SCF energy functional is optimized. The
size of this subspace is given for each of the irreducible representations of
the subgroup of D2h. If this keyword is not specified when starting orbitals are
read, the full orbital space is assumed. The keyword takes as argument nIrrep (#
of irreps) integers. Note that this keyword is only meaningful when the SCF
program is fed with input orbitals (cf. LUMORB).
:Frozen:A: :
Specifies the number of orbitals not optimized during iterative procedure. The
size of this subspace is given for each of the irreducible representations of
the subgroup of D2h. If this keyword is not specified the number of frozen
orbitals is set to zero for each irreducible representation. If the starting
vectors are obtained from a diagonalization of the bare nuclei Hamiltonian the
atomic orbitals with the lowest one-electron energy are frozen. If molecular
orbitals are read from the file INPORB the frozen orbitals are those that are
read in first in each symmetry. The keyword takes as argument nIrrep (# of
irreps) integers.
:Ovldelete:A: :
Specifies the threshold for deleting near linear dependence in the basis set.
The eigenvectors of the overlap matrix with eigenvalues less than that threshold
are removed from the orbital subspace, and do not participate in the
optimization procedure. The default value is 1.0d-5. The keyword takes as
argument a (double precision) floating point number. Note that the SCFORB file
will contain the deleted orbitals as a complemental set to the actual SCF
orbitals! In future use of this orbital file the complemental set should always
be deleted from use.
:Prorbitals:A: :
Specifies which orbitals are to be printed in the logfile (standard output). The
keyword takes as argument two integers. The possible values of first argument
are:

  0 -- No orbitals printed;

  1 -- orbitals with orbital energies smaller than 2E(homo)-E(lumo) are printed;
       and

  2 -- followed by real number (ThrEne); orbitals with orbital energies smaller
       than ThrEne are printed.

Default value is 1. Second (optional) argument specifies a format:

  0 -- No orbitals printed

  1 -- Print only one-electron energies and occupation numbers

  2 -- Short print format

  3 -- Extended print format
:prlscf:A: :
Specifies the general print level of the calculation. An integer has to be
supplied as argument. The default value, 1, is recommended for production
calculations.
:ROBU:A: :
Robust LDF integral representation (non-hybrid KS-DFT only). Requires Local
Density Fitting (LDF) in SEWARD. This is the default for LDF.
:NR-2:A: :
Nonrobust LDF integral representation with 2-index integrals only (non-hybrid
KS-DFT only). Requires Local Density Fitting (LDF) in SEWARD. Default is robust
integral representation.
:NR-3:A: :
Nonrobust LDF integral representation with 3-index integrals only (non-hybrid
KS-DFT only). Requires Local Density Fitting (LDF) in SEWARD. Default is robust
integral representation.
:XIDI:A: :
Use exact integral diagonal blocks with LDF. Reduces the risk of negative
eigenvalues of the approximate integral matrix. Default is to not use exact
integral diagonal blocks.
:Thresholds:A: :
Specifies convergence thresholds. Four individual thresholds are specified as
arguments, which have to be fulfilled simultaneously to reach convergence: EThr,
DThr and FThr specify the maximum permissible difference in energy, density
matrix elements and Fock matrix elements, respectively, in the last two
iterations. The DltNTh finally specifies the norm of the orbital displacement
vector used for the orbital rotations in the second-order/C2-DIIS procedure. The
corresponding values are read in the order given above. The default values are
1.0d-9, 1.0d-4, 1.5d-4, and 0.2d-4, respectively. Note that these thresholds
automatically define the threshold used in the direct Fock matrix construction
to estimate individual contributions to the Fock matrix such that the computed
energy will have an accuracy that is better than the convergence threshold.
:NoDIIS:A: :
Disable the DIIS convergence acceleration procedure.
:DIISthr:A: :
Set the threshold on the change in density, at which the DIIS procedure is
turned on. The keyword takes as argument a (double precision) floating point
number. The default value is 0.15.
:QNRTHR:A: :
Set the threshold on the change in density, at which the second-order/C2-DIIS
procedure kicks in. The keyword takes as argument a (double precision) floating
point number. The default value is 0.15. Note: the change in density has to drop
under both the DIISthr and the QNRThr threshold, for the second-order/C2-DIIS to
be activated. If the latter is set to zero the older first order C2-DIIS
procedure will be used instead.
:C1DIIS:A: :
Use C1-DIIS for convergence acceleration rather than C2-DIIS which is the
default (not recommended).
:NODAMP:A: :
Disable the Damping convergence acceleration procedure.
:Occnumbers:A: :
Gives the option to specify occupation numbers other than 0 and 2. This can be
useful for generating starting orbitals for open shell cases. It should be noted
however, that it is still the closed shell SCF energy functional that is
optimized, thus yielding unphysical energies. Occupation numbers have to be
provided for all occupied orbitals. In the case of UHF calculation occupation
numbers should be specified on two different entries: for alpha and beta spin
:IVO:A:GUI:keyword:
Specifies that the virtual orbitals are to be improved for subsequent MCSCF
calculations. The core Hamiltonian is diagonalized within the virtual orbital
subspace, thus yielding as compact orbitals as possible with the constraint that
they have to be orthogonal to the occupied orbitals. Note that this option must
not be used whenever the Hartree-Fock wavefunction itself is used as a reference
in a subsequent calculation.
:nominimization:A: :
Program will use density differences D(k)-D(k-1) rather than minimized
differences.
:ONEGrid:A: :
Disable use of a smaller intermediate grid in the integration of the DFT
functional during the first SCF iterations.
:Rfpert:A: :
This keyword will add a constant reaction field perturbation to the bare nuclei
hamiltonian. The perturbation is read from RUNOLD (if not present defaults to
RUNFILE) and is the latest selfconsistent perturbation generated by one of the
programs SCF or RASSCF.
:STAT:A: :
This keyword will add an addition print outs with statistic information
:conventional:A: :
This option will override the automatic choice between the conventional and the
direct SCF algorithm such that the conventional method will be executed
regardless of the status of the ORDINT file.
:Disk:A: :
This option enables/disables the semi-direct algorithm. It requires two
arguments which specifies the max Mbyte of integrals that are written on disk
during the first iteration (and retrieved later in subsequent iterations) and
the size of the I/O buffer in kbyte. The default values are 2000 MByte and 512
kByte. In case the specified disk space is zero and the I/O buffer is different
from zero it will default to a semi-direct SCF with in-core storage of the
integrals. The size of the memory for integrals storage is the size of the
corresponding I/O buffer. If the size of the disk is non-zero and the I/O buffer
size is zero the latter will be reset to the default value.
:Thize:A: :
This option specifies a threshold for two-electron integrals. Only integrals
above this threshold (but not necessarily all of those) are kept on disk for the
semi-direct algorithm. The keyword takes as argument a (double precision)
floating point number.
:Simple:A: :
If this option is specified, only a simple prescreening scheme, based solely on
the estimated two-electron integral value will be employed (no density
involved).
[SEWARD]
:Description:D
The Seward module generates one- and two-electron integrals needed by other
programs. The input contains an additional and optional embedded input section
for numerical quadrature options for the computation of integrals associated
with DFT calculations. The embedded section starts and ends with the keywords
"Grid Input" and "End of Grid", respectively. Keywords associated with this
embedded input section is labelled "(NQ)" below.
:Title:B: :
One line of title card follows.
:Test:B: :
SEWARD will only process the input and generate a non-zero return code.
:Oneonly:B: :
SEWARD will not compute the two-electron integrals.
:NoDK:B: :
SEWARD will not compute Douglas-Kroll integrals.
:Direct:B: :
Prepares for later integral-direct calculations. As with keyword oneonly, SEWARD
will evaluate no two-electron integrals.
:Expert:A: :
Sets "expert mode", in which various default settings are altered.
Integral-direct calculations will be carried out if the two-electron integral
file is unavailable.
:Cholesky:B: :
Cholesky decompose the two-electron integrals using default settings.
:1CCD:B: :
One-center Cholesky decomposition of the two-electron integrals.
:ThrCholesky:B: :
Specify decomposition threshold for Cholesky decomposition of two-electron
integrals.
:Span:B: :
Specify span factor (in between, but not equal to, 0 and 1) for Cholesky
decomposition of two-electron integrals on the next line.
:Low:B: :
Cholesky decompose the two-electron integrals using low accuracy settings.
Recommended.
:Medium:B: :
Cholesky decompose the two-electron integrals using medium accuracy settings.
:High:B: :
Cholesky decompose the two-electron integrals using high accuracy settings.
:LDF:B: :
Local Density Fitting using auxiliary functions centered on the two parent atoms
of each AO product.
:LDF1:B: :
Local Density Fitting using auxiliary functions centered on the two parent atoms
of each AO product. Equivalent to keyword LDF.
:LDF2:B: :
Local Density Fitting using auxiliary functions centered on the two parent atoms
of each AO product as well as the two-center functions required to achieve the
given target accuracy.
:TARG:B: :
Specify the target accuracy for LDF2 on the next line. Default value: threshold
used to generate the aCD or acCD auxiliary basis set (or 1.0d-4 in case of
externally defined auxiliary basis sets).
:APTH:B: :
Specify the LDF/LDF2 atom pair prescreening threshold on the next line, thus
defining which atom pairs are considered significant. Default value: the target
accuracy or the cutoff threshold for primitive integral evaluation, whichever is
smaller.
:CLDF:B: :
Constrained LDF/LDF2: specify constraint order on the next line (-1 for
unconstrained, 0 for charge constraint). Default: unconstrained LDF.
:FAKE:B: :
If CD/RI vectors are already available, SEWARD will not redo work!
:JMAX:A: :
The integer entry on the next line is the highest rotational quantum number for
which SEWARD will compute the rotational energy within the rigid rotor model.
The default value is 5.
:NOGUESSORB:B: :
Disable automatic generation of starting orbitals with the GuessOrb procedure.
:NODElete:B: :
Do not delete any orbitals automatically.
:SDELete:B: :
Set the threshold for deleting orbitals based on the eigenvalues of the overlap
matrix.
:TDELete:B: :
Set the threshold for deleting orbitals based on the eigenvalues of the kinetic
energy matrix.
:Verbose:B: :
Force SEWARD to print a bit more verbose.
:Embedding:A: :
Reads in an embedding potential from a file and can output the density and ESP
on a grid.
:Multipoles:B: :
Entry which specifies the highest order of the multipole for which integrals
will be generated. For details consult the manual.
:Center:A: :
This option is used to override the default selection of the origin of the
multipole moment operators. On the first entry specify the number of such
modifications. On the following entries enter first the order of the multipole
moment operators followed by the coordinates of the origin of the operator.
:Relint:B: :
Requests the computation of mass-velocity and one-electron Darwin contact term
integrals for the calculation of a first order correction of the energy with
respect to relativistic effects.
:RELAtivistic:B: :
Request arbitrary scalar relativistic Douglas-Kroll-Hess (DKH) correction to the
one-electron Hamiltonian and the so-called picture-change correction to the
property integrals (multipole moments and electronic potential related
properties). An argument of the form RXXPyy follows Here XX represents the order
of the DKH correction to the one-electron Hamiltonian and yy the order of the
picture-change correction. The character P denotes the parameterization used in
the DKH procedure.

The possible parametrizations P of the unitary transformation used in the DKH
transformation supported by MOLCAS are:

  (P=O) -- Optimum parametrization (OPT)

  (P=E) -- Exponential parametrization (EXP)

  (P=S) -- Square-root parametrization (SQR)

  (P=M) -- McWeeny parametrization (MCW)

  (P=C) -- Cayley parametrization (CAY)

Hence, the proper keyword for the 4th order relativistically corrected
one-electron Hamiltonian and 3rd order relativistically corrected property
integrals in the EXP parameterization would read as R04E03. If yy is larger than
XX it is set to XX. If yy is omitted it will default to same value as XX.
Recommended orders and parametrization is R02O02. Since the EXP parameterization
employs a fast algorithm, it is recommended for high order DKH transformation.
:Rlocal:B: :
Request local approximation to the relativistic exact decoupling approaches such
as X2C, BSS and DKH. This option cannot be used together with point group
symmetry.
:Vectors:B: :
Requests a property calculation. For this purpose an INPORB file must be
available.
:FileOrb:B: :
The next line specifies the filename containing the orbitals and occupation
numbers from which the properties will be computed. By default a file named
INPORB will be used.
:Orbcon:A: :
The keyword will force SEWARD to produce a list of the orbital contributions to
the properties being computed. The default is to generate a compact list.
:Thrs:A: :
The real entry on the following line specifies the threshold for the occupation
number of an orbital in order for the keyword "OrbCon" option to list the
contribution of that orbital to a property. The default is 1.0d-6.
:OrbAll:A: :
Print computed properties for all orbitals (including unoccupied orbitals), and
not weighted by orbital occupation numbers. Requires "OrbCon".
:Nopack:A: :
The two-electron integrals will not be packed. The default is to pack the
two-electron integrals.
:Pkthre:A: :
An entry specifies the desired accuracy for the packing algorithm, the default
is 1.0d-14.
:Stdout:A: :
Generate a two-electron integral file according to the standard of version 1 of
MOLCAS. The default is to generate the two-electron integrals according to the
standard used since version 2 of MOLCAS.
:Threshold:A: :
Threshold for writing integrals to disk follows. The default is 1.0d-14.
:Cutoff:A: :
Threshold for ignoring the calculation of integrals based on the pair prefactor
follows on the next line. The default is 1.0d-16.
:RMAT:B: :
Radius of the R-matrix sphere (in bohr). This sphere is centered at the
coordinate origin. Default value is set to 10 bohr.
:RMEA:A: :
Absolute precision in radial integration for R-matrix calculation. The default
is 1d-9.
:RMER:A: :
Relative precision in radial integration for R-matrix calculation. The default
is 1d-14.
:RMQC:A: :
Effective charge of the target molecule for R-matrix calculation. This is the
effective charge seen by the incident electron outside of the R-matrix sphere.
The default is 0d0.
:RMDI:A: :
Effective dipole of the target molecule for R-matrix calculation. This is the
effective dipole seen by the incident electron outside of the R-matrix sphere.
The default is (0d0,0d0,0d0).
:RMEQ:A: :
Minimal value of the effective charge of the target molecule to be considered in
R-matrix calculation. This is also the minimal value of the components of the
effective dipole to be considered in R-matrix calculation. Default is 1d-8.
:RMBP:A: :
Parameter used for test purposes in the definition of the Bloch term in R-matrix
calculation. Default is 0d0.
:CELL:A: :
Defines the three vectors of the unit cell (e1,e2,e3). The optional keyword
Angstrom before the definition of vectors would read data in A. Must consist of
three entries (four in the case of A) which correspond to coordinates of the
vectors. All the atoms which are defined after that key are considered as the
atoms of the cell.
:SPREAD:A: :
Three integer numbers n_1, n_2, n_3 which define the spread of the unit cell
along the unit cell vectors. For example, 0 0 2 would add all cell's atoms
translated on -2*e3, -e3, e3, 2*e3. This key must be placed before the
definition of the unit cell atoms.
:Grid input:B: :
Specification of numerical quadrature parameters.
:Grid (NQ):A: :
It specifies the quadrature quality. The possible indexes that can follow are
COARSE, SG1GRID, FINE, ULTRAFINE, following the Gaussian98 convention. Default
is FINE.
:RQuad (NQ):A: :
It specifies the radial quadrature scheme. Options are LOG3 (Mura and Knowles),
BECKE (Becke) , MHL (Murray et a.), TA (Treutler and Ahlrichs, defined for
H-Kr), and LMG (Lindh et al.), respectively. The default is MHL.
:GGL (NQ):A: :
It activates the use of Gauss and Gauss-Legendre angular quadrature. Default is
to use the Lebedev angular grid.
:Lebedev (NQ):A: :
It turns on the Lebedev angular grid.
:Lobatto (NQ):A: :
It activates the use of Lobatto angular quadrature. Default is to use the
Lebedev angular grid.
:LMax (NQ):A: :
Specifies the highest order of a real spherical harmonic which the angular grid
will integrate exact. Default is 29.
:nGrid (NQ):A: :
It specifies the maximum number of grid points to process at one instance.
Default is 128 grid points.
:Noprunning (NQ):A: :
It turns off the the angular prunning. Default is to prune.
:nR (NQ):A: :
It is followed by the number of radial grid points. Default is 75 radial grid
points.
:Fixed Grid (NQ):A: :
Use a fixed grid in the evaluation of the gradient. This corresponds to using
the grid to numerically evaluate the analytic gradient expression. Default is to
use a moving grid.
:Moving grid (NQ):A: :
Use a moving grid in the evaluation of the gradient. This correspond to
evaluating the gradient of the numerical expression of the DFT energy. This is
the default.
:RThreshold (NQ):A: :
Follows the value for the the radial threshold. Default value is 1.0D-13.
:T_X (NQ):A: :
Threshold for screening in the assembling of the density on the grid. Default
value is 1.0D-18.
:T_Y (NQ):A: :
Threshold for screening in the assembling of the integrals. Default value is
1.0D-11.
:NOSCreening (NQ):B: :
Turn off any screening in the numerical integration.
:CROWding (NQ):B: :
The crowding factor, according to MHL, used in the pruning of the angular grid
close to the nuclei. Default value 3.0.
[SINGLE_ANISO]
:Description:D
The SINGLE_ANISO program allows the non-perturbative calculation of effective
spin (pseudospin) Hamiltonians and static magnetic properties of mononuclear
complexes and fragments completely ab initio,including the spin-orbit
interaction. As a starting point it uses the results of a RASSI calculation for
the ground and several excited spin-orbital multiplets.

The following quantities can be computed:

  1. Parameters of pseudospin magnetic Hamiltonians:

    a) First order (linear after pseudospin) Zeeman splitting tensor (g tensor),
       including the determination of the sign of the product gX*gY*gZ

    b) Second order (bilinear after pseudospin) zero-field splitting tensor (D
       tensor)

    c) Higher order zero-field splitting tensors (D^2, D^4, D^6, ... etc.)

    d) Higher order Zeeman splitting tensors (G^1, G^3, G^5, ... , etc.)

    e) Angular Moments along the main magnetic axes

  2. Crystal-Field parameters for the ground atomic multiplet for lanthanides

  3. Static magnetic properties:

    a) Van Vleck susceptibility tensor

    b) Powder magnetic susceptibility function

    c) Magnetization vector for specified directions of the applied magnetic
       field

    d) Powder magnetization
:TITLE:B: :
One line following this one is regarded as title.
:TYPE:B: :
This keyword is obsolete
:MLTP:B: :
The number of molecular multiplets (i.e. groups of spin-orbital eigenstates) for
which g, D and higher magnetic tensors will be calculated. The program reads two
lines: the first is the number of multiplets (NMULT) and on the second line the
array of NMULT numbers specifying the dimension of each multiplet. By default,
the code will first analyze the energy spectra by itself and will compute the g
and D tensors for ten low-lying groups of states. By using this keyword the user
overwrites the default.
:DATA:B: :
This option allows to start SINGLE_ANISO from a datafile provided by the user.
The program SINGLE_ANISO will fetch the actual name of the datafile from the
input and expects a file with this name in WorkDir. The datafile is produced by
a previosu successful run of SINGLE_ANISO under the name $Project.aniso
:TINT:B: :
Specifies the temperature points for the evaluation of the magnetic
susceptibility. The program will read three numbers: Tmin, Tmax, nT. Units of
temperature = kelvin (K).

  Tmin -- the minimal temperature (Default 0.0 K)

  Tmax -- the maximal temperature (Default 300.0 K)

  nT   -- number of temperature points (Default 101)
:HINT:B: :
Specifies the field points for the evaluation of the molar magnetization. The
program will read four numbers: Hmin, Hmax, nH, and dltH0. Units of magnetic
field = tesla (T).

  Hmin -- the minimal field (Default 0.0 T)

  Hmax -- the maximal field (Default 300.0 T)

  nH   -- number of field points (Default 101)
:TMAG:B: :
Specifies the temperature(s) at which the field-dependent magnetization is
calculated. The program will read the number of temperature points (NTemp) and
then an array of real numbers specifying the temperatures (in kelvin) at which
magnetization is to be computed. Default is to compute magnetization at one
temperature point (2.0 K).
:ENCU:B: :
This keyword is used to define the cut-off energy for the lowest states for
which Zeeman interaction is taken into account exactly. The contribution to the
magnetization coming from states that are higher in energy than E (see below) is
done by second order perturbation theory. The program will read two integer
numbers: NK and MG. Default values are: NK=100, MG=100. The field-dependent
magnetization is calculated at the temperature value TMAG.
:NCUT:B: :
This keyword is used to define the cut-off energy for the lowest states for
which Zeeman interaction is taken into account exactly. The contribution to the
magnetization coming from states that are higher in energy than E (see below) is
done by second order perturbation theory. The program will read two integer
numbers: NK and MG. The field-dependent magnetization is calculated at the
temperature value TMAG.
:MVEC:B: :
Defines the number of directions for which the magnetization vector will be
computed. On the first line below the keyword, the number of directions should
be mentioned (NDIR. Default 0). The program will read NDIR lines for spherical
coordinates specifying the direction "i" of the magnetic field (theta_i and
phi_i). These values should be in radians.
:MAVE:B: :
This keyword specifies the grid density used for the computation of powder molar
magnetization. The program uses Lebedev-Laikov distribution of points on the
unit sphere. The program reads two integer numbers: NSYM and NGRID. The NSYM
defines which part of the sphere is used for averaging. It takes one of the
three values: 1 (half-sphere), 2 (a quater of a sphere) or 3 (an octant of the
sphere). NGRID takes values from 1 (the smallest grid) till 32 (the largest
grid, i.e. the densiest). The default is to consider integration over a
half-sphere (since M(H)=-M(-H)): NSYM=1 and NGRID=15 (i.e 185 points distributed
over half-sphere). In case of symmetric compounds, powder magnetization may be
averaged over a smaller part of the sphere, reducing thus the number of points
for the integration. The user is responsible to choose the appropriate
integration scheme. Note that the program's default is rather conservative.
:TEXP:B: :
This keyword allows computation of the magnetic susceptibility at experimental
temperature points. On the line below the keyword, the number of experimental
points NT is defined, and on the next NT lines the program reads the
experimental temperature (in K) and the experimental magnetic susceptibility (in
cm^3 K mol^-1). TEXP and TINT keywords are mutually exclusive. The SINGLE_ANISO
will also print the standard deviation from the experiment.
:HEXP:B: :
This keyword allows computation of the molar magnetization at experimental field
points. On the line below the keyword,the number of experimental points NH is
defined, and on the next NH lines the program reads the experimental field
strength (tesla) and the experimental magnetization (in Bohr magnetons). HEXP
and HINT are mutually exclusive. The SINGLE_ANISO will print the standard
deviation from the experiment.
:ZJPR:B: :
This keyword specifies the value (in cm^-1) of a phenomenological parameter of a
mean molecular field acting on the spin of the complex (the average
intermolecular exchange constant). It is used in the calculation of all magnetic
properties (not for spin Hamiltonians) (Default is 0.0)
:XFIE:B: :
This keyword specifies the value (in tesla) of applied magnetic field for the
computation of magnetic susceptibility by: dM/dH and M/H formulas. A comparison
with the usual formula (in the limit of zero applied field) is provided.
(Default is 0.0)
:PRLV:B: :
This keyword controls the print level.

  2  -- normal. (Default)

  3+ -- (debug)
:POLY:B: :
SINGLE_ANISO will prepare an input file (binary) for the future POLY_ANISO
program. The default is not to create it.
:CRYS:B: :
This keyword will enable computation of all 27 Crystal-Field parameters acting
on the ground atomic multiplet of a lanthanide. On the next line the program wil
read the chemical symbol of the lanthanide. By default the program will not
compute the parameters of the Crystal Field.
:QUAX:B: :
This keyword controls the quantization axis for the computation of the
Crystal-Field parameters acting on the ground atomic multiplet of a lanthanide.
On the next line, the program will read one of the three values:

  1 -- Zm of the ground pseudospin multiplet

  2 -- Zm of the ground atomic multiplet

  3 -- defined by the user on the following line
:UBAR:B: :
This keyword allows estimation of the structuere of the blocking barier of a
single-molecule magnet. The default is not to compute it. The method prints
transition matrix elements of the magnetic moment connecting states with
opposite magnetisations. The keyword is used with no arguments.
:ABCC:B: :
This keyword will enable computation of magnetic and anisotropy axes in the
crystallographic abc system. On the next line, the program will read six real
values, namely (a, b, c, alpha, beta, and gamma), defining the crystal lattice.
On the second line, the program will read the Cartesian coordinates of the
magnetic center. The computed values in the output correspond to the
crystallographic position of three "dummy atoms" located on the corresponding
anisotropy axes, at the distance of 1.0 angstrom from the metal site.
:PLOT:B: :
This keyword will generate a few plots (png or eps format) via an interface to
the linux program "gnuplot". The interface generates a datafile, a gnuplot
script and attempts execution of the script for generation of the image. The
plots are generated only if the respective function is invoked. The magnetic
susceptibility, molar magnetisation and blocking barrier (UBAR) plots are
generated. The files are named: XT.dat, XT.plt, XT.png, MH.dat, MH.plt, MH.png,
BARRIER_TME.dat, BARRIER_ENE.dat, BARRIER.plt and BARRIER.png.
[SLAPAF]
:Description:D
This program is a general purpose facility for geometry optimization. At
present, it is tailored to use analytical gradients produced by ALASKA. SLAPAF
also computes an approximate Hessian.
:Iterations:B: :
Specify the max number of iterations which will be allowed in the relaxation
procedure. Default is 500 iterations however, if MOLCAS_MAXITER has been
exported by the user this is the assumed default value.
:Thrshld:A: :
Enter two real numbers which specifies the convergence criterion with respect to
the energy change and the norm of the gradient. The defaults are 0.0 and 3.0D-4
for Gaussian, and 1.0D-6 and 3.0D-4 for Baker.
:Baker:A: :
Activate convergence criteria according to Baker. Default is to use the
convergence criteria as in the Gaussian program.
:Maxstep:B: :
Enter the value which defines the seed of largest change of the internal
coordinates which will be accepted. A change which is larger is reduced to the
max value. The value is dynamically modified each iterations. The default value
is 0.3 au or rad.
:CnWeight:B: :
Sets the maximum weight assigned to the fulfillment of the constraints, relative
to the step taken in the complementary space for energy minimization.
:Tolerance:B: :
Controls how strictly the constraints must be satisfied at convergence.
:Cartesian:A: :
Activate SlapAf to use the eigenvectors of the approximative Hessian expressed
in Cartesian as the definition of the internal coordinates. The default is to
use the FCW non-redundant internal coordinates. The Hessian will be modeled by
the Hessian Model Functional.
:Internal:A: :
This marks the start of the definition of the internal coordinates. This section
is always ended by the keyword "End of Internal". Consult the manual for
details.
:HWRS:B: :
Use the force constant weighted (FCW) redundant space version of the
nonredundant internal coordinates. The Hessian will be modeled by the Hessian
Model Functional. This is the default.
:NoHWRS:B: :
Disable the use of the force constant weighted redundant space version of the
nonredundant internal coordinates. The default is to use the HWRS option. The
Hessian will be modeled by the Hessian Model Functional.
:Fuzz:A: :
When automatically generating the primitive internal coordinates, the system may
end up in disconnected fragments, in which case additional bonds are defined
between the fragments. This keyword controls how many inter-fragment bonds are
added. Bonds are generated between the closest atoms of two fragments, and all
pairs of atoms in separate fragments at a distance up to the specified value
longer. The value can be followed with the unit BOHR or ANGSTROM. The default is
0.5 a.u.
:HUpdate:A: :
Method used for updating the Hessian matrix. It must be one of: None, BFGS, MSP,
EU, TS-BFGS.
:UORDer:B: :
Order the gradients and displacements vectors according to Schlegel prior to the
update of the Hessian. Default is no reorder.
:WINDow:B: :
Maximum number of previous iterations to include in the Hessian update. Default
is 5.
:Noline:B: :
Disable line search. Default is to use line search for minima.
:Rational:B: :
Activate geometry optimization using the restricted step Rational Functional
optimization, this is the default.
:C1-diis:A: :
Activate geometry optimization using the C1-GDIIS method. The default is to use
the Rational Functional approach.
:C2-diis:B: :
Activate geometry optimization using the C2-GDIIS method. The default is to use
the Rational Functional approach.
:dxdx:B: :
This option is associated to the use of the C1- and C2-GDIIS procedures. This
option will activate the computation of the so-called error matrix elements as
e=dx(T)dx, where dx is the displacement vector.
:dxg:B: :
This option is associated to the use of the C1- and C2-GDIIS procedures. This
option will activate the computation of the so-called error matrix elements as
e=dx(T)g, where dx is the displacement vector and g is the gradient vector.
:gdx:B: :
See the dxg keyword.
:gg:B: :
This option is associated to the use of the C1- and C2-GDIIS procedures. This
option will activate the computation of the so-called error matrix elements as
e=g(T)g, where g is the gradient vector. This is the default.
:Newton:B: :
Activate geometry optimization using the standard quasi-Newton approach. The
default is to use the Rational Functional approach.
:RS-P-RFO:B: :
Activate RS-P-RFO as default for TS-search. Default is RS-I-RFO.
:TS:B: :
Keyword for optimization of transition states. This flag will activate the use
of the mode following rational functional approach. The mode to follow can
either be the one with the lowest eigenvalue (if positive it will be changed to
a negative value) or by the eigenvector which index is specified by the MODE
keyword. The keyword will also activate the Murtagh-Sargent-Powell update of the
Hessian and inactivate line search. This keyword will also enforce that the
Hessian has the right index (i.e. one negative eigenvalue).
:Mode:A: :
Specification of the Hessian eigenvector index, this mode will be followed by
the mode following RF method for optimization of transition states. The keyword
card is followed by a single card specifying the eigenvector index.
:FindTS:B: :
Enable a constrained optimization to release the constraints and locate a
transition state if negative curvature is encountered and the gradient norm is
below a specific threshold (see the GNRM option). Keyword TSCOnstraints should
be used in combination with FINDTS.
:TSConstraints:B: :
Specify constraints that will be active during the initial stage of an
optimization with FINDTS. When a transition state region is reached these
constraints will be released. If this keyword is not used, all constraints will
be released.
:GNRM:B: :
Modify the gradient norm threshold associated with the FINDTS option. The actual
threshold is specified on the subsequent line. The default value is 0.2.
:MEP-search:B: :
Enable a minimum energy path (MEP) search. MEP is a valid synonym.
:MEP:B: :
Enable a minimum energy path (MEP) search. Synonym of MEP-search.
:RMEP-search:B: :
Enable a reverse minimum energy path (MEP) search.
:IRC:B: :
The keyword is used to perform an intrinsic reaction coordinate (IRC) analysis
of a transition state structure. The analysis will follow the reaction path
forward and backward until the energy increase. The keyword require that the
starting structure is that of a transition state and that the reaction vector is
specified explicitly (check the keyword "REACtion vector") or implicitly can be
found on RUNOLD. Note that the user should not specify any explicit constraints!
:NMEP:B: :
Maximum number of points to find in a minimum energy path search or intrinsic
reaction coordinate analysis. NIRC is a valid synonym.

Maximum number of points to find in an intrinsic reaction coordinate analysis or
minimum energy path search. Synonym of NMEP.
:MEPStep:B: :
The keyword is used to specify the step length done in the MEP search or IRC
analysis. The step length can be followed with the unit BOHR or ANGSTROM. The
default is 0.1 a.u. (in normalized mass-weighted coordinates). IRCStep is a
valid synonym.

The keyword is used to specify the step length done in the IRC analysis or MEP
search. The step length can be followed with the unit BOHR or ANGSTROM. The
default is 0.1 a.u. (in normalized mass-weighted coordinates). Synonym of
MEPStep.
:MEPType:A: :
Specifies what kind of constraint will be used for optimizing the points during
the MEP search or IRC analysis. The possibilities are SPHERE, the default, which
uses the Sphere constraint (each structure is at a given distance in coordinate
space from the reference), or PLANE which uses the Transverse constraint (each
structure is at a given distance from the hyperplane defined by the reference
and the path direction). The reference structure changes at each step, according
to the MEPAlgorithm keyword. IRCType is a valid synonym.

Specifies what kind of constraint will be used for optimizing the points during
the IRC analysis or MEP search. The possibilities are SPHERE, the default, which
uses the Sphere constraint (each structure is at a given distance in coordinate
space from the reference), or PLANE which uses the Transverse constraint (each
structure is at a given distance from the hyperplane defined by the reference
and the path direction). The reference structure changes at each step, according
to the IRCAlgorithm keyword. Synonym of MEPType.
:MEPAlgorithm:A: :
Selects the algorithm for a MEP search or IRC analysis. The possibilities are GS
for the Gonzalez-Schlegel algorithm, the default, or MB for the Mueller-Brown
algorithm. IRCAlgorithm is a valid synonym.

Selects the algorithm for a MEP search or IRC analysis. The possibilities are GS
for the Gonzalez-Schlegel algorithm, the default, or MB for the Mueller-Brown
algorithm. Synonym of MEPAlgorithm.
:MEPConvergence:A: :
Sets the gradient convergence for a MEP search or IRC analysis. The path will be
terminated when the gradient norm at an optimized point is below this threshold.
By default it is the same as the gradient threshold for the normal iterations,
specified with THRShld, it may be necessary to reduce it to follow a path on a
very flat surface. IRCConvergence is a valid synonym.

Sets the gradient convergence for a MEP search or IRC analysis. The path will be
terminated when the gradient norm at an optimized point is below this threshold.
By default it is the same as the gradient threshold for the normal iterations,
specified with THRShld, Synonym of MEPConvergence.
:REFErence:B: :
The keyword is followed by a list of the symmetry unique coordinates (in au) of
the origin of the hyper sphere. The default origin is the structure of the first
iteration.
:GRADient of reference:B: :
The keyword is followed by a list of the gradient vector components. This
keyword is compulsory when using the Transverse kind of constraint. The
optimization is performed in a space orthogonal to the given vector.
:REACtion vector:B: :
The keyword is followed by the reaction vector specified as the Cartesian vector
components on each of the symmetry unique atoms.
:Oldforce:A: :
The Hessian matrix is read from the file RUNOLD. This Hessian is either an
analytic or approximative Hessian updated by Slapaf. Note that for this option
to work properly the type of internal coordinates must be the same!
:Fconstant:A: :
Input of Hessian in internal coordinates. Note this is There are two different
syntaxes.

  1) The keyword is followed by an entry with the number of elements which will
     be set (observe that the update will preserve that the elements Hij and Hji
     are equal). The next lines will contain the value and the indices of the
     elements to be replaced.

  2) The keyword if followed by the label "Square" or "Triangular". The
     subsequent entry specifies the rank of the Hessian. This is then followed
     by entries specifying the Hessian in square or lower triangular order.
:XFConstant:B: :
Input of an external Hessian matrix in cartesian coordinates. The syntax is the
same as for the FCONSTANT keyword.
:Numerical:B: :
This invokes as calculation of the force constant matrix by a two-point finite
difference formula. The resulting force constant matrix is used for an analysis
of the harmonic frequencies. Observe that in case of the use of internal
coordinates defined as Cartesian coordinates that these has to be linear
combinations which are free from translational and rotational components for the
harmonic frequency analysis to be valid.
:Cubic:B: :
This invokes a calculation of the 2nd and the 3rd order force constant matrix by
finite difference formula.
:Delta:B: :
This keyword is followed by a real number which defines the step length used in
the finite differentiation. Default: 1.0D-2.
:PrFC:B: :
The eigenvalues and eigenvectors of the Hessian matrix are printed. The internal
coordinates definitions is also printed.
:rHid:A: :
Define the hidden atoms selection radius in order to improve a QM/MM Hessian.
:CTOF:A: :
Coordinates TO Follow defines an internal coordinate whose values will be
printed in the output during the optimization. Both the original and the new
values will be printed. The keyword must be followed by the definition on the
primitive coordinate.
:RTRN:A: :
Maximum number of atoms for which bond lengths, angles and dihedral angles are
listed, and the radius defining the maximum length of a bond follows on the next
line. The latter is used as a threshold when printing out angles and dihedral
angles. The length can be followed by "Bohr" or "Angstrom" which indicates the
unit in which the length was specified, the default is "Bohr".
:THER:A: :
Request frequencies to be computed followed by an user specified thermochemical
analysis. The keyword must be followed by different entries containing the
Rotational Symmetry Number, the Pressure (in atm), and one entry per Temperature
(in K) for which the thermochemistry will be calculated. The section is ended by
the keyword "End of PT".
:DISOtope:A: :
Calculates frequencies modified for double isotopic substitution.
:Track:B: :
Tries to follow electronic states during an optimization, by computing state
overlaps with RASSI.
:LAST:A: :
Specifies the quantum chemical method requested for the Last_Energy module
(e.g., SCF, CASSCF, CASPT2, etc.) The keyword must be followed by the name of
the module. Moreover, the EMIL command COPY needs to be used in the global input
to provide a file named LASTEN, containing the input for the specified module.
:NoLastEnergy:B: :
Disables the call to the Last_Energy module when convergence is achieved.
:Kriging:A: :
Activate restricted variance optimization (RVO) using gradient-enhanced Kriging
to describe the surrogate model.
:TFOFfset:A: :
Trend function or baseline offset for the GEK surrogate model. The surrogate
model will tend to the maximum energy among the sample points plus this value.
Default: 10.0 au.
:MAXDISP:A: :
Maximum energy dispersion allowed during each macro iteration of the RVO
procedure. A factor, multiplied by the maximum Cartesian Gradient. Default: 0.3
au.
:MXMI:A: :
Maximum number of micro iterations in each macro iteration of the RVO procedure.
Default: 50.
:NDELta:A: :
Activate partial gradient enhanced Kriging, PGEK. This integer number determines
for how many fewer iterations the gradients will be included in the PGEK
procedure. Default: 0.
[SURFACEHOP]
:Description:D
This module deals with surface hop semiclassical molecular dynamics (SHMD) and
has to be used together with module DYNAMIX. Its purpose is the calculation of
the relax root for the next step of the SHMD.
:TULLy:B: :
This keyword enables the Tully--Hammes-Schiffer integration of the TDSE for the
Tully Surface Hop Algorithm.
:DECOherence:A: :
This keyword must be used after the TULLY keyword. It enables the decoherence
correction in the population density matrix as reported by Persico-Granucci.
:SUBStep:A: :
This keyword must be used after the TULLY keyword. It specifies how many steps
of integration we use to interpolate/extrapolate between two Newton's
consecutive steps.
:PSUB:B: :
This keyword must be used after the TULLY keyword. To print in molcas output D
matrix, A matrix, B matrix, probabilities, randoms, population and energies at
each substep.
:DMTX:A: :
This keyword must be used after the TULLY keyword. Initial A matrix (population
density matrix). It is a complex matrix. In the first line after the keyword you
must specify its dimension N. Then N lines (with N values each line) with the
REAL part of the matrix followed by N more lines with the imaginary part.
:FRANdom:A: :
This keyword must be used after the TULLY keyword. It fixes the random number to
one provided by the user, in case a deterministic trajectory is needed.
:ISEEd:A: :
This keyword must be used after the TULLY keyword. The initial seed number is
read from the input file. Then, seed numbers are modified (in a deterministic
way), saved in the RunFile and read in the next call to the module. This way, MD
simulations are reproducible.
:MAXHop:A: :
This keyword must be used after the TULLY keyword. It specifies how many
non-adiabatic transitions are allowed between electronic states.
:H5REstart:A: :
Restarts a surface hopping trajectory calculation from an HDF5 file, whose name
is given on the next line.
[SYMMETRIZE]
:Description:D
This module is still undocumented
[VIBROT]
:Description:D
This program computes the vibrational-rotational spectrum of a diatomic
molecule. In addition, spectroscopic constants are computed. The program can
also compute transition probabilities and lifetimes for excited states.
:ROVIbrational:B: :
Perform a vib-rot analysis and compute spectroscopic constants.
:TRANsition:B: :
Compute transition moment integrals using previous vib-rot wave functions.
:ATOMs:B: :
Read the mass number and chemical symbol of the atoms from the next line. If the
mass number is zero the mass of the most abundant isotope will be used. Use a
negative mass number to input the mass (in unified atomic mass units) in the
next entry.
:POTEntial:B: :
Read the potential from a file (in au). Format: distance, value one pair on each
line. Only together with vib-rot calculation.
:TITLe:B: :
One single title line
:GRID:B: :
Give the number of numerical grid points (default is 199, max is 4999).
:RANGe:B: :
Give the range (Rmin-Rmax) in which the wave functions will be computed in
atomic units. Default is 1.0-5.0 au.
:VIBRational:B: :
Specify the number of vibrational quanta (default is 3).
:ROTAtional:B: :
Specify the range of rotational quantum numbers (default is 0-5).
:ORBItal:B: :
Specify the orbital angular momentum:, 0, 1, 2, ... (default is 0).
:SCALe:B: :
The potential will be scaled to a bond energy of 0.1 au.
:NOSPectroscopic:A: :
No calculation of spectroscopic constants.
:OBSErvable:B: :
Input for radial functions of observables (in au). The input is read from a
file. The user is asked to read the users guide to learn how to construct this
file.
:TEMPerature:A: :
Temperature for vibrational averaging of observables (default is 300 K).
:STEP:A: :
Give the starting value for the energy step used in bracketing eigenvalues.
Should be smaller than the zero point energy (default is 0.004 au).
:ASYMptotic:B: :
Specify the asymptotic energy difference between two potential curves in a
calculation of transition matrix elements (default is 0.00 au).
:ALLRotational:A: :
Include all rotational levels in a transition moments calculation.
:PRWF:A: :
Requests the vibrational wave functions to be printed.
[WFA]
:Description:D
The WFA program of the molcas program system provides various visual and
quantitative wavefunction analysis methods.
:H5FIle:B: :
Specifies the name of the HDF5 file used for reading and writing (e.g.
$Project.scf.h5, $Project.rasscf.h5, $Project.rassi.h5). You either have to use
this option or rename the file of interest to WFAH5.
:WFALevel:B: :
Select how much output is produced (0-4, default: 3).
:CTNUmmode:B: :
Define what properties are computed in a TheoDORE-style analysis. (0-3, default:
1).
:ATLIsts:B: :
Define the fragments in a TheoDORE-style analysis.
:REFState:B: :
Index of the reference state for 1TDM and 1DDM analysis.
:MULLiken:A: :
Activate Mulliken population analysis.
:LOWDin:A: :
Activate Lowdin population analysis.
:NXO:A: :
Activate NO, NTO, and NDO analysis.
:EXCIton:A: :
Activate exciton and multipole analysis.
:DOCTnumbers:A: :
Activate charge transfer number analysis and creation of *.om files.
:H5ORbitals:A: :
Print the NOs, NTOs, and/or NDOs to the HDF file.
:PROPlist:A: :
Manual input of properties to be printed out in a TheoDORE-style analysis.
:DEBUg:A: :
Print debug information.
:ADDInfo:A: :
Add info for verifications runs with molcas verify.
