*-------------------------------------------------------------------------------
* Molecule: H2O
* Basis: None
* Symmetry: C1
* Features tested: FALSE
* Responsible person: I. Fdez. GalvÃ¡n
* Comments: Geometry optimization with external program
*-------------------------------------------------------------------------------
&GATEWAY
  * Just one s function to keep GATEWAY happy
  Coord = 3

    O.ANO-S...1s -0.000000  0.000000  1.342757
    H.ANO-S...0s -1.929898  0.000000 -1.144049
    H.ANO-S...0s  1.929898  0.000000 -1.144049
  Group = NoSym
>>> DoWhile
&SEWARD
  OneOnly
&FALSE
  RUN = python3 LJ.py
&SLAPAF
>>> EndDo

>>> FILE LJ.py
# This script computes energies and gradients for a Lennard-Jones model
import sys
import math

infile = sys.argv[1]
outfile = sys.argv[2]

angstrom = 1.88972612462
kcalmol = 0.00159360143764

# ====================================
# From UFF  doi: 10.1021/ja00051a040
#        D_i             x_i
params = {
  'H':  [2.886*angstrom, 0.044*kcalmol],
  'HE': [2.362*angstrom, 0.056*kcalmol],
  'LI': [2.452*angstrom, 0.025*kcalmol],
  'BE': [2.745*angstrom, 0.085*kcalmol],
  'B':  [4.083*angstrom, 0.180*kcalmol],
  'C':  [3.851*angstrom, 0.105*kcalmol],
  'N':  [3.660*angstrom, 0.069*kcalmol],
  'O':  [3.500*angstrom, 0.060*kcalmol],
  'F':  [3.364*angstrom, 0.050*kcalmol],
  'NE': [3.243*angstrom, 0.042*kcalmol],
  'NA': [2.983*angstrom, 0.030*kcalmol],
  'MG': [3.021*angstrom, 0.111*kcalmol],
  'AL': [4.499*angstrom, 0.505*kcalmol],
  'SI': [4.295*angstrom, 0.402*kcalmol],
  'P':  [4.147*angstrom, 0.305*kcalmol],
  'S':  [4.035*angstrom, 0.274*kcalmol],
  'CL': [3.947*angstrom, 0.227*kcalmol],
  'AR': [3.868*angstrom, 0.185*kcalmol],
}

def LJ_grad(i, j):
  n_i = names[i]
  n_j = names[j]
  x_i = params[n_i][0]
  x_j = params[n_j][0]
  D_i = params[n_i][1]
  D_j = params[n_j][1]
  x_ij = (x_i+x_j)/2
  D_ij = math.sqrt(D_i*D_j)
  d = [b-a for a,b in zip(geo[i],geo[j])]
  r2 = sum([a**2 for a in d])
  x6 = x_ij**6/r2**3
  x12 = x6**2
  E = D_ij*(x12-2*x6)
  g = D_ij*(x6-x12)*12/r2
  vg = [-g*a for a in d]
  return E, vg
# ====================================

# Read input geometry
names = []
geo = []
with open(infile, 'r') as f:
  for line in f:
    if line.startswith('[XYZ]'):
      nAtoms = int(f.readline())
      f.readline()
      for i in range(nAtoms):
        l = f.readline().split()
        names.append(l[0].upper())
        geo.append([float(x)*angstrom for x in l[1:4]])

# Compute energy and gradient
E = 0
grad = [[0.0, 0.0, 0.0]] * nAtoms
for i in range(nAtoms):
  for j in range(i+1, nAtoms):
    E_ij, g_ij = LJ_grad(i,j)
    E += E_ij
    grad[i] = [a+b for a,b in zip(grad[i],g_ij)]
    grad[j] = [a-b for a,b in zip(grad[j],g_ij)]

# Write output
with open(outfile, 'w') as f:
  f.write('[ROOTS]\n')
  f.write('1\n')
  f.write('\n')
  f.write('[ENERGIES]\n')
  f.write(f'{E}\n')
  f.write('\n')
  f.write('[GRADIENT]\n')
  f.write('1\n')
  for i in range(nAtoms):
    f.write(f'{grad[i][0]} {grad[i][1]} {grad[i][2]}\n')
>>> EOF

>>FILE checkfile
* This file is autogenerated:
* Molcas version 19.11-1679-gd5eebe9f
* Linux otis 4.15.0-1073-oem #83-Ubuntu SMP Mon Feb 17 11:21:18 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
* Sun Sep 13 13:15:18 2020
*
#>>   1
#> POTNUC="2.826853703238"/12
#>>   2
#> POTNUC="2.826853703238"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.473513300497"/5
#>>   3
#>>   4
#>>   6
#> POTNUC="2.831416299494"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.473184087709"/5
#>>   7
#>>   8
#>>  10
#> POTNUC="2.842149835668"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.473071528525"/5
#>>  11
#>>  12
#>>  14
#> POTNUC="2.836436535785"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.472263264670"/5
#>>  15
#>>  16
#>>  18
#> POTNUC="2.832094374273"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.471623955568"/5
#>>  19
#>>  20
#>>  22
#> POTNUC="2.828793154091"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.471112306029"/5
#>>  23
#>>  24
#>>  26
#> POTNUC="2.826299394178"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.470699122101"/5
#>>  27
#>>  28
#>>  30
#> POTNUC="2.824442637365"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.470363103767"/5
#>>  31
#>>  32
#>>  34
#> POTNUC="2.823095203151"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.470088318346"/5
#>>  35
#>>  36
#>>  38
#> POTNUC="2.822159406833"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.469862607527"/5
#>>  39
#>>  40
#>>  42
#> POTNUC="2.821559154793"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.469676541870"/5
#>>  43
#>>  44
#>>  46
#> POTNUC="2.794421567165"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.464852118420"/5
#>>  47
#>>  48
#>>  50
#> POTNUC="2.816343614905"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.464947744867"/5
#>>  51
#>>  52
#>>  54
#> POTNUC="2.870399140012"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.473150344023"/5
#>>  55
#>>  56
#>>  58
#> POTNUC="2.816321784120"/6
#> SEWARD_MLTPL1X="0.0"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.466402499542"/5
#>>  59
#>>  60
#>>  62
#> POTNUC="2.831043285815"/6
#> SEWARD_MLTPL1X="0.000000000000"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.468852787913"/5
#>>  63
#>>  64
#>>  66
#> POTNUC="2.820973387719"/6
#> SEWARD_MLTPL1X="0.000000000000"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.467068599702"/5
#>>  67
#>>  68
#>>  70
#> POTNUC="2.822969786382"/6
#> SEWARD_MLTPL1X="0.000000000000"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.467297020177"/5
#>>  71
#>>  72
#>>  74
#> POTNUC="2.986044302903"/6
#> SEWARD_MLTPL1X="-0.000000000000"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.485937391258"/5
#>>  75
#>>  76
#>>  78
#> POTNUC="2.834575830677"/6
#> SEWARD_MLTPL1X="-0.000000000000"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.468646110236"/5
#>>  79
#>>  80
#>>  82
#> POTNUC="2.832995879890"/6
#> SEWARD_MLTPL1X="-0.000000000000"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.468473233591"/5
#>>  83
#>>  84
#> GEO_ITER="21"/8
#> POTNUC="2.833199718536"/6
#> SEWARD_MLTPL1X="-0.000000000000"/5
#> SEWARD_KINETIC="29.213922007819"/5
#> SEWARD_ATTRACT="-61.468504940888"/5
#>>  85
>>EOF
